{"scripts":"const EVENTSTYPE = [\n    {\n        event_name: 'Заявки на перевод',\n        event_code: 'transfer_application',\n        need_approval: false,\n        cancel_signatory: true,\n        start_settings_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n        start_settings_not_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n    },\n    {\n        event_name: 'Заявки на совмещения',\n        event_code: 'execution_duties',\n        need_approval: false,\n        cancel_signatory: true,\n        start_settings_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n        start_settings_not_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n    },\n    {\n        event_name: 'Отпуска/отсутствия',\n        event_code: 'vacations',\n        need_approval: false,\n        cancel_signatory: true,\n        start_settings_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n        start_settings_not_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n    },\n    {\n        event_name: 'Работа в нерабочее время',\n        event_code: 'overtime_work',\n        need_approval: false,\n        cancel_signatory: true,\n        start_settings_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n        start_settings_not_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n    },\n    {\n        event_name: 'Командировки',\n        event_code: 'businesstrip_requests',\n        need_approval: false,\n        cancel_signatory: true,\n        start_settings_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n        start_settings_not_staff: {\n            name: \"Без документов\",\n            code: \"not_documents\",\n        },\n    },\n];\nasync function createEvents() {\n    let promises = [];\n    const created_apps = await Context.fields.settings_cancel_documents.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(100).all();\n    for (const event of EVENTSTYPE) {\n        let app = created_apps.find(f =\u003e f.data.event_code == event.event_code);\n        if (!app) {\n            app = Context.fields.settings_cancel_documents.app.create();\n        }\n        app.data.event_name = event.event_name;\n        app.data.event_code = event.event_code;\n        app.data.need_approval = event.need_approval;\n        app.data.cancel_signatory = event.cancel_signatory;\n        app.data.start_settings_staff = app.fields.start_settings_staff.data.variants.find(e =\u003e e.code == event.start_settings_staff.code);\n        app.data.start_settings_not_staff = app.fields.start_settings_not_staff.data.variants.find(e =\u003e e.code == event.start_settings_not_staff.code);\n        promises.push(app.save());\n    }\n    await Promise.all(promises);\n}\n","gatewayPairs":{},"hasTranslations":false}
