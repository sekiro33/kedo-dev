{"scripts":"async function set_contract_filed() {\n    let order_for_transfer = await Context.data.order_for_transfer.fetch();\n    order_for_transfer.data.line_status = `${order_for_transfer.data.__status.code};${order_for_transfer.data.__status.name}`;\n    await order_for_transfer.save();\n}\nasync function createStatusObj(app, status) {\n    const obj_status = {\n        'app': {\n            'namespace': app.namespace,\n            'code': app.code,\n            'id': app.id,\n        },\n        'status': status,\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function createStatusAppChiefDocSigning() {\n    createStatusObj(Context.data.application_transfer, 'chief_doc_signing');\n}\nasync function createStatusAppStaffDocSigning() {\n    createStatusObj(Context.data.application_transfer, 'staff_doc_signing');\n}\nasync function createStatusAppPaperPrepare() {\n    createStatusObj(Context.data.application_transfer, 'paper_prepare');\n}\nasync function createStatusAppPaperSigned() {\n    createStatusObj(Context.data.application_transfer, 'paper_signed');\n}\nasync function createStatusAppCorrection() {\n    createStatusObj(Context.data.application_transfer, 'correction');\n}\nasync function createStatusAppOrderSigned() {\n    createStatusObj(Context.data.application_transfer, 'order_signed');\n}\nasync function createStatusCanceled() {\n    createStatusObj(Context.data.order_for_transfer, 'cancelled');\n}\nasync function createStatusChiefOrderSigning() {\n    createStatusObj(Context.data.order_for_transfer, 'chief_order_signing');\n}\nasync function createStatusStaffOrderSigning() {\n    createStatusObj(Context.data.order_for_transfer, 'staff_order_signing');\n}\nasync function createStatusSigned() {\n    createStatusObj(Context.data.order_for_transfer, 'signed');\n}\nasync function createStatusCorrection() {\n    createStatusObj(Context.data.order_for_transfer, 'correction');\n}\nasync function createStatusPaperPrepare() {\n    createStatusObj(Context.data.order_for_transfer, 'paper_prepare');\n}\nasync function createStatusPaperSigned() {\n    createStatusObj(Context.data.order_for_transfer, 'paper_signed');\n}\nasync function setDeadlineSigning() {\n    Context.data.deadline_signing = await System.productionSchedule.calcDate(new Datetime, new Duration(4, 'hours'));\n}\nasync function getSigners() {\n    var _a, _b, _c;\n    const kedo_settings = await Context.fields.kedo_settings.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('head_signing_notification')))\n        .first();\n    Context.data.head_signing_notification = kedo_settings ? kedo_settings.data.status : false;\n    const order = await ((_a = Context.data.order_for_transfer) === null || _a === void 0 ? void 0 : _a.fetch());\n    const staff = await ((_b = order === null || order === void 0 ? void 0 : order.data.staff) === null || _b === void 0 ? void 0 : _b.fetch());\n    const organization_staff = await ((_c = staff === null || staff === void 0 ? void 0 : staff.data.organization) === null || _c === void 0 ? void 0 : _c.fetch());\n    Context.data.signers_app = organization_staff === null || organization_staff === void 0 ? void 0 : organization_staff.data.signatories;\n}\n","gatewayPairs":{},"hasTranslations":false}
