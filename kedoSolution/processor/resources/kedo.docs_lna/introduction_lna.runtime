{"scripts":"async function staffs_get() {\n    const staff = await Context.data.staff.fetch();\n    Context.data.staff_user = staff.data.ext_user;\n    let position;\n    position = Context.data.position ? Context.data.position : staff.data.position;\n    const documents_pull = await Context.fields.docs_lna.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.positions_review.has(position), g.or(f.__status.eq(Context.fields.docs_lna.app.fields.__status.variants.approved), f.__status.eq(Context.fields.docs_lna.app.fields.__status.variants.current))))\n        .size(10000)\n        .all();\n    Context.data.all_docs_lna = documents_pull;\n    Context.data.docs_count = Context.data.all_docs_lna ? Context.data.all_docs_lna.length : 0;\n    Context.data.counter = 0;\n}\nasync function set_current_lna() {\n    if (Context.data.all_docs_lna \u0026\u0026 Context.data.all_docs_lna.length \u003e 0) {\n        Context.data.docs_lna = Context.data.all_docs_lna[0];\n        Context.data.all_docs_lna.splice(0, 1);\n        return true;\n    }\n    return false;\n}\nasync function get_doc() {\n    const start = Context.data.counter;\n    const end = Context.data.counter + 1;\n    Context.data.docs_lna = Context.data.all_docs_lna.slice(start, end)[0];\n    Context.data.counter = end;\n    const app = await Context.data.docs_lna.fetch();\n    Context.data.review_date = new Datetime().addDate(0, 0, app.data.familiarize_days || 1);\n}\nasync function add_lna_doc() {\n    if (Context.data.staff) {\n        const staff = await Context.data.staff.fetch();\n        if (Context.data.docs_lna) {\n            if (staff.data.list_sign_lna) {\n                staff.data.list_sign_lna.push(Context.data.docs_lna);\n            }\n            else {\n                staff.data.list_sign_lna = [];\n                staff.data.list_sign_lna.push(Context.data.docs_lna);\n            }\n            staff.data.list_sign_lna = staff.data.list_sign_lna;\n            await staff.save();\n            const lna = await Context.data.docs_lna.fetch();\n            const row_list = lna.data.list_acquaintances.insert();\n            row_list.staff = Context.data.staff;\n            row_list.date_review = new Datetime;\n            lna.data.list_acquaintances = lna.data.list_acquaintances;\n            await lna.save();\n        }\n    }\n}\nasync function addUserToGroup() {\n    const user = await Context.data.staff_user.fetch();\n    const staff = await Context.data.staff.fetch();\n    const readPermission = [new PermissionValue(user, [PermissionType.READ, PermissionType.ASSIGN, PermissionType.UPDATE, PermissionType.CREATE])];\n    await staff.setPermissions(new Permissions(readPermission));\n    let userIsHrOrAccounting = false;\n    if (staff.data.position \u0026\u0026 staff.data.organization) {\n        const organization = await staff.data.organization.fetch();\n        const hrPositions = organization.data.hr_department_positions ? organization.data.hr_department_positions.map(pos =\u003e pos.id) : undefined;\n        const accountingPositions = organization.data.accounting_positions ? organization.data.accounting_positions.map(pos =\u003e pos.id) : undefined;\n        if (hrPositions) {\n            const userIsHr = hrPositions.indexOf(staff.data.position.id) != -1;\n            if (userIsHr) {\n                const hrGroup = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq(\"abdecf4b-b6ba-419f-bac7-c1455d2a6159\"))).first();\n                if (hrGroup) {\n                    userIsHrOrAccounting = true;\n                    if (!organization.data.hr_department || organization.data.hr_department.length \u003c 1) {\n                        organization.data.hr_department = [staff];\n                    }\n                    else {\n                        organization.data.hr_department.push(staff);\n                    }\n                    ;\n                    await organization.save();\n                    await hrGroup.addItem(user);\n                    await hrGroup.save();\n                }\n                ;\n            }\n            ;\n        }\n        else if (accountingPositions) {\n            const userIsAccounting = accountingPositions.indexOf(staff.data.position.id) != -1;\n            if (userIsAccounting) {\n                const accountingGroup = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq(\"dfede5be-5011-4ec9-b535-8c9ca3fc4d19\"))).first();\n                if (accountingGroup) {\n                    if (!organization.data.accounting || organization.data.accounting.length \u003c 1) {\n                        organization.data.accounting = [staff];\n                    }\n                    else {\n                        organization.data.accounting.push(staff);\n                    }\n                    ;\n                    userIsHrOrAccounting = true;\n                    await organization.save();\n                    await accountingGroup.addItem(user);\n                    await accountingGroup.save();\n                }\n                ;\n            }\n        }\n    }\n    ;\n    if (staff.data.organization \u0026\u0026 staff.data.ext_user \u0026\u0026 !userIsHrOrAccounting) {\n        const org = await staff.fields.organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq(staff.data.organization.id))).first();\n        if (!org || !org.data.access_settings_organization) {\n            return;\n        }\n        ;\n        const orgRights = await org.fields.access_settings_organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq(org.data.access_settings_organization.id))).first();\n        if (staff.data.staff_access == false \u0026\u0026 orgRights) {\n            if (!orgRights.data.inner_org_users || orgRights.data.inner_org_users.length \u003c 1) {\n                return;\n            }\n            ;\n            const group = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq(orgRights.data.inner_org_users[0].code))).first();\n            const innerUsersGroup = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq(\"04df3ffc-9921-4854-abe1-59ec199212ae\"))).first();\n            if (innerUsersGroup) {\n                await innerUsersGroup.addItem(staff.data.ext_user);\n                await innerUsersGroup.save();\n            }\n            ;\n            if (group) {\n                await group.addItem(staff.data.ext_user);\n                await group.save();\n            }\n        }\n        else {\n            if (!orgRights.data.external_org_users || orgRights.data.external_org_users.length \u003c 1) {\n                return;\n            }\n            ;\n            const extUsersGroup = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq(\"e50cb6cb-ea63-4d4e-8585-eb234a070256\"))).first();\n            if (extUsersGroup) {\n                await extUsersGroup.addItem(staff.data.ext_user);\n                await extUsersGroup.save();\n            }\n            ;\n            const group = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq(orgRights.data.external_org_users[0].code))).first();\n            if (group) {\n                await group.addItem(staff.data.ext_user);\n                await group.save();\n            }\n            ;\n        }\n        ;\n    }\n    ;\n}\n;\n","gatewayPairs":{},"hasTranslations":false}
