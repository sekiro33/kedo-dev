{"scripts":"async function initializationVariables() {\n    if (!Context.data.app) {\n        const item_app = Context.data[\"__item\"];\n        Context.data.app = item_app;\n    }\n    if (!Context.data.staff) {\n        throw new Error(\"staff is undefined\");\n    }\n    const staff = await Context.data.staff.fetch();\n    if (staff) {\n        Context.data.staff_user = staff.data.ext_user;\n    }\n    Context.data.process_initiator_user = Context.data.__createdBy;\n    Context.data.agreement_name_cancel = \"\";\n    Context.data.agreement_full_name_cancel = \"\";\n    Context.data.order_name_cancel = \"\";\n    Context.data.order_full_name_cancel = \"\";\n    Context.data.full_doc_name = \"\";\n    Context.data.other_documents = [];\n    Context.data.other_documents_name = \"\";\n    Context.data.step = 0;\n}\nasync function get_kedo_settings() {\n    const settings = await Context.fields.settings_kedo.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    const integration_1c = settings.find(f =\u003e f.data.code == 'integration_1c');\n    Context.data.integration_1c = integration_1c ? integration_1c.data.status : false;\n}\nasync function getSettingsCancelApplication() {\n    const settings = await Namespace.app.settings_cancel_documents.search().where((f, g) =\u003e g.and(f.event_code.eq(Context.data.app.code), f.__deletedAt.eq(null))).first();\n    if (settings) {\n        if (Context.data.process_initiator_user \u0026\u0026 Context.data.staff_user) {\n            const user_staff = await Context.data.staff_user.fetch();\n            const user_initiator = await Context.data.process_initiator_user.fetch();\n            if (user_staff.data.__id == user_initiator.data.__id) {\n                Context.data.staff_process_initiator = true;\n                Context.data.settings_documents = settings.data.start_settings_staff;\n            }\n            else {\n                Context.data.staff_process_initiator = false;\n                Context.data.settings_documents = settings.data.start_settings_not_staff;\n            }\n        }\n        if (settings.data.cancel_signatory === true) {\n            Context.data.signatory_user = Context.data.__createdBy;\n            const signatory_user = await Context.data.signatory_user.fetch();\n            const signatory_staff = await Context.fields.signatory_app.app.search().where((f, g) =\u003e g.and(f.ext_user.eq(signatory_user), f.__deletedAt.eq(null))).first();\n            if (signatory_staff) {\n                Context.data.signatory_app = signatory_staff;\n            }\n        }\n        else {\n            Context.data.signatory_user = Context.data.staff_user;\n            Context.data.signatory_app = Context.data.staff;\n        }\n        Context.data.settings_cancel_documents = settings;\n        Context.data.need_approval = settings.data.need_approval;\n        if (settings.data.memo_file) {\n            Context.data.memo_file = settings.data.memo_file;\n        }\n        if (settings.data.statement_file) {\n            Context.data.statement_file = settings.data.statement_file;\n        }\n        if (settings.data.order_file) {\n            Context.data.order_file = settings.data.order_file;\n        }\n        if (settings.data.additional_agreement_file) {\n            Context.data.additional_agreement_file = settings.data.additional_agreement_file;\n        }\n    }\n}\nasync function fillContext() {\n    await initializationVariables();\n    await getSettingsCancelApplication();\n    if (Context.data.app) {\n        const app = await Context.data.app.fetch();\n        app.data.is_cancellation_process = true;\n        await app.save();\n        if (app.data.tickets_bought) {\n            Context.data.tickets_bought = app.data.tickets_bought;\n        }\n        if (app.data.payment_made_vacation) {\n            Context.data.payment_made_vacation = app.data.payment_made_vacation;\n        }\n        Context.data.app_name = app.data.__name;\n        Context.data.name_cancel_app = `Отмена документов: ${app.data.__name}`;\n        const arr_apps = [\n            app.data.dopolnitelnoe_soglashenie,\n            app.data.other_documents,\n            app.data.consent_processing_personal_data,\n            app.data.job_application,\n            app.data.labor_contract,\n            app.data.admission_order,\n            app.data.application_for_the_provision_of_information_about_labor_activity,\n            app.data.electronic_agreement,\n            app.data.execution_responsibilities_consent,\n            app.data.execution_responsibilities_note,\n            app.data.execution_responsibilities_order,\n            app.data.execution_responsibilities_additional_agreement,\n            app.data.additional_transfer_agreement,\n            app.data.transfer_approve,\n            app.data.linked_order,\n            app.data.letter_of_resignation,\n            app.data.dismissal_order,\n            app.data.recall_dismissal,\n            app.data.application_category_assignment,\n            app.data.child_personal_data_consent,\n            app.data.passport_data_application,\n            app.data.passport_data_change_order,\n            app.data.orders,\n            app.data.statements,\n            app.data.overtime_work,\n            app.data.vacation_schedule,\n            app.data.overtime_requests,\n            app.data.overtimeWorkOrders,\n            app.data.overtimeWorkNotifications,\n            app.data.overtimeWorkConsent,\n            app.data.overtime_order,\n            app.data.statement,\n            app.data.order,\n            app.data.finance_report_app,\n            app.data.service_assignments,\n            app.data.additional_agreements\n        ];\n        for (const arr_app of arr_apps) {\n            if (arr_app \u0026\u0026 arr_app.length \u003e 0) {\n                for (const arr_item of arr_app) {\n                    const fetch_app = await arr_item.fetch();\n                    Context.data.other_documents.push(arr_item);\n                    Context.data.other_documents_name += fetch_app.data.__name + '\\n';\n                    if (fetch_app.data.kedo_status) {\n                        const fetch_app_status = await fetch_app.data.kedo_status.fetch();\n                        if (fetch_app_status \u0026\u0026 (fetch_app_status.data.code == \"signed\" || fetch_app_status.data.code == \"staff_order_signing\" || fetch_app_status.data.code == \"paper_signed\")) {\n                            if (arr_item.code == 'dopolnitelnoe_soglashenie' || arr_item.code == 'additional_transfer_agreement' ||\n                                arr_item.code == 'execution_responsibilities_additional_agreement') {\n                                Context.data.application_agreement_signed = true;\n                                Context.data.agreement_name_cancel += fetch_app.data.__name + '\\n';\n                                Context.data.agreement_full_name_cancel += `\"${fetch_app.data.__name}\"${fetch_app.data.order_number ? ` №${fetch_app.data.order_number}` : ''}${fetch_app.data.order_date ? ` от ${fetch_app.data.order_date.format('DD.MM.YYYY')}` : ''};\\n`;\n                            }\n                            else {\n                                Context.data.application_order_signed = true;\n                                Context.data.order_name_cancel += fetch_app.data.__name + '\\n';\n                                Context.data.order_full_name_cancel += `\"${fetch_app.data.__name}\"${fetch_app.data.order_number ? ` №${fetch_app.data.order_number}` : ''}${fetch_app.data.order_date ? ` от ${fetch_app.data.order_date.format('DD.MM.YYYY')}` : ''};\\n`;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (arr_app \u0026\u0026 !Array.isArray(arr_app)) {\n                const fetch_app = await arr_app.fetch();\n                Context.data.other_documents.push(arr_app);\n                Context.data.other_documents_name += fetch_app.data.__name + '\\n';\n                if (fetch_app.data.kedo_status) {\n                    const fetch_app_status = await fetch_app.data.kedo_status.fetch();\n                    if (fetch_app_status \u0026\u0026 (fetch_app_status.data.code == \"signed\" || fetch_app_status.data.code == \"staff_order_signing\" || fetch_app_status.data.code == \"paper_signed\")) {\n                        if (arr_app.code == 'dopolnitelnoe_soglashenie' || arr_app.code == 'additional_transfer_agreement' ||\n                            arr_app.code == 'execution_responsibilities_additional_agreement') {\n                            Context.data.application_agreement_signed = true;\n                            Context.data.agreement_name_cancel += fetch_app.data.__name + '\\n';\n                            Context.data.agreement_full_name_cancel += `\"${fetch_app.data.__name}\"${fetch_app.data.order_number ? ` №${fetch_app.data.order_number}` : ''}${fetch_app.data.order_date ? ` от ${fetch_app.data.order_date}` : ''};\\n`;\n                        }\n                        else {\n                            Context.data.application_order_signed = true;\n                            Context.data.order_name_cancel += fetch_app.data.__name + '\\n';\n                            Context.data.order_full_name_cancel += `\"${fetch_app.data.__name}\"${fetch_app.data.order_number ? ` №${fetch_app.data.order_number}` : ''}${fetch_app.data.order_date ? ` от ${fetch_app.data.order_date}` : ''};\\n`;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nasync function processesInterrupt() {\n    if (Context.data.staff_user \u0026\u0026 Context.data.director_user) {\n        const activeProcessTemplate = await System.processes._searchInstances()\n            .where((f, g) =\u003e g.and(g.or(f.__state.like(ProcessInstanceState.exec), f.__state.like(ProcessInstanceState.error), f.__state.like(ProcessInstanceState.wait)), g.or(f.__createdBy.eq(Context.data.staff_user), f.__createdBy.eq(Context.data.director_user)), f['__item'].eq(Context.data.app), f.__id.neq(Context.data.__id))).size(100).all();\n        const interrupProcess = activeProcessTemplate.map(process =\u003e process.interrupt(`${process.data.__name} был прерван по причине отмены документа(-ов)`));\n        await Promise.all(interrupProcess);\n    }\n}\nasync function changeStatusOtherDocuments() {\n    if (Context.data.other_documents \u0026\u0026 Context.data.other_documents.length \u003e 0) {\n        Context.data.other_document = Context.data.other_documents[Context.data.step];\n        Context.data.step += 1;\n        if (Context.data.step == (Context.data.other_documents.length)) {\n            Context.data.end_processing_documents = true;\n        }\n    }\n    else {\n        Context.data.end_processing_documents = true;\n    }\n}\nasync function updateApp() {\n    if (Context.data.app) {\n        const app = await Context.data.app.fetch();\n        app.data.is_cancellation_process = false;\n        await app.save();\n    }\n}\nasync function updateContextResigning() {\n    Context.data.again_send = true;\n    Context.data.signing_error = undefined;\n}\nasync function updateContextDecide() {\n    Context.data.signing_error = 'Не подписаны документы в бумаге.';\n}\nasync function updateContextSigningPaper() {\n    Context.data.signing_error = undefined;\n}\nasync function updateContextSigning() {\n    Context.data.signing_error = 'Не подписаны документы.';\n}\nasync function checkSignedParam() {\n    if ((Context.data.order_is_signed === false \u0026\u0026 Context.data.application_order_signed === true) || (Context.data.agreement_is_signed === false \u0026\u0026 Context.data.application_agreement_signed === true)) {\n        return true;\n    }\n    return false;\n}\n","gatewayPairs":{"/items/25ef04b6-7bf0-4f05-984c-ead148fe96cd":"/items/f3511626-a57b-4414-a308-fb11b062f9df","/items/33056b22-bc6e-4588-aa81-b03d615bea39":"/items/d943a14a-1436-4040-8065-5392f1a147f4","/items/eecb4a93-2f72-4557-8a7c-2f8ee026a9b2":"/items/e4847851-b86f-48d5-885b-0cdc21363404","/items/ff546504-922e-483d-9c3f-826733a1d844":"/items/6e6d4878-65c7-41b6-9a6a-058a0de0c729"},"hasTranslations":false}
