{"scripts":"async function getSettingsKedo() {\n    const settings = await Context.fields.settings_kedo.app.search()\n        .where(field =\u003e field.__deletedAt.eq(null))\n        .size(10000)\n        .all();\n    const automatic_reissue = settings.find(field =\u003e field.data.code == 'automatic_reissue_certificates');\n    Context.data.automatic_reissue_active = automatic_reissue ? automatic_reissue.data.status : false;\n    Context.data.days_offset = automatic_reissue ? automatic_reissue.data.quantity : 7;\n}\nasync function getCertificates() {\n    var _a;\n    Context.data.staff_list = [];\n    const days_offset = (_a = Context.data.days_offset) !== null \u0026\u0026 _a !== void 0 ? _a : 7;\n    const current_date = new Datetime();\n    const users = await System.users.search()\n        .where(field =\u003e field.__deletedAt.eq(null))\n        .size(10000)\n        .all();\n    const staffs = await Context.fields.staff.app.search()\n        .where(field =\u003e field.__deletedAt.eq(null))\n        .size(10000)\n        .all();\n    const signsAll = await System.signs.digitalSigns.search()\n        .where((field, group) =\u003e group.and(field.__deletedAt.eq(null), field.cert_status.like(\"released\")))\n        .size(10000)\n        .all();\n    for (let user of users) {\n        let user_sing;\n        const signs = signsAll.filter(field =\u003e field.data.__createdBy.id === user.id);\n        if (signs \u0026\u0026 signs.length \u003e 0) {\n            const sortSigns = signs.sort((itemFirst, itemSecond) =\u003e Date.parse(itemSecond.data.validUntilAt.format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\")) - Date.parse(itemFirst.data.validUntilAt.format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\")));\n            user_sing = sortSigns[0];\n            if (user_sing \u0026\u0026 user_sing.data.validUntilAt) {\n                const currection_date = user_sing.data.validUntilAt.add(new Duration(-days_offset, 'days'));\n                if (current_date.beforeOrEqual(user_sing.data.validUntilAt) \u0026\u0026 current_date.afterOrEqual(currection_date)) {\n                    const staff = staffs.find(field =\u003e { var _a; return ((_a = field.data.ext_user) === null || _a === void 0 ? void 0 : _a.id) == user.id; });\n                    if (staff) {\n                        Context.data.staff_list.push(staff);\n                    }\n                }\n            }\n        }\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
