{"scripts":"async function getSettingsKedo() {\n    const settings = await Context.fields.settings_kedo.app.search()\n        .where(field =\u003e field.__deletedAt.eq(null))\n        .size(10000)\n        .all();\n    const automatic_reissue = settings.find(field =\u003e field.data.code == 'automatic_reissue_certificates');\n    Context.data.automatic_reissue_active = automatic_reissue ? automatic_reissue.data.status : false;\n    Context.data.days_offset = automatic_reissue ? automatic_reissue.data.quantity : 7;\n}\nasync function getCertificates() {\n    var _a;\n    Context.data.staff_list = [];\n    const days_offset = (_a = Context.data.days_offset) !== null \u0026\u0026 _a !== void 0 ? _a : 7;\n    const users = await System.users.search()\n        .where(field =\u003e field.__createdAt.eq(null))\n        .size(10000)\n        .all();\n    const current_date = new Datetime();\n    const signs = await System.signs.digitalSigns.search()\n        .where((field, group) =\u003e group.and(field.__createdAt.eq(null), field.cert_status.like(\"released\")))\n        .size(10000)\n        .all();\n    if (signs \u0026\u0026 signs.length \u003e 0) {\n        for (let item of signs) {\n            const user = users.find(field =\u003e field.id === item.data.__createdBy.id);\n            if (user) {\n                const staff = await Context.fields.staff.app.search()\n                    .where((field, group) =\u003e group.and(field.ext_user.eq(user), field.__deletedAt.eq(null)))\n                    .first();\n                if (staff \u0026\u0026 item.data.validUntilAt) {\n                    const currection_date = item.data.validUntilAt.add(new Duration(-days_offset, 'days'));\n                    if (user \u0026\u0026 (current_date.beforeOrEqual(item.data.validUntilAt) \u0026\u0026 current_date.afterOrEqual(currection_date))) {\n                        const row = Context.data.certs_info_table.insert();\n                        row.user = user;\n                        row.end_date = item.data.validUntilAt;\n                        row.currect_date = currection_date;\n                        Context.data.staff_list.push(staff);\n                    }\n                }\n            }\n        }\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
