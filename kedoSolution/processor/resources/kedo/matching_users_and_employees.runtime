{"scripts":"async function getAllEmployee() {\n    var _a, _b, _c;\n    if (!Context.data.offset_iterations) {\n        Context.data.offset_iterations = 0;\n    }\n    const size_iterations = 100;\n    let resultEmployee = [];\n    let appSearchEmployee = Context.fields.staff.app.search();\n    try {\n        const items = await appSearchEmployee.where(f =\u003e f.ext_user.eq(null)).sort(\"__createdAt\", true)\n            .size(100)\n            .from(Context.data.offset_iterations)\n            .all();\n        resultEmployee.push(...items);\n    }\n    catch (e) {\n        Context.data.string_error = e.message;\n        return;\n    }\n    if (!Context.data.count_users) {\n        Context.data.count_users = 0;\n    }\n    for (let row_employee of resultEmployee) {\n        let fio = ((_a = row_employee.data.full_name) === null || _a === void 0 ? void 0 : _a.lastname) + ' ' + ((_b = row_employee.data.full_name) === null || _b === void 0 ? void 0 : _b.firstname);\n        if ((_c = row_employee.data.full_name) === null || _c === void 0 ? void 0 : _c.middlename) {\n            fio = fio + ' ' + row_employee.data.full_name.middlename;\n        }\n        let find_user = await System.users.search().where(f =\u003e f.__name.eq(fio)).first();\n        if (find_user) {\n            if ((find_user.data.email \u0026\u0026 row_employee.data.email \u0026\u0026 (find_user.data.email == row_employee.data.email.email)) ||\n                (find_user.data.workPhone \u0026\u0026 row_employee.data.phone \u0026\u0026 (find_user.data.workPhone == row_employee.data.phone)) ||\n                (find_user.data.mobilePhone \u0026\u0026 row_employee.data.phone \u0026\u0026 (find_user.data.mobilePhone.tel == row_employee.data.phone.tel))) {\n                row_employee.data.ext_user = find_user;\n                Context.data.is_matching = true;\n                Context.data.count_users = Context.data.count_users + 1;\n                await row_employee.save();\n            }\n        }\n    }\n    if (resultEmployee.length \u003c size_iterations) {\n        Context.data.end_processing = true;\n    }\n    else {\n        Context.data.offset_iterations += 100;\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
