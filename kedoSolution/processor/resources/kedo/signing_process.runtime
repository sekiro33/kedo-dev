{"scripts":"async function set_xml() {\n    let doc;\n    if (Context.data.personel_document) {\n        const pd = await Context.data.personel_document.fetch();\n        doc = await pd.data.__sourceRef.fetch();\n    }\n    if (Context.data.document_for_employment) {\n        const de = await Context.data.document_for_employment.fetch();\n        doc = await de.data.__sourceRef.fetch();\n    }\n    if (doc) {\n        doc.data.xml_file = Context.data.xml_file;\n        await doc.save();\n    }\n}\nasync function set_signed_status() {\n    let doc;\n    if (Context.data.personel_document) {\n        const pd = await Context.data.personel_document.fetch();\n        doc = await pd.data.__sourceRef.fetch();\n    }\n    if (Context.data.document_for_employment) {\n        const de = await Context.data.document_for_employment.fetch();\n        doc = await de.data.__sourceRef.fetch();\n    }\n    if (doc.fields.__status \u0026\u0026 doc.fields.__status.variants.signed) {\n        await doc.setStatus(doc.fields.__status.variants.signed);\n    }\n}\nasync function set_rejected_status() {\n    let doc;\n    if (Context.data.personel_document) {\n        const pd = await Context.data.personel_document.fetch();\n        doc = await pd.data.__sourceRef.fetch();\n    }\n    if (Context.data.document_for_employment) {\n        const de = await Context.data.document_for_employment.fetch();\n        doc = await de.data.__sourceRef.fetch();\n    }\n    if (doc.fields.__status \u0026\u0026 doc.fields.__status.variants.rejected) {\n        await doc.setStatus(doc.fields.__status.variants.rejected);\n    }\n}\nasync function set_on_sign_status() {\n    let doc;\n    if (Context.data.personel_document) {\n        const pd = await Context.data.personel_document.fetch();\n        doc = await pd.data.__sourceRef.fetch();\n    }\n    if (Context.data.document_for_employment) {\n        const de = await Context.data.document_for_employment.fetch();\n        doc = await de.data.__sourceRef.fetch();\n    }\n    if (doc.fields.__status \u0026\u0026 doc.fields.__status.variants.signing) {\n        await doc.setStatus(doc.fields.__status.variants.signing);\n    }\n}\nasync function add_to_signers_group() {\n    const signers_group = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq('721d2836-3d06-42ec-ac3d-e8002d2d897e'))).first();\n    if (signers_group) {\n        signers_group.addItem(Context.data.staff_chief);\n        await signers_group.save();\n    }\n}\nasync function delete_from_signers_group() {\n    const signers_group = await System.userGroups.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__id.eq('721d2836-3d06-42ec-ac3d-e8002d2d897e'))).first();\n    const subOrgunitIds = signers_group.data.subOrgunitIds;\n    subOrgunitIds.filter(f =\u003e f != Context.data.staff_chief.id);\n    signers_group.data.subOrgunitIds = subOrgunitIds;\n}\nasync function line_status_set() {\n    let doc;\n    if (Context.data.personel_document) {\n        const pd = await Context.data.personel_document.fetch();\n        doc = await pd.data.__sourceRef.fetch();\n    }\n    if (Context.data.document_for_employment) {\n        const de = await Context.data.document_for_employment.fetch();\n        doc = await de.data.__sourceRef.fetch();\n    }\n    doc.data.line_status = `${doc.data.__status.code};${doc.data.__status.name}`;\n    await doc.save();\n}\nasync function generate_alert() {\n    Context.data.alert_body_email = `Вам поступил документ на подписание на портале КЭДО. Подпишите документ до ${Context.data.limit.format('DD.MM.YYYY HH:mm')}.`;\n    Context.data.alert_body_sms = `Вам поступил документ на подписание на портале КЭДО. Подпишите документ до ${Context.data.limit.format('DD.MM.YYYY HH:mm')}. (ссылка)`;\n}\nasync function calcOverdueDate() {\n    const overdue_date = await System.productionSchedule.calcDate(new Datetime(), new Duration(1, \"days\"));\n    Context.data.limit = overdue_date;\n}\n","gatewayPairs":{},"hasTranslations":false}
