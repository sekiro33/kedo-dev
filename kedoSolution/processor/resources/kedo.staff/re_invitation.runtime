{"scripts":"async function refreshLink() {\n    let external_user = (await Context.data.staff.fetch()).data.external_user;\n    Context.data.invitation_link_for_new_user = await Namespace.factory.Global.ns.kedo_ext.portal.signupUrl((await external_user[0].fetch()), { refresh: true });\n    await interlal_user_link();\n}\nasync function ext_user_check() {\n    let staff = await Context.data.staff.fetch();\n    let ext_user = staff.data.ext_user;\n    if (!staff.data.external_user)\n        return false;\n    let external_user = await staff.data.external_user[0].fetch();\n    if (ext_user \u0026\u0026 external_user.data.__user_status == external_user.fields.__user_status.variants.active)\n        return true;\n    return false;\n}\nasync function interlal_user_link() {\n    try {\n        let user = await Context.data.staff.fetch();\n        let entity = undefined;\n        if (user.data.entity)\n            entity = await user.data.entity.fetch();\n        Context.data.alert_body =\n            `Приглашаем вас на портал обмена кадровыми электронными документами ${entity === null || entity === void 0 ? void 0 : entity.data.__name}.\n    На портале вы сможете создавать и подписывать кадровые документы в электронном виде.\n    Перейдите по ссылке и пройдите процедуру трудоустройства на портале.`;\n    }\n    catch (e) {\n        Context.data.staff.sendMessage('Ошибка при генерации приглашения', 'Ошибка ' + e.name + \":\" + e.message);\n        throw (e);\n    }\n}\nasync function user_check() {\n    let staff = await Context.data.staff.fetch();\n    if (!staff.data.staff_access)\n        return false;\n    return true;\n}\n","gatewayPairs":{},"hasTranslations":false}
