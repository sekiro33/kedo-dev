{"scripts":"async function setDocsPermissions() {\n    Context.data.docs = [];\n    const contract = await Namespace.app.labor_contract.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff.link(Context.data.staff), f.__status.neq(Namespace.app.labor_contract.fields.__status.variants.removed), f.__status.neq(Namespace.app.labor_contract.fields.__status.variants.signed)))\n        .first();\n    Context.data.docs = Context.data.docs.concat(contract || []);\n    const admission_order = await Namespace.app.admission_order.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff.link(Context.data.staff), f.__status.neq(Namespace.app.admission_order.fields.__status.variants.removed), f.__status.neq(Namespace.app.admission_order.fields.__status.variants.signed)))\n        .first();\n    Context.data.docs = Context.data.docs.concat(admission_order || []);\n    const other_docs = await Namespace.app.additional_agreement_to_the_contract.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff.link(Context.data.staff), f.__status.neq(Namespace.app.additional_agreement_to_the_contract.fields.__status.variants.removed), f.__status.neq(Namespace.app.additional_agreement_to_the_contract.fields.__status.variants.signed)))\n        .size(10000)\n        .all();\n    const typesDocs = await Namespace.app.types_other_employment_docs.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    if (other_docs \u0026\u0026 other_docs.length \u003e 0) {\n        const myOtherDocs = other_docs.filter(f =\u003e {\n            if (!f.data.doc_type) {\n                return;\n            }\n            ;\n            const myType = typesDocs.find(i =\u003e i.id == f.data.doc_type.id);\n            if (myType \u0026\u0026 myType.data.only_employee_signs != true)\n                return f;\n        });\n        Context.data.docs = Context.data.docs.concat(myOtherDocs || []);\n    }\n    const additional_agreement = await Namespace.app.additional_agreement.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff.link(Context.data.staff), f.__status.neq(Namespace.app.additional_agreement.fields.__status.variants.signed)))\n        .size(10000)\n        .all();\n    Context.data.docs = Context.data.docs.concat(additional_agreement || []);\n}\nasync function getSigners() {\n    var _a, _b;\n    const kedo_settings = await Context.fields.kedo_settings.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('head_signing_notification')))\n        .first();\n    Context.data.head_signing_notification = kedo_settings ? kedo_settings.data.status : false;\n    const staff = await ((_a = Context.data.staff) === null || _a === void 0 ? void 0 : _a.fetch());\n    const organization_staff = await ((_b = staff === null || staff === void 0 ? void 0 : staff.data.organization) === null || _b === void 0 ? void 0 : _b.fetch());\n    Context.data.signers_app = organization_staff === null || organization_staff === void 0 ? void 0 : organization_staff.data.signatories;\n}\n","gatewayPairs":{},"hasTranslations":false}
