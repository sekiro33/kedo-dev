{"scripts":"async function category_assignment() {\n    if (Context.data.staff) {\n        let staff = await Context.data.staff.fetch();\n        let row = staff.data.categories_table.insert();\n        row.staff_categories = Context.data.staff_categories;\n        row.assignment_date = Context.data.assignment_date;\n        row.expiration_date = Context.data.expiration_date;\n        if (Context.data.vacation_invalid_child_days != 0) {\n            if (staff.data.vacation_invalid_child_days == undefined || staff.data.vacation_invalid_child_days == 0) {\n                staff.data.vacation_invalid_child_days = 0;\n            }\n            staff.data.vacation_invalid_child_days += Context.data.vacation_invalid_child_days;\n        }\n        await staff.save();\n    }\n    if (Context.data.staffs \u0026\u0026 Context.data.staffs.length \u003e 0) {\n        let promises = [];\n        let staffs = await Promise.all(Context.data.staffs.map(item =\u003e item.fetch()));\n        for (let item of staffs) {\n            let row = item.data.categories_table.insert();\n            row.staff_categories = Context.data.staff_categories;\n            row.assignment_date = Context.data.assignment_date;\n            row.expiration_date = Context.data.expiration_date;\n            if (Context.data.vacation_invalid_child_days != 0) {\n                if (item.data.vacation_invalid_child_days == undefined || item.data.vacation_invalid_child_days == 0) {\n                    item.data.vacation_invalid_child_days = 0;\n                }\n                item.data.vacation_invalid_child_days += Context.data.vacation_invalid_child_days;\n            }\n            promises.push(item.save());\n        }\n        await Promise.all([promises]);\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
