{"scripts":"async function searchIntegrationApps() {\n    if (!Context.data.staff) {\n        throw new Error(\"Context.data.staff is undefined\");\n    }\n    if (!Context.data.integration_apps) {\n        Context.data.integration_apps = [];\n    }\n    const received_status = Context.fields.integration_apps.app.fields.__status.variants.received;\n    const integration_apps = await Context.fields.integration_apps.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__status.eq(received_status), f.processed_elma.eq(false)))\n        .size(10000)\n        .sort(\"__createdAt\", true)\n        .all();\n    const staff = await Context.data.staff.fetch();\n    const promises = [];\n    for (const app of integration_apps) {\n        if (!app.data.personal_guid_1c) {\n            continue;\n        }\n        const personal_guid_1c = JSON.parse(app.data.personal_guid_1c);\n        if (personal_guid_1c.find(f =\u003e f == staff.data.id_1c) || personal_guid_1c.find(f =\u003e f == staff.data.individual_id_1c)) {\n            Context.data.integration_apps.push(app);\n            app.data.processed_elma = true;\n            if (app.data.__name == 'ПриемНаРаботу') {\n                Context.data.labor_contract_date = app.data.document_date;\n                Context.data.labor_contract_number = app.data.document_number;\n            }\n            promises.push(app.save());\n        }\n    }\n    await Promise.all(promises);\n}\nasync function checkIntegrationApps() {\n    return Context.data.integration_apps != undefined \u0026\u0026 Context.data.integration_apps.length \u003e 0;\n}\nasync function checkPrintForms() {\n    return Context.data.print_forms_table != undefined \u0026\u0026 Context.data.print_forms_table.length \u003e 0;\n}\nasync function handlePrintForms() {\n    const print_forms = Context.data.print_forms_table;\n    for (const row of print_forms) {\n        const doc_type = await row.doc_type_1c.fetch();\n        const app_code = doc_type.data.app_code;\n        if (Context.fields[`${app_code}_file`]) {\n            Context.data[`${app_code}_file`] = row.file;\n        }\n        if (app_code === \"additional_agreement\") {\n            pushAdditionalAgreement(row.file);\n        }\n        if (app_code == \"additional_agreement_to_the_contract\") {\n            pushAdditionalAgreementContract(row.file);\n        }\n    }\n}\nfunction pushAdditionalAgreementContract(file) {\n    const additional_agreement_to_the_contract_table = Context.data.additional_agreement_to_the_contract_table;\n    const row = additional_agreement_to_the_contract_table.insert();\n    row.file = file;\n}\nfunction pushAdditionalAgreement(file) {\n    const additional_agreement = Context.data.additional_agreement_table;\n    const row = additional_agreement.insert();\n    row.file = file;\n}\nasync function fillResponsibleFio() {\n    if (!Context.data.responsible) {\n        throw new Error(\"Context.data.responsible is undefined\");\n    }\n    const responsible = await Context.data.responsible.fetch();\n    const full_name = responsible.data.fullname;\n    const formatted_name = responsible.data.responsible = (full_name === null || full_name === void 0 ? void 0 : full_name.middlename) ?\n        `${full_name === null || full_name === void 0 ? void 0 : full_name.lastname} ${full_name === null || full_name === void 0 ? void 0 : full_name.firstname[0]}. ${full_name === null || full_name === void 0 ? void 0 : full_name.middlename[0]}.` :\n        `${full_name === null || full_name === void 0 ? void 0 : full_name.lastname} ${full_name === null || full_name === void 0 ? void 0 : full_name.firstname[0]}`;\n    Context.data.fio_responsible = formatted_name;\n}\nasync function getLaborContractNumber() {\n    if (!Context.data.labor_contract) {\n        Context.data.labor_contract_number = \"1\";\n        return;\n    }\n    const labor_contract = await Context.data.labor_contract.fetch();\n    if (!labor_contract.data.__index) {\n        Context.data.labor_contract_number = \"1\";\n        return;\n    }\n    Context.data.labor_contract_number = labor_contract.data.__index.toString();\n}\nasync function getOrderNumber() {\n    if (!Context.data.admission_order) {\n        Context.data.labor_contract_number = \"1\";\n        return;\n    }\n    const admission_order = await Context.data.admission_order.fetch();\n    if (!admission_order.data.__index) {\n        Context.data.admission_order_number = \"1\";\n        return;\n    }\n    Context.data.admission_order_number = admission_order.data.__index.toString();\n}\nasync function checkAdditionalAgreementTable() {\n    if (!Context.data.additional_agreement_table || Context.data.additional_agreement_table.length == 0) {\n        return false;\n    }\n    if (Context.data.row_counter \u003c Context.data.additional_agreement_table.length) {\n        return true;\n    }\n    return false;\n}\nasync function checkOtherEmploymentsDocsTable() {\n    if (!Context.data.additional_agreement_to_the_contract_table || Context.data.additional_agreement_to_the_contract_table.length == 0) {\n        return false;\n    }\n    if (Context.data.row_counter \u003c Context.data.additional_agreement_to_the_contract_table.length) {\n        return true;\n    }\n    return false;\n}\nasync function getAdditionalAgreementFile() {\n    var _a;\n    const index = (_a = Context.data.row_counter) !== null \u0026\u0026 _a !== void 0 ? _a : 0;\n    const row = Context.data.additional_agreement_table[index];\n    const file = await row.file.fetch();\n    Context.data.file = file;\n    Context.data.file_name = file.data.__name.replace(/\\.[^.$]+$/, '');\n}\nasync function getOtherEmploymentDocFile() {\n    var _a;\n    const index = (_a = Context.data.row_counter) !== null \u0026\u0026 _a !== void 0 ? _a : 0;\n    const row = Context.data.additional_agreement_to_the_contract_table[index];\n    const file = await row.file.fetch();\n    Context.data.file = file;\n    Context.data.file_name = file.data.__name.replace(/\\.[^.$]+$/, '');\n    Context.data.types_other_employment_docs = row.doc_type;\n}\nasync function incCounter() {\n    Context.data.row_counter += 1;\n}\nasync function resetCounter() {\n    Context.data.row_counter = 0;\n}\nasync function setIdProcess() {\n    if (Context.data.staff) {\n        const staff = await Context.data.staff.fetch();\n        if (staff \u0026\u0026 staff.data.id_process_recruitment \u0026\u0026 staff.data.id_process_recruitment.length \u003e 0) {\n            staff.data.id_process_recruitment += ',' + '018e56d4-5c9b-7280-a13d-0fc993812d5d';\n        }\n        else {\n            staff.data.id_process_recruitment = Context.data.__id;\n        }\n        await staff.save();\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
