{"scripts":"async function data_calculation() {\n    const promises = [];\n    let current_date = new TDate();\n    Context.data.debug = '';\n    Context.data.debug += current_date.format('YYYY-MM-DD') + '\\n';\n    let category = await Context.fields.staff.app.fields.staff_categories.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('invalid_child'))).first();\n    let staffs = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n    if (category) {\n        for (let staff of staffs) {\n            if (staff.data.categories_table) {\n                staff.data.categories_table.map(item =\u003e {\n                    if (item.staff_categories.id == category.id) {\n                        if (staff.data.vacation_invalid_child_days == undefined) {\n                            staff.data.vacation_invalid_child_days = 0;\n                        }\n                        ;\n                        if (staff.data.full_name \u0026\u0026 staff.data.full_name.firstname \u0026\u0026 staff.data.full_name.lastname) {\n                            Context.data.debug += staff.data.full_name.firstname + ' ' + staff.data.full_name.lastname + '\\n';\n                        }\n                        staff.data.vacation_invalid_child_days += 4;\n                        if ((current_date.month - item.assignment_date.month) == 1) {\n                            staff.data.vacation_invalid_child_days += 4;\n                        }\n                        promises.push(staff.save());\n                    }\n                });\n            }\n        }\n        await Promise.all(promises);\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
