{"scripts":"async function setUsers() {\n    const groups = await System.userGroups.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.namespace.eq(Namespace.code)))\n        .size(10000)\n        .all();\n    if (groups.length == 0)\n        return;\n    const hr_dep = groups.find(f =\u003e f.data.__name == 'Отдел кадров');\n    const accounting = groups.find(f =\u003e f.data.__name == 'Бухгалтеры');\n    const signatories = groups.find(f =\u003e f.data.__name == 'Подписанты');\n    const innerUsers = groups.find(f =\u003e f.data.__name === \"Внутренние сотрудники организации\");\n    if (!hr_dep || !accounting || !signatories || !innerUsers) {\n        Context.data.debug = JSON.stringify(groups.map(gr =\u003e {\n            return { id: gr.id, name: gr.data.__name };\n        }));\n    }\n    hr_dep.data.description = accounting.data.description = signatories.data.description = undefined;\n    hr_dep.data.subOrgunitIds = accounting.data.subOrgunitIds = signatories.data.subOrgunitIds = undefined;\n    hr_dep.data.subOrgunitIds = [];\n    accounting.data.subOrgunitIds = [];\n    signatories.data.subOrgunitIds = [];\n    innerUsers.data.subOrgunitIds = [];\n    const organizations = await Namespace.app.organization.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    const staffs = await Namespace.app.staff.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    for (const organiaztion of organizations) {\n        if (organiaztion.data.hr_department \u0026\u0026 organiaztion.data.hr_department.length \u003e 0) {\n            for (const staff of organiaztion.data.hr_department) {\n                const user = staffs.find(f =\u003e f.id == staff.id);\n                if (user \u0026\u0026 user.data.ext_user) {\n                    hr_dep.data.subOrgunitIds.push(user.data.ext_user.id);\n                }\n            }\n        }\n        if (organiaztion.data.inner_org_users \u0026\u0026 organiaztion.data.inner_org_users.length \u003e 0) {\n            for (const staff of organiaztion.data.inner_org_users) {\n                const user = staffs.find(f =\u003e f.id == staff.id);\n                if (user \u0026\u0026 user.data.ext_user) {\n                    innerUsers.data.subOrgunitIds.push(user.data.ext_user.id);\n                }\n            }\n        }\n        if (organiaztion.data.accounting \u0026\u0026 organiaztion.data.accounting.length \u003e 0) {\n            for (const staff of organiaztion.data.accounting) {\n                const user = staffs.find(f =\u003e f.id == staff.id);\n                if (user \u0026\u0026 user.data.ext_user) {\n                    accounting.data.subOrgunitIds.push(user.data.ext_user.id);\n                }\n            }\n        }\n        if (organiaztion.data.signatories \u0026\u0026 organiaztion.data.signatories.length \u003e 0) {\n            for (const staff of organiaztion.data.signatories) {\n                const user = staffs.find(f =\u003e f.id == staff.id);\n                if (user \u0026\u0026 user.data.ext_user) {\n                    signatories.data.subOrgunitIds.push(user.data.ext_user.id);\n                }\n            }\n        }\n    }\n    hr_dep.data.subOrgunitIds = [...new Set(hr_dep.data.subOrgunitIds)];\n    accounting.data.subOrgunitIds = [...new Set(accounting.data.subOrgunitIds)];\n    signatories.data.subOrgunitIds = [...new Set(signatories.data.subOrgunitIds)];\n    await accounting.save();\n    await signatories.save();\n    await hr_dep.save();\n    await innerUsers.save();\n}\n","gatewayPairs":{},"hasTranslations":false}
