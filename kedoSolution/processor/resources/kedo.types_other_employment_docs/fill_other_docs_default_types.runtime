{"scripts":"const documents = [\n    {\n        name: \"Договор о мат. ответственности (индивидуальный)\",\n        only_employee_signs: false,\n    },\n    {\n        name: \"Договор о мат. ответственности (коллективный)\",\n        only_employee_signs: false,\n    },\n    {\n        name: \"Согласие на видеонаблюдение\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"Согласие на вакцинацию\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"Обязательство о неразглашении коммерческой тайны\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"Обязательство о неразглашении персональных данных\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"Обязательство о нераспространении информации в СМИ\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"Обязательство сообщать о потенциальном конфликте интересов\",\n        only_employee_signs: true,\n    },\n    {\n        name: \"График работы\",\n        only_employee_signs: true,\n    }\n];\nasync function createOtherDocsTypes() {\n    const ohter_documents = await Application.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    let promises = [];\n    for (const document of documents) {\n        if (!ohter_documents.find(f =\u003e f.data.__name == document.name)) {\n            const newDocument = Application.create();\n            newDocument.data.__name = document.name;\n            newDocument.data.only_employee_signs = document.only_employee_signs;\n            promises.push(newDocument.save());\n        }\n    }\n    await Promise.all(promises);\n    promises = [];\n    const additional_agreement = ohter_documents.find(f =\u003e f.data.__name == 'Дополнительное соглашение');\n    const personal_data_consent = ohter_documents.find(f =\u003e f.data.__name == 'Согласие на обработку персональных данных');\n    if (additional_agreement) {\n        additional_agreement.data.__name += ' (НЕ ИСПОЛЬЗОВАТЬ!)';\n        promises.push(additional_agreement.save());\n    }\n    if (personal_data_consent) {\n        personal_data_consent.data.__name += ' (НЕ ИСПОЛЬЗОВАТЬ!)';\n        promises.push(personal_data_consent.save());\n    }\n    if (promises \u0026\u0026 promises.length \u003e 0) {\n        await Promise.all(promises);\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
