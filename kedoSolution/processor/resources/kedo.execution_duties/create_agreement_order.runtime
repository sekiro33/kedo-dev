{"scripts":"async function getLaborNumber() {\n    let app = await Context.data.execution_duties.fetch();\n    if (app) {\n        Context.data.start_date_string = app.data.start_date.format('DD.MM.YYYY');\n        Context.data.end_date_string = app.data.end_date.format('DD.MM.YYYY');\n        if (app.data.type_combination) {\n            const app_code = await app.data.type_combination.fetch();\n            Context.data.type_code = app_code.data.code;\n        }\n    }\n    if (app.data.inf_about_acting \u0026\u0026 app.data.inf_about_acting.length \u003e 0) {\n        let row = app.data.inf_about_acting.find(f =\u003e f.substitute.id === Context.data.substitute_staff.id);\n        Context.data.procent = row === null || row === void 0 ? void 0 : row.percent;\n        Context.data.type_surcharge_code = row === null || row === void 0 ? void 0 : row.type_surcharge.code.toString();\n    }\n    let staff = await Context.data.execution_staff.fetch();\n    let doc = await Context.fields.labor_contract.app.search().where(f =\u003e f.staff.link(staff)).first();\n    if (doc) {\n        Context.data.labor_contract = doc;\n        Context.data.contract_date = doc.data.__createdAt.getDate();\n    }\n}\nasync function checkSettings() {\n    const settings = await Namespace.app.settings.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    const integration_1c = settings.find(f =\u003e f.data.code == 'integration_1c');\n    Context.data.use_alternative_integration = integration_1c ? integration_1c.data.status : false;\n    const head_signing_notification = await Context.fields.kedo_settings.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('head_signing_notification')))\n        .first();\n    Context.data.head_signing_notification = head_signing_notification ? head_signing_notification.data.status : false;\n}\nasync function check_kedo_agreement() {\n    let staff = await Context.data.substitute_staff.fetch();\n    if (staff.data.kedo_agreement === true) {\n        const order = await Context.data.order_execution_responsibilities.fetch();\n        order.data.view_sign = true;\n        await order.save();\n        const agreement = await Context.data.execution_duties_additional_agreement.fetch();\n        agreement.data.view_sign = true;\n        await agreement.save();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nasync function additional_set_line_status() {\n    const app = await Context.data.execution_duties_additional_agreement.fetch();\n    app.data.line_status = `${app.data.__status.code};${app.data.__status.name}`;\n    await app.save();\n}\nasync function order_set_line_status() {\n    const app = await Context.data.order_execution_responsibilities.fetch();\n    app.data.line_status = `${app.data.__status.code};${app.data.__status.name}`;\n    await app.save();\n}\nasync function createStatusObj(app, status) {\n    const obj_status = {\n        'app': {\n            'namespace': app.namespace,\n            'code': app.code,\n            'id': app.id,\n        },\n        'status': status,\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function createAdditionalStatusObj(app, status) {\n    const obj_status = {\n        'app': {\n            'namespace': app.namespace,\n            'code': app.code,\n            'id': app.id,\n        },\n        'status': status,\n    };\n    Context.data.kedo_status_additional_agreement = JSON.stringify(obj_status);\n}\nasync function createStatusAppChiefDocSigning() {\n    createStatusObj(Context.data.execution_duties, 'chief_doc_signing');\n}\nasync function createStatusAppPaperPrepare() {\n    createStatusObj(Context.data.execution_duties, 'paper_prepare');\n}\nasync function createStatusAppStaffDocSigning() {\n    createStatusObj(Context.data.execution_duties, 'staff_doc_signing');\n}\nasync function createStatusAppPaperSigned() {\n    createStatusObj(Context.data.execution_duties, 'paper_signed');\n}\nasync function createStatusAppOrderSigned() {\n    createStatusObj(Context.data.execution_duties, 'order_signed');\n}\nasync function createStatusAppOrderPrepare() {\n    createStatusObj(Context.data.execution_duties, 'order_prepare');\n}\nasync function createStatusAppAdditionalChiefDocSigning() {\n    createAdditionalStatusObj(Context.data.execution_duties, 'chief_doc_signing');\n}\nasync function createStatusAppAdditionalPaperPrepare() {\n    createAdditionalStatusObj(Context.data.execution_duties, 'paper_prepare');\n}\nasync function createStatusAppAdditionalStaffDocSigning() {\n    createAdditionalStatusObj(Context.data.execution_duties, 'staff_doc_signing');\n}\nasync function createStatusAppAdditionalPaperSigned() {\n    createAdditionalStatusObj(Context.data.execution_duties, 'paper_signed');\n}\nasync function createStatusAppAdditionalOrderSigned() {\n    createAdditionalStatusObj(Context.data.execution_duties, 'order_signed');\n}\nasync function createStatusChiefOrderSigning() {\n    createStatusObj(Context.data.order_execution_responsibilities, 'chief_order_signing');\n}\nasync function createStatusPaperPrepare() {\n    createStatusObj(Context.data.order_execution_responsibilities, 'paper_prepare');\n}\nasync function createStatusStaffOrderSigning() {\n    createStatusObj(Context.data.order_execution_responsibilities, 'staff_order_signing');\n}\nasync function createStatusPaperSigned() {\n    createStatusObj(Context.data.order_execution_responsibilities, 'paper_signed');\n}\nasync function createStatusSigned() {\n    createStatusObj(Context.data.order_execution_responsibilities, 'signed');\n}\nasync function createStatusChiefAdditionalOrderSigning() {\n    createAdditionalStatusObj(Context.data.execution_duties_additional_agreement, 'chief_order_signing');\n}\nasync function createStatusAdditionalPaperPrepare() {\n    createAdditionalStatusObj(Context.data.execution_duties_additional_agreement, 'paper_prepare');\n}\nasync function createStatusStaffAdditionalOrderSigning() {\n    createAdditionalStatusObj(Context.data.execution_duties_additional_agreement, 'staff_order_signing');\n}\nasync function createStatusAdditionalPaperSigned() {\n    createAdditionalStatusObj(Context.data.execution_duties_additional_agreement, 'paper_signed');\n}\nasync function createStatusAdditionalSigned() {\n    createAdditionalStatusObj(Context.data.execution_duties_additional_agreement, 'signed');\n}\nasync function getSigners() {\n    var _a, _b;\n    const kedo_settings = await Context.fields.kedo_settings.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('head_signing_notification')))\n        .first();\n    Context.data.head_signing_notification = kedo_settings ? kedo_settings.data.status : false;\n    const execution_duties = await Context.data.execution_duties.fetch();\n    const staff = await ((_a = execution_duties.data.initiator) === null || _a === void 0 ? void 0 : _a.fetch());\n    const organization_staff = await ((_b = staff === null || staff === void 0 ? void 0 : staff.data.organization) === null || _b === void 0 ? void 0 : _b.fetch());\n    Context.data.signers_app = organization_staff === null || organization_staff === void 0 ? void 0 : organization_staff.data.signatories;\n}\nasync function checkReject() {\n    const app = await Context.data.execution_duties.fetch();\n    if (!app.data.order_signed || !app.data.agreement_signed) {\n        app.data.combination_carried_out = false;\n        await app.save();\n        return true;\n    }\n    else {\n        Context.data.documents = [];\n        Context.data.documents.push(Context.data.order_execution_responsibilities);\n        Context.data.documents.push(Context.data.execution_duties_additional_agreement);\n        Context.data.documents = Context.data.documents;\n        return false;\n    }\n}\nasync function setMarkSigned() {\n    const app = await Context.data.execution_duties.fetch();\n    if (app.data.inf_about_acting \u0026\u0026 Context.data.substitute_staff) {\n        const row = app.data.inf_about_acting.find(row =\u003e row.substitute.id == Context.data.substitute_staff.id);\n        if (row) {\n            row.doc_signed = true;\n            await app.save();\n        }\n    }\n}\nasync function setDocuments() {\n    const app = await Context.data.execution_duties.fetch();\n    if (app.data.inf_about_acting \u0026\u0026 Context.data.substitute_staff) {\n        const row = app.data.inf_about_acting.find(row =\u003e row.substitute.id == Context.data.substitute_staff.id);\n        if (row) {\n            row.order = Context.data.order_execution_responsibilities;\n            row.additional_agreement = Context.data.execution_duties_additional_agreement;\n            await app.save();\n        }\n    }\n}\n","gatewayPairs":{"/items/78555290-f824-4fdd-b963-2d0d500f98e3":"/items/88e09cee-7ad5-46df-8d46-094091a10485","/items/af5e3b2e-788f-42c5-ad9f-e3efe42f6abf":"/items/2806d911-238d-4f54-a583-627c854b5e78"},"hasTranslations":false}
