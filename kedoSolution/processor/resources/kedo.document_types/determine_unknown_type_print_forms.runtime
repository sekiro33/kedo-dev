{"scripts":"const PROMISE_SIZE = 20;\nasync function createDocTypes() {\n    var _a, _b;\n    const unknown_doc_types = (_a = Context.data.unknown_doc_types) !== null \u0026\u0026 _a !== void 0 ? _a : Context.fields.unknown_doc_types.create();\n    const unknown_print_forms_table = (_b = Context.data.unknown_print_forms_table) !== null \u0026\u0026 _b !== void 0 ? _b : Context.fields.unknown_print_forms_table.create();\n    const doc_types = await Context.fields.document_types.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null)))\n        .size(10000)\n        .all();\n    let promises = [];\n    for (const row of unknown_doc_types) {\n        if (row.skip_print_form == true) {\n            for (let i = unknown_print_forms_table.length - 1; i \u003e= 0; i--) {\n                if (unknown_print_forms_table[i].print_form_id == row.print_form_id) {\n                    unknown_print_forms_table.delete(i);\n                }\n            }\n            continue;\n        }\n        let doc_type = doc_types.find(f =\u003e f.data.doc_type_id_1c == row.print_form_id);\n        if (!doc_type) {\n            doc_type = Context.fields.document_types.app.create();\n            doc_type.data.app_code = row.app_code;\n            doc_type.data.doc_type_id_1c = row.print_form_id;\n            doc_type.data.__name = row.doc_type_name;\n            promises.push(doc_type.save());\n        }\n        if (promises.length \u003e PROMISE_SIZE) {\n            await Promise.all(promises);\n            promises = [];\n        }\n    }\n    await Promise.all(promises);\n}\nasync function fillDocType() {\n    var _a;\n    const unknown_print_forms_table = (_a = Context.data.unknown_print_forms_table) !== null \u0026\u0026 _a !== void 0 ? _a : Context.fields.unknown_print_forms_table.create();\n    const doc_types = await Context.fields.document_types.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null)))\n        .size(10000)\n        .all();\n    for (const row of unknown_print_forms_table) {\n        const doc_type = doc_types.find(f =\u003e f.data.doc_type_id_1c == row.print_form_id);\n        if (!doc_type)\n            continue;\n        row.doc_type_1c = doc_type;\n    }\n}\nasync function getUnknownTypes() {\n    var _a, _b, _c;\n    const unknown_print_forms_table = (_a = Context.data.unknown_print_forms_table) !== null \u0026\u0026 _a !== void 0 ? _a : Context.fields.unknown_print_forms_table.create();\n    const unknown_doc_types = Context.fields.unknown_doc_types.create();\n    for (const unknown_print_form of unknown_print_forms_table) {\n        const row = (_b = unknown_doc_types.find(f =\u003e f.print_form_id === unknown_print_form.print_form_id)) !== null \u0026\u0026 _b !== void 0 ? _b : unknown_doc_types.insert();\n        row.print_form_id = unknown_print_form.print_form_id;\n        row.skip_print_form = false;\n        row.print_form = [...((_c = row.print_form) !== null \u0026\u0026 _c !== void 0 ? _c : []), unknown_print_form.print_form];\n    }\n    Context.data.unknown_doc_types = unknown_doc_types;\n}\n","gatewayPairs":{},"hasTranslations":false}
