{
  "scripts": "const documentNames = {\n    wo_payment: '',\n    sick_leave: 'БольничныйЛист',\n    vacation: 'Отпуск'\n};\nlet baseUrl;\nlet login;\nlet password;\nlet myHeaders;\nfunction getConnectionInfo() {\n    const connectionsArray = Namespace.params.data.list_of_connected_platforms ? JSON.parse(Namespace.params.data.list_of_connected_platforms) : undefined;\n    if (!connectionsArray) {\n        return new Error(`Не найдено записей подключения`);\n    }\n    const currentConnection = connectionsArray.length > 1 ? connectionsArray.find((item) => {\n        return item.name === Context.data.connection_name;\n    }) : connectionsArray[0];\n    if (!currentConnection) {\n        return new Error(`Не найдено подключение c именем ${Context.data.connection_name}`);\n    }\n    baseUrl = currentConnection.url;\n    login = currentConnection.login;\n    password = currentConnection.password;\n    myHeaders = {\n        Authorization: `Basic ${btoa(login + ':' + password)}`,\n    };\n    return null;\n}\nasync function action() {\n    const error = getConnectionInfo();\n    if (error !== null) {\n        Context.data.error = error.message;\n    }\n    const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n    };\n    const documentName = Context.data.doc_name;\n    const resUrl = `${baseUrl}/Document_${documentName}(guid'${Context.data.id_dokumenta}')/Post?PostingModeOperational=false&$format=json`;\n    try {\n        const response = await fetch(`${encodeURI(resUrl)}`, requestOptions);\n        if (response.status === 500) {\n            Context.data.error = JSON.stringify(await response.json());\n        }\n    }\n    catch (err) {\n        Context.data.error += ` try/catch error ${err}; resUrl - ${resUrl} `;\n        throw new Error(err);\n    }\n}\n(async function () {\n    action();\n});\n",
  "execution": [
    {
      "code": "sync",
      "name": "Синхронное"
    }
  ],
  "allowGlobal": false,
  "checkInterval": ""
}
