{
  "scripts": "async function action() {\n    var _a, _b, _c;\n    if (!Context.data.document_data) {\n        throw new Error(\"Данные для создания документа не указаны. Context.data.document_data is undefined\");\n    }\n    const financial_assistance_data = JSON.parse(Context.data.document_data);\n    const currentDate = new Datetime();\n    const body = {\n        \"Date\": `${currentDate.format('YYYY-MM-DD')}T00:00:00`,\n        \"ПериодРегистрации\": `${currentDate.format('YYYY-MM')}-01T00:00:00`,\n        \"Организация_Key\": financial_assistance_data.organizationId,\n        \"ДатаНачала\": financial_assistance_data.creationAt,\n        \"ДатаОкончания\": financial_assistance_data.creationAt,\n        \"ОснованиеВыплаты\": \"Заявление сотрудника\",\n        \"Комментарий\": (_a = financial_assistance_data.comment) !== null && _a !== void 0 ? _a : \"\",\n        \"ПорядокВыплаты\": \"Межрасчет\",\n        \"Начисления\": [\n            {\n                \"LineNumber\": \"1\",\n                \"Сотрудник_Key\": financial_assistance_data.staffId,\n                \"Подразделение_Key\": financial_assistance_data.subdivisionId,\n                \"ДатаНачала\": financial_assistance_data.creationAt,\n                \"ДатаОкончания\": financial_assistance_data.creationAt,\n                \"Результат\": financial_assistance_data.money,\n            }\n        ],\n    };\n    const accounting1c = Namespace.params.fields.awaiting_docs_table_1c.app.fields.accounting_systems.variants.zup_1c;\n    const integration_app = Namespace.params.fields.awaiting_docs_table_1c.app.create();\n    integration_app.data.__name = \"Материальная помощь\";\n    integration_app.data.document_odata_name = \"Document_МатериальнаяПомощь\";\n    integration_app.data.accounting_systems = accounting1c;\n    integration_app.data.personal_guid_1c = JSON.stringify([financial_assistance_data.individualId]);\n    integration_app.data.document_creation_data = JSON.stringify(body);\n    integration_app.data.additional_info = (_b = Context.data.additional_info) !== null && _b !== void 0 ? _b : \"\";\n    integration_app.data.base_1c_name = (_c = Context.data.connection_name) !== null && _c !== void 0 ? _c : undefined;\n    await integration_app.save();\n    Context.data.integration_app_id = integration_app.data.__id;\n}\n(async function () {\n    action();\n});\n",
  "execution": [
    {
      "code": "sync",
      "name": "Синхронное"
    }
  ],
  "allowGlobal": false,
  "checkInterval": ""
}
