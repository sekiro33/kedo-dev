{
  "scripts": "const userId = Namespace.params.data.user_id;\nconst token = Namespace.params.data.api_token;\nconst snils = Context.data.snils;\nconst docKindId = \"ETD.OtherDoc\";\nconst groupId = \"ETD.LoadingFiles\";\nconst notificationURL = \"null.ru\";\nasync function action() {\n    let docs = Context.data.documents;\n    for (let doc of docs) {\n        let fetchedDoc = await doc.fetch();\n        let docLink = await doc.getDownloadUrl();\n        let docBuffer = await fetch(docLink).then(doc => doc.arrayBuffer());\n        let base64String = btoa(String.fromCharCode(...new Uint8Array(docBuffer)));\n        let fileName = fetchedDoc.data.__name;\n        let comment = \"\";\n        let response = await fetch(\"https://ekd-integration.trudvsem.ru/createLaborerDocs\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Basic ${token}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                userId,\n                snils,\n                name: fileName,\n                comment,\n                file: base64String,\n                groupId,\n                docKindId,\n                notificationURL,\n                fileName\n            })\n        });\n        if (!response.ok) {\n            Context.data.error = await response.text();\n            return;\n        }\n        ;\n        let responseJson = await response.json();\n        let docId = responseJson.documentId;\n        let documentLink = responseJson.documentLink;\n        if (Context.data.doc_links) {\n            Context.data.doc_links += documentLink;\n            Context.data.doc_links += \"\\n\";\n        }\n        else {\n            Context.data.doc_links = documentLink;\n            Context.data.doc_links += \"\\n\";\n        }\n        ;\n        if (Context.data.doc_id) {\n            Context.data.doc_id += docId;\n            Context.data.doc_id += \"\\n\";\n        }\n        else {\n            Context.data.doc_id = docId;\n            Context.data.doc_id += \"\\n\";\n        }\n        ;\n    }\n    ;\n}\n;\n(async function () {\n    action();\n});\n",
  "execution": [
    {
      "code": "sync",
      "name": "Синхронное"
    }
  ],
  "allowGlobal": false,
  "checkInterval": ""
}
