{"scripts":"async function set_status_set() {\n    let app = await Context.data.other_documents.fetch();\n    app.data.line_status = app.data.__status.code + ';' + app.data.__status.name;\n    await app.save();\n}\nasync function getStaffApp() {\n    if (!Context.data.staff_user)\n        Context.data.staff_user = Context.data.__createdBy;\n    const staff = await Context.fields.staff.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(Context.data.staff_user)))\n        .first();\n    Context.data.staff = staff;\n}\nasync function calc_overdue_date() {\n    if (Context.data.overdue_date) {\n        return;\n    }\n    const currentDate = new Datetime();\n    Context.data.overdue_date = await System.productionSchedule.calcDate(currentDate, new Duration(8, 'hours'));\n}\nasync function changeStatusSigning() {\n    if (!Context.data.other_documents) {\n        throw new Error(\"Context.data.other_documents is undefined\");\n    }\n    const obj_status = {\n        app: {\n            namespace: Context.data.other_documents.namespace,\n            code: Context.data.other_documents.code,\n            id: Context.data.other_documents.id,\n        },\n        status: \"signing\",\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function changeStatusCancelled() {\n    if (!Context.data.other_documents) {\n        throw new Error(\"Context.data.other_documents is undefined\");\n    }\n    const obj_status = {\n        app: {\n            namespace: Context.data.other_documents.namespace,\n            code: Context.data.other_documents.code,\n            id: Context.data.other_documents.id,\n        },\n        status: \"cancelled\",\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function changeStatusSigned() {\n    if (!Context.data.other_documents) {\n        throw new Error(\"Context.data.other_documents is undefined\");\n    }\n    const obj_status = {\n        app: {\n            namespace: Context.data.other_documents.namespace,\n            code: Context.data.other_documents.code,\n            id: Context.data.other_documents.id,\n        },\n        status: \"signed\",\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function getSigners() {\n    var _a, _b;\n    const kedo_settings = await Context.fields.kedo_settings.app.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.eq('head_signing_notification')))\n        .first();\n    Context.data.head_signing_notification = kedo_settings ? kedo_settings.data.status : false;\n    const staff = await ((_a = Context.data.staff) === null || _a === void 0 ? void 0 : _a.fetch());\n    const organization_staff = await ((_b = staff === null || staff === void 0 ? void 0 : staff.data.organization) === null || _b === void 0 ? void 0 : _b.fetch());\n    Context.data.signers_app = organization_staff === null || organization_staff === void 0 ? void 0 : organization_staff.data.signatories;\n}\n","gatewayPairs":{},"hasTranslations":false}
