{"scripts":"async function fileds_set() {\n    let app = await Context.data.child_personal_data_consent.fetch();\n    app.data.__file = Context.data.file;\n    app.data.line_file_name = (await Context.data.file.fetch()).data.__name;\n    app.data.staff = Context.data.staff;\n    await app.save();\n    await status_set();\n}\nasync function status_set() {\n    let app = await Context.data.child_personal_data_consent.fetch();\n    app.data.line_status = `${app.data.__status.code};${app.data.__status.name}`;\n    await app.save();\n}\nasync function set_status(app, status) {\n    await app.setStatus(status);\n}\nasync function set_status_signed() {\n    let app = await Context.data.child_personal_data_consent.fetch();\n    await set_status(app, app.fields.__status.variants.signed);\n}\nasync function set_status_rejected() {\n    let app = await Context.data.child_personal_data_consent.fetch();\n    await set_status(app, app.fields.__status.variants.removed);\n}\nasync function getBossPosition() {\n    if (Context.data.signatories) {\n        const headApp = await Context.fields.staff.app.search()\n            .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(Context.data.signatories)))\n            .first();\n        Context.data.boss_position = headApp.data.position;\n    }\n}\nasync function createStatusObj(app, status) {\n    const obj_status = {\n        'app': {\n            'namespace': app.namespace,\n            'code': app.code,\n            'id': app.id,\n        },\n        'status': status,\n    };\n    Context.data.kedo_status = JSON.stringify(obj_status);\n}\nasync function createStatusCancelled() {\n    createStatusObj(Context.data.child_personal_data_consent, 'cancelled');\n}\nasync function createStatusSigned() {\n    createStatusObj(Context.data.child_personal_data_consent, 'signed');\n}\nasync function createStatusSigning() {\n    createStatusObj(Context.data.child_personal_data_consent, 'signing');\n}\n","gatewayPairs":{},"hasTranslations":false}
