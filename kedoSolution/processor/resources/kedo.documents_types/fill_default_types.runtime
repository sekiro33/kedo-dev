{"scripts":"let documents = [\n    {\n        app_code: 'labor_contract',\n        article: '67',\n        app_namespace: 'kedo',\n        code: '01.006',\n        name: 'Трудовой договор',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '96, 259',\n        app_namespace: 'time_tracking',\n        code: '02.006',\n        name: 'Согласие работника на привлечение к работе в ночное время, незапрещенной ему по состоянию здоровья в соответствии с медицинским заключением',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '99, 259',\n        app_namespace: 'time_tracking',\n        code: '02.008',\n        name: 'Согласие работника на привлечение его к сверхурочной работе',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '113, 259, 290',\n        app_namespace: 'time_tracking',\n        code: '02.010',\n        name: 'Согласие работника на привлечение его к работе в выходные и нерабочие праздничные дни',\n    },\n    {\n        app_code: 'vacation_docs',\n        article: '124',\n        app_namespace: 'absences',\n        code: '02.013',\n        name: 'Заявление работника о переносе ежегодного оплачиваемого отпуска на другой срок',\n    },\n    {\n        app_code: 'application_for_leave_without_pay',\n        article: '128',\n        app_namespace: 'personnel_documents',\n        code: '02.015',\n        name: 'Заявление работника о предоставлении отпуска без сохранения заработной платы',\n    },\n    {\n        app_code: 'vacation_docs',\n        article: '128',\n        app_namespace: 'absences',\n        code: '02.015',\n        name: 'Заявление работника о предоставлении отпуска без сохранения заработной платы',\n    },\n    {\n        app_code: 'overtimeWorkNotifications',\n        article: '99',\n        app_namespace: 'time_tracking',\n        code: '02.023',\n        name: 'Ознакомление с правом отказаться от сверхурочной работы',\n    },\n    {\n        app_code: 'labor_contract',\n        article: '71, 80, 348.12',\n        app_namespace: 'kedo',\n        code: '11.002',\n        name: 'Предупреждение о расторжении трудового договора по собственному желанию',\n    },\n    {\n        app_code: 'information_about_labor_activity',\n        article: '66.1',\n        app_namespace: 'kedo',\n        code: '12.002',\n        name: 'Заявление о предоставлении сведений о трудовой деятельности',\n    },\n    {\n        app_code: '-',\n        article: '-',\n        app_namespace: '-',\n        code: '12.999',\n        name: 'Иные документы',\n    }\n];\nasync function set_types() {\n    const document_codes = documents.map(f =\u003e f.code);\n    const all_documents = await Application.search()\n        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.code.in(document_codes)))\n        .size(10000)\n        .all();\n    let promises = [];\n    for (const document of documents) {\n        if (all_documents.find(f =\u003e f.data.code == document.code)) {\n            continue;\n        }\n        const new_document = Application.create();\n        new_document.data.__name = document.name;\n        new_document.data.code = document.code;\n        new_document.data.app_code = document.app_code;\n        new_document.data.app_namespace = document.app_namespace;\n        new_document.data.article = document.article;\n        promises.push(new_document.save());\n        if (promises.length \u003e 20) {\n            await Promise.all(promises);\n            promises = [];\n        }\n    }\n    await Promise.all(promises);\n}\n","gatewayPairs":{},"hasTranslations":false}
