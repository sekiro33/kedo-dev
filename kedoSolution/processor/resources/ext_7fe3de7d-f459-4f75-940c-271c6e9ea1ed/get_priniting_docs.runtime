{"scripts":"async function writeToDocApp() {\n    const serverApp = await Namespace.params.fields.additional_app.app.search().first();\n    if (!!serverApp) {\n        const knownDocuments = serverApp.data.massiv_izvestnykh_dokumentov ? JSON.parse(serverApp.data.massiv_izvestnykh_dokumentov) : [];\n        knownDocuments.push(Context.data.document_id);\n        serverApp.data.massiv_izvestnykh_dokumentov = JSON.stringify(knownDocuments);\n        await serverApp.save();\n    }\n}\nasync function fillRequestData() {\n    Context.data.request_url = 'InformationRegister_EM_ДокументыСотрудников?$format=json';\n    Context.data.iteration_number = 0;\n}\nasync function parseData() {\n    const response = JSON.parse(Context.data.response);\n    const documents = response.value.filter((item) =\u003e {\n        return item[\"Документ\"] === Context.data.document_id;\n    });\n    if (!!documents) {\n        Context.data.document_found = true;\n    }\n    Context.data.iteration_number = Context.data.iteration_number + 1;\n}\nasync function getArrayBufferFromBase64(base64) {\n    var binary_string = atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i \u003c len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\nasync function fillDocRequestData() {\n    Context.data.request_url = `InformationRegister_EM_ПечатныеФормыДокументов?$format=json`;\n}\nasync function parseFiles() {\n    const response = JSON.parse(Context.data.response);\n    const documents = response.value.filter((item) =\u003e {\n        return item[\"Документ\"] === Context.data.document_id;\n    });\n    if (!!documents) {\n        const allFiles = [];\n        for (let document of documents) {\n            const fileArrayBuffer = await getArrayBufferFromBase64(document[\"ХранилищеПечатнойФормы_Base64Data\"]);\n            const newFile = await Context.fields.document_file.create(`${document[\"ПечатнаяФорма\"]}.pdf`, fileArrayBuffer);\n            allFiles.push(newFile);\n        }\n        Context.data.found_files = allFiles;\n    }\n}\n","gatewayPairs":{},"hasTranslations":false}
