{
  "__id": "018e89f8-23b6-7947-b883-7ffdfd5b3e01",
  "namespace": "kedo",
  "code": "status_migration",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "Миграция статусов",
  "type": "bpmn",
  "draft": false,
  "version": 9,
  "context": [
    {
      "code": "iteration",
      "type": "FLOAT",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": 0,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Итерация",
        "data": {
          "additionalType": "integer",
          "showRowSeparator": true
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "elements_json",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Элементы json",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "domen",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "domen",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "api_key",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "api_key",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "settings_app",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "settings",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Меню настроек",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "debug",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "debug",
        "data": {
          "additionalType": "text"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "bebug123",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": true,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "bebug123",
        "data": {
          "additionalType": "text"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "apps_json",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Приложения json",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": true
      }
    }
  ],
  "manualRun": true,
  "readonly": false,
  "__createdAt": "2024-02-20T13:07:35.287270367Z",
  "__createdBy": "dbf3495b-ce41-49f5-ba21-cdd11a052281",
  "__updatedAt": "2024-04-09T12:38:59.748312603Z",
  "__updatedBy": "1a8a4a0b-7e7e-4e0e-895e-ab2a0a301d1e",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "type": "start",
        "color": "#ffffff",
        "exits": ["746e41f2-e485-4905-a918-dc18ea550d9c"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "Миграция статусов - {$__createdAt}",
          "titleGenerateMethod": "template"
        }
      },
      "17f88b72-2d84-44f4-aeb7-a690b239021c": {
        "x": 256,
        "y": 504,
        "id": "17f88b72-2d84-44f4-aeb7-a690b239021c",
        "icon": "timer",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Таймер 1 минута",
        "type": "event",
        "color": "#ffffff",
        "exits": ["25a70ce8-661d-485d-939a-9aefe74f8ad2"],
        "width": 32,
        "height": 32,
        "settings": {
          "kind": "timer",
          "timer": {
            "days": 0,
            "kind": "duration",
            "hours": 0,
            "minutes": 1,
            "absolute": true
          }
        }
      },
      "18c6c672-a257-4318-adeb-37f21fe759e1": {
        "x": 256,
        "y": 784,
        "id": "18c6c672-a257-4318-adeb-37f21fe759e1",
        "icon": "end",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "36aa4453-6621-4e27-8e41-1671b025e509": {
        "x": 80,
        "y": 480,
        "id": "36aa4453-6621-4e27-8e41-1671b025e509",
        "icon": "script",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Поиск элементов",
        "type": "script",
        "color": "#fde9a0",
        "exits": [
          "4efbeb9c-2963-44b9-98d5-885430d1e708",
          "bf25648c-b6d4-4db0-92b2-69ae18129a26"
        ],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "searchElements",
          "count": 1,
          "delay": 5,
          "retry": false,
          "escalation": {
            "byError": {
              "exit": "bf25648c-b6d4-4db0-92b2-69ae18129a26",
              "notify": false,
              "interrupt": true,
              "receivers": []
            }
          }
        }
      },
      "3ef79f17-e699-4bd9-b7a8-7786f724d055": {
        "x": 80,
        "y": 264,
        "id": "3ef79f17-e699-4bd9-b7a8-7786f724d055",
        "icon": "script",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Получение приложений",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["56e484b4-60f5-4a69-95f5-2ee29f05d232"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "receivingApps",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "6fcaa3cd-8474-473b-9cb0-93b73be45b59": {
        "x": 80,
        "y": 360,
        "id": "6fcaa3cd-8474-473b-9cb0-93b73be45b59",
        "icon": "script",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Получение статусов",
        "type": "script",
        "color": "#fde9a0",
        "exits": [
          "888d73d9-8d42-4962-8edc-9747c4910436",
          "c429cd6a-0a4d-4168-91c6-ef421650b8bf"
        ],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "receivingStatuses",
          "count": 1,
          "delay": 5,
          "retry": false,
          "escalation": {
            "byError": {
              "exit": "c429cd6a-0a4d-4168-91c6-ef421650b8bf",
              "notify": false,
              "interrupt": true,
              "receivers": [
                {
                  "code": "administrators",
                  "kind": "group",
                  "multi": true,
                  "namespace": "system"
                }
              ]
            }
          }
        }
      },
      "8167f43f-034d-4471-99ed-3d46b8273ca0": {
        "x": 248,
        "y": 632,
        "id": "8167f43f-034d-4471-99ed-3d46b8273ca0",
        "icon": "timer",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Таймер 1 минута",
        "type": "event",
        "color": "#ffffff",
        "exits": ["8c65a9be-e698-4311-8c9b-d93665c389b2"],
        "width": 32,
        "height": 32,
        "settings": {
          "kind": "timer",
          "timer": {
            "days": 0,
            "kind": "duration",
            "hours": 0,
            "minutes": 1,
            "absolute": true
          }
        }
      },
      "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8": {
        "x": 80,
        "y": 616,
        "id": "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8",
        "icon": "script",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Миграция статусов",
        "type": "script",
        "color": "#fde9a0",
        "exits": [
          "121c0d4b-170f-4765-a43f-59601deef8c0",
          "74fd6d50-3eb1-4803-91c9-23d137413ba6"
        ],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "mirgationStatuses",
          "count": 1,
          "delay": 5,
          "retry": false,
          "escalation": {
            "byError": {
              "exit": "74fd6d50-3eb1-4803-91c9-23d137413ba6",
              "notify": false,
              "interrupt": true,
              "receivers": []
            }
          }
        }
      },
      "8628c316-1990-48ca-8781-f3b56a6c6c70": {
        "x": 80,
        "y": 736,
        "id": "8628c316-1990-48ca-8781-f3b56a6c6c70",
        "icon": "notification",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Оповещение",
        "type": "notification",
        "color": "#ffff66",
        "exits": ["1ff00ee9-d620-403f-b259-23852507c1a1"],
        "width": 80,
        "height": 64,
        "settings": {
          "author": {
            "code": "",
            "kind": "system"
          },
          "target": {
            "kind": "process"
          },
          "receivers": [
            {
              "code": "administrators",
              "kind": "group",
              "multi": true,
              "namespace": "system"
            }
          ],
          "messageHeader": "Миграция статусов прошла успешно"
        }
      },
      "9c6b1193-fd70-481d-8431-a6a09b356d1a": {
        "x": 80,
        "y": 160,
        "id": "9c6b1193-fd70-481d-8431-a6a09b356d1a",
        "icon": "script",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Получить токен",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["a2535108-eca6-4e09-bd05-6336fbbe3db6"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "getToken",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "d73636e9-171c-4327-932a-200c2de9bf9f": {
        "x": 256,
        "y": 384,
        "id": "d73636e9-171c-4327-932a-200c2de9bf9f",
        "icon": "timer",
        "lane": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Таймер 1 минута",
        "type": "event",
        "color": "#ffffff",
        "exits": ["61398387-1257-4f28-835a-5b777c3d7651"],
        "width": 32,
        "height": 32,
        "settings": {
          "kind": "timer",
          "timer": {
            "days": 0,
            "kind": "duration",
            "hours": 0,
            "minutes": 1,
            "absolute": true
          }
        }
      }
    },
    "lanes": {
      "50dff78b-0a76-4a57-bf53-8114a8fc162e": {
        "x": 8,
        "y": 8,
        "id": "50dff78b-0a76-4a57-bf53-8114a8fc162e",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 908,
        "height": 860,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "121c0d4b-170f-4765-a43f-59601deef8c0": {
        "id": "121c0d4b-170f-4765-a43f-59601deef8c0",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 680
          },
          {
            "x": 120,
            "y": 736
          }
        ],
        "type": "plain",
        "source": "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8",
        "target": "8628c316-1990-48ca-8781-f3b56a6c6c70",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "1ff00ee9-d620-403f-b259-23852507c1a1": {
        "id": "1ff00ee9-d620-403f-b259-23852507c1a1",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 800
          },
          {
            "x": 120,
            "y": 808
          },
          {
            "x": 248,
            "y": 808
          },
          {
            "x": 248,
            "y": 800
          },
          {
            "x": 256,
            "y": 800
          }
        ],
        "type": "plain",
        "source": "8628c316-1990-48ca-8781-f3b56a6c6c70",
        "target": "18c6c672-a257-4318-adeb-37f21fe759e1",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "25a70ce8-661d-485d-939a-9aefe74f8ad2": {
        "id": "25a70ce8-661d-485d-939a-9aefe74f8ad2",
        "name": "",
        "path": [
          {
            "x": 272,
            "y": 504
          },
          {
            "x": 272,
            "y": 472
          },
          {
            "x": 140,
            "y": 472
          },
          {
            "x": 140,
            "y": 480
          }
        ],
        "type": "plain",
        "source": "17f88b72-2d84-44f4-aeb7-a690b239021c",
        "target": "36aa4453-6621-4e27-8e41-1671b025e509",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "4efbeb9c-2963-44b9-98d5-885430d1e708": {
        "id": "4efbeb9c-2963-44b9-98d5-885430d1e708",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 544
          },
          {
            "x": 120,
            "y": 616
          }
        ],
        "type": "plain",
        "source": "36aa4453-6621-4e27-8e41-1671b025e509",
        "target": "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "56e484b4-60f5-4a69-95f5-2ee29f05d232": {
        "id": "56e484b4-60f5-4a69-95f5-2ee29f05d232",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 328
          },
          {
            "x": 120,
            "y": 360
          }
        ],
        "type": "plain",
        "source": "3ef79f17-e699-4bd9-b7a8-7786f724d055",
        "target": "6fcaa3cd-8474-473b-9cb0-93b73be45b59",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "61398387-1257-4f28-835a-5b777c3d7651": {
        "id": "61398387-1257-4f28-835a-5b777c3d7651",
        "name": "",
        "path": [
          {
            "x": 272,
            "y": 384
          },
          {
            "x": 272,
            "y": 352
          },
          {
            "x": 140,
            "y": 352
          },
          {
            "x": 140,
            "y": 360
          }
        ],
        "type": "plain",
        "source": "d73636e9-171c-4327-932a-200c2de9bf9f",
        "target": "6fcaa3cd-8474-473b-9cb0-93b73be45b59",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "746e41f2-e485-4905-a918-dc18ea550d9c": {
        "id": "746e41f2-e485-4905-a918-dc18ea550d9c",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 160
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "9c6b1193-fd70-481d-8431-a6a09b356d1a",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "74fd6d50-3eb1-4803-91c9-23d137413ba6": {
        "id": "74fd6d50-3eb1-4803-91c9-23d137413ba6",
        "name": "",
        "path": [
          {
            "x": 140,
            "y": 680
          },
          {
            "x": 140,
            "y": 688
          },
          {
            "x": 264,
            "y": 688
          },
          {
            "x": 264,
            "y": 664
          }
        ],
        "type": "error",
        "source": "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8",
        "target": "8167f43f-034d-4471-99ed-3d46b8273ca0",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "888d73d9-8d42-4962-8edc-9747c4910436": {
        "id": "888d73d9-8d42-4962-8edc-9747c4910436",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 424
          },
          {
            "x": 120,
            "y": 480
          }
        ],
        "type": "plain",
        "source": "6fcaa3cd-8474-473b-9cb0-93b73be45b59",
        "target": "36aa4453-6621-4e27-8e41-1671b025e509",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "8c65a9be-e698-4311-8c9b-d93665c389b2": {
        "id": "8c65a9be-e698-4311-8c9b-d93665c389b2",
        "name": "",
        "path": [
          {
            "x": 264,
            "y": 632
          },
          {
            "x": 264,
            "y": 608
          },
          {
            "x": 140,
            "y": 608
          },
          {
            "x": 140,
            "y": 616
          }
        ],
        "type": "plain",
        "source": "8167f43f-034d-4471-99ed-3d46b8273ca0",
        "target": "81c61ca2-ff7d-4def-8ef5-16b4b0e80fc8",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "a2535108-eca6-4e09-bd05-6336fbbe3db6": {
        "id": "a2535108-eca6-4e09-bd05-6336fbbe3db6",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 224
          },
          {
            "x": 120,
            "y": 264
          }
        ],
        "type": "plain",
        "source": "9c6b1193-fd70-481d-8431-a6a09b356d1a",
        "target": "3ef79f17-e699-4bd9-b7a8-7786f724d055",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "bf25648c-b6d4-4db0-92b2-69ae18129a26": {
        "id": "bf25648c-b6d4-4db0-92b2-69ae18129a26",
        "name": "",
        "path": [
          {
            "x": 140,
            "y": 544
          },
          {
            "x": 140,
            "y": 552
          },
          {
            "x": 272,
            "y": 552
          },
          {
            "x": 272,
            "y": 536
          }
        ],
        "type": "error",
        "source": "36aa4453-6621-4e27-8e41-1671b025e509",
        "target": "17f88b72-2d84-44f4-aeb7-a690b239021c",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "c429cd6a-0a4d-4168-91c6-ef421650b8bf": {
        "id": "c429cd6a-0a4d-4168-91c6-ef421650b8bf",
        "name": "",
        "path": [
          {
            "x": 140,
            "y": 424
          },
          {
            "x": 140,
            "y": 432
          },
          {
            "x": 272,
            "y": 432
          },
          {
            "x": 272,
            "y": 416
          }
        ],
        "type": "error",
        "source": "6fcaa3cd-8474-473b-9cb0-93b73be45b59",
        "target": "d73636e9-171c-4327-932a-200c2de9bf9f",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "interface IElmaApp {\n    name: string,\n    code: string,\n    namespace: string,\n    statuses?: IAppStatus[],\n}\n\ninterface IAppStatus {\n    id: number,\n    name: string,\n    code: string,\n    groupId: string,\n}\n\ninterface IElement {\n    __id: string,\n    namespace: string,\n    code: string,\n    __status: {\n        order: number,\n        status: number,\n    },\n    status_code?: string,\n}\n\nconst namespaceCode = [\n    \"kedo\",\n    \"kedo_ext\",\n    \"personnel_documents\",\n    \"absences\",\n    \"time_tracking\",\n    \"absences_ext\",\n    \"business_trips\",\n    \"business_trips_ext\"\n];\n\nconst filterElements = (from: number, size: number) =\u003e {\n    return {\n        \"active\": true,\n        \"filter\": {\n            \"eq\": [\n                {\n                    \"field\": \"kedo_status\"\n                },\n                null\n            ]\n        },\n        \"from\": from,\n        \"size\": size\n    }\n}\n\nconst filterStatuses = (from: number, size: number) =\u003e {\n    return {\n        \"active\": true,\n        \"from\": from,\n        \"size\": size,\n    }\n}\n\nasync function getToken(): Promise\u003cvoid\u003e {\n    const token = await Context.fields.settings_app.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.code.eq(\"api_key\")\n        ))\n        .first();\n\n    if (!token || !token.data.value) {\n        throw new Error(\"Отсутствует токен\");\n    }\n\n    const domen = System.getBaseUrl();\n    Context.data.domen = domen;\n    Context.data.api_key = token.data.value;\n}\n\nasync function getAppElements(namespace: string, code: string, from: number, size: number): Promise\u003cIElement[]\u003e {\n    const request = await fetch(`${Context.data.domen}/pub/v1/app/${namespace}/${code}/list`, {\n        method: \"POST\",\n        body: JSON.stringify(filterElements(from, size)),\n        headers: {\n            Authorization: `Bearer ${Context.data.api_key}`\n        }\n    });\n    //Если поймали ошибку \"too many request\", то по эскалации уходим в ожидание таймера\n    if (request.status == 429) {\n        throw new Error('Нет доступных запросов')\n    }\n    if (!request.ok) {\n        return [];\n    }\n\n    const data = await request.json();\n    return data.result.result;\n}\n\nasync function getTotalElementsCount(namespace: string, code: string): Promise\u003cnumber\u003e {\n    const request = await fetch(`${Context.data.domen}/pub/v1/app/${namespace}/${code}/list`, {\n        method: \"POST\",\n        body: JSON.stringify(filterElements(0, 1)),\n        headers: {\n            Authorization: `Bearer ${Context.data.api_key}`\n        }\n    });\n    //Если поймали ошибку \"too many request\", то по эскалации уходим в ожидание таймера\n    if (request.status == 429) {\n        throw new Error('Нет доступных запросов')\n    }\n    if (!request.ok) {\n        return 0;\n    }\n\n    const data = await request.json();\n    return data.result.total;\n}\n\nasync function receivingStatuses(): Promise\u003cvoid\u003e {\n    const CHUNK_SIZE = 20;\n    let elma_apps: IElmaApp[] = JSON.parse(Context.data.apps_json!);  \n    \n    for (let i = Context.data.iteration!; i \u003c elma_apps.length; i += CHUNK_SIZE) {\n        \n        const chunk = elma_apps.slice(i, i + CHUNK_SIZE);\n\n        await Promise.all(\n            chunk.map(async (app: IElmaApp) =\u003e {\n                const res = await fetch(`${System.getBaseUrl()}/pub/v1/app/${app.namespace}/${app.code}/settings/status`, {\n                    method: \"GET\",\n                    headers: {\n                        Authorization: `Bearer ${Context.data.api_key}`\n                    }\n                })\n                //Если поймали ошибку \"too many request\", то по эскалации уходим в ожидание таймера\n                if (res.status == 429) {\n                    throw new Error('Нет доступных запросов')\n                }\n                if (res.ok) {\n                    const data = await res.json();\n                    app.statuses = data.statusItems;\n                    Context.data.iteration! += CHUNK_SIZE;\n                    Context.data.apps_json = JSON.stringify(elma_apps);\n                }\n            })\n        );\n    }\n    Context.data.iteration = 0;\n\n}\n\nasync function updateApp(namespace: string, code: string, id: string, kedo_status_id: string): Promise\u003cvoid\u003e {\n    const res = await fetch(`${Context.data.domen}/pub/v1/app/${namespace}/${code}/${id}/update`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            \"context\": {\n                \"kedo_status\": [kedo_status_id]\n            }\n        }),\n        headers: {\n            Authorization: `Bearer ${Context.data.api_key}`\n        }\n    })\n    //Если поймали ошибку \"too many request\", то по эскалации уходим в ожидание таймера\n    if (res.status == 429) {\n        throw new Error('Нет доступных запросов')\n    }\n}\nasync function mirgationStatuses(): Promise\u003cvoid\u003e {\n    const CHUNK_SIZE = 20;\n    let elements: IElement[] = JSON.parse(Context.data.elements_json!);\n\n    const statuses = await Namespace.app.statuses.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null)\n        ))\n        .size(1000)\n        .all();\n\n\n    for (let i = Context.data.iteration!; i \u003c elements.length; i += CHUNK_SIZE) {\n        const chunk = elements.slice(i, i + CHUNK_SIZE);\n\n        await Promise.all(chunk.map(app =\u003e {\n            let kedo_status = statuses.find(f =\u003e f.data.code == app.status_code);\n\n            if (kedo_status \u0026\u0026 app.code == \"trip_requests\" \u0026\u0026 app.status_code == \"signed\") {\n                kedo_status = statuses.find(f =\u003e f.data.code == \"agreed_signed\");\n            }\n            \n            if (!kedo_status) {\n                //на подписании заявления\n                if (app.status_code == \"application_prepare\" || app.status_code == \"signing_sz\" ||\n                    app.status_code == \"signing_consent\" || app.status_code == \"signing_consent\" ||\n                    app.status_code == \"in_preparation\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"signing_application\");\n                }\n\n                //на согласовании\n                if (app.status_code == \"agrement\" || app.status_code == \"approving\" ||\n                    app.status_code == \"under_consideration\" || app.status_code == \"not_agreed\" ||\n                    app.status_code == \"on_approval\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"approval\");\n                }\n\n                //на корректировке\n                if (app.status_code == \"correct\" || app.status_code == \"application_correction\" ||\n                    app.status_code == \"order_correction\" || app.status_code == \"editing\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"correction\");\n                }\n\n                //на подписании\n                if (app.status_code == \"staff_signing\" || app.status_code == \"sign_in_process\" ||\n                    app.status_code == \"sign_by_hr\" || app.status_code == \"sign_by_employer\" ||\n                    app.status_code == \"sign_by_employee\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"signing\");\n                }\n\n                //Согласовано/подписано\n                if (app.status_code == \"agreed\" || app.status_code == \"\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"agreed_signed\");\n                }\n\n                //Подготовка приказа\n                if (app.status_code == \"documents_preparation\" || app.status_code == \"\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"order_prepare\");\n                }\n\n                //оформлено\n                if (app.status_code == \"ok\" || app.status_code == \"assigned\" || app.status_code == \"done\" ||\n                    app.status_code == \"giving\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"issued\");\n                }\n\n                //отменено\n                if (app.status_code == \"cancel\" || app.status_code == \"removed\" || app.status_code == \"rejected\" ||\n                    app.status_code == \"refusal\" || app.status_code == \"denied\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"cancelled\");\n                }\n\n                //Оформление на бумаге\n                if (app.status_code == \"design_in_paper\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"paper_prepare\");\n                }\n\n                //Подписано на бумаге\n                if (app.status_code == \"signed_in_paper\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"paper_signed\");\n                }\n\n                //Отзыв заявления\n                if (app.status_code == \"recall\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"withdrawal\");\n                }\n\n                //В процессе\n                if (app.status_code == \"ongoing\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"in_progress\");\n                }\n\n                //Завершена\n                if (app.status_code == \"end\" || app.status_code == \"finished\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"completed\");\n                }\n\n                //Ожидание начала\n                if (app.status_code == \"waiting_to_pass\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"waiting_start\");\n                }\n\n                //В процессе оформления\n                if (app.status_code == \"transfer\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"pending\");\n                }\n\n                //Подписание документа сотрудником\n                if (app.status_code == \"signing_employee\" || app.status_code == \"familiarization\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"staff_doc_signing\");\n                }\n\n                //Подписание документа работодателем\n                if (app.status_code == \"signing_chief\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"chief_doc_signing\");\n                }\n\n                //На ознакомлении\n                if (app.status_code == \"acquaintance\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"at_look\");\n                }\n\n                //Ознакомлен\n                if (app.status_code == \"introduction\") {\n                    kedo_status = statuses.find(f =\u003e f.data.code == \"acquainted\");\n                }\n            }\n            if (!kedo_status) {\n                return;\n            }\n\n            return updateApp(app.namespace, app.code, app.__id, kedo_status.id);\n        }))\n        Context.data.iteration! += CHUNK_SIZE;\n    }\n}\n\nasync function receivingApps(): Promise\u003cvoid\u003e {\n    let elma_apps: IElmaApp[] = [];\n    \n    await Promise.all(\n        namespaceCode.map(async (namespace) =\u003e {\n            const res = await fetch(`${System.getBaseUrl()}/pub/v1/scheme/namespaces/${namespace}/apps`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Bearer ${Context.data.api_key}`\n                }\n            })\n            if (res.ok) {\n                const data = await res.json();\n                data.result.result.map((app: IElmaApp) =\u003e elma_apps.push(app))\n                Context.data.apps_json = JSON.stringify(elma_apps);\n            }\n        })\n    );\n\n}\n\nasync function searchElements(): Promise\u003cvoid\u003e {\n    const CHUNK_SIZE = 20;\n    let elements: IElement[] = [];\n    if (Context.data.elements_json \u0026\u0026 Context.data.elements_json.length \u003e 0) {\n        elements = JSON.parse(Context.data.elements_json)\n    }\n    const elma_apps: IElmaApp[] = JSON.parse(Context.data.apps_json!);\n\n    for (let index = Context.data.iteration!; index \u003c elma_apps.length; index++) {\n        const app = elma_apps[index];\n        if (!app.statuses || app.statuses.length == 0) continue;\n\n        const total_elements_count = await getTotalElementsCount(app.namespace, app.code);\n        if (total_elements_count \u003c= 0) {\n            continue;\n        }\n\n        let promises: Promise\u003cvoid\u003e[] = [];\n        for (let i = 0; i \u003c total_elements_count; i += CHUNK_SIZE) {\n            promises.push(\n                getAppElements(app.namespace, app.code, i, i + CHUNK_SIZE)\n                    .then(data =\u003e {\n                        const statuses = app.statuses!;\n\n                        const updated_elements = data.map((elem: IElement) =\u003e {\n                            const status = statuses.find(s =\u003e s.id == elem.__status?.status);\n\n                            elem.code = app.code;\n                            elem.namespace = app.namespace;\n\n                            if (!status) {\n                                return elem;\n                            }\n                            elem.status_code = status.code;\n                            return elem;\n                        })\n\n                        elements.push(...updated_elements);\n                    })\n            )\n            if (promises.length \u003e 5) {\n                await Promise.all(promises);\n            }\n        }\n        await Promise.all(promises);\n        Context.data.elements_json = JSON.stringify(elements);\n        Context.data.iteration! += 1;\n    }\n\n    Context.data.iteration = 0;\n}",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": [
        {
          "code": "__name",
          "display": "Название",
          "tooltip": "Название экземпляра процесса, будет показываться в задачах",
          "readonly": false,
          "required": true
        }
      ]
    },
    "targetFeed": {
      "type": "instance",
      "variable": ""
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {
      "debug": {
        "enabled": false,
        "conditions": []
      },
      "domen": {
        "enabled": false,
        "conditions": []
      },
      "api_key": {
        "enabled": false,
        "conditions": []
      },
      "bebug123": {
        "enabled": false,
        "conditions": []
      },
      "apps_json": {
        "enabled": false,
        "conditions": []
      },
      "iteration": {
        "enabled": false,
        "conditions": []
      },
      "settings_app": {
        "enabled": false,
        "conditions": []
      },
      "elements_json": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
