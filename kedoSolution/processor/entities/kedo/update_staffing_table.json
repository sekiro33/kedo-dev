{
  "__id": "018f528d-ea12-7b7b-8592-18ec813c57bd",
  "namespace": "kedo",
  "code": "update_staffing_table",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "Обновление позиции ШР",
  "type": "bpmn",
  "draft": false,
  "version": 4,
  "context": [
    {
      "code": "debug",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "debug",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "processed_staff",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "staff",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Переводимый/увольняемый сотрудник",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "employment_directory_processed_staff",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "employment_directory",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Место занятости переводимого/увольняемого сотрудника",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "table_staff",
      "type": "TABLE",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "fields": [
          {
            "code": "__count",
            "data": null,
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "Количество элементов",
              "system": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "__index",
            "data": {
              "result": {}
            },
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "№",
              "disabled": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": true,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "staffs",
            "data": {
              "code": "staff",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Сотрудники"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "employment_directory",
            "data": {
              "code": "employment_directory",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Место занятости"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          }
        ],
        "result": {
          "staffs": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "__count": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "__index": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "employment_directory": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          }
        }
      },
      "view": {
        "name": "Таблица сотрудников",
        "data": {
          "allowDeleteRows": false,
          "collapseNestedHeaders": false,
          "columnsView": {
            "employment_directory": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "staffs": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            }
          },
          "footerHidden": false,
          "groupingSettings": {
            "code": "",
            "kind": "None",
            "sort": "asc"
          },
          "headerHidden": false,
          "maxRowCount": 0,
          "relativeWidth": false,
          "rowMinHeight": 35,
          "showOrderNumbers": false,
          "viewTemplate": "Элементов: {$__count}",
          "viewVariant": "table"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "prev_position_array",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "position",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "(__old) Список позиций ШР",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "staff_table",
      "type": "TABLE",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "fields": [
          {
            "code": "__count",
            "data": null,
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "Количество элементов",
              "system": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "__index",
            "data": {
              "result": {}
            },
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "№",
              "disabled": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": true,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "table_staff",
            "data": {
              "code": "staff",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Cотрудники"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "table_employment_place",
            "data": {
              "code": "employment_directory",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Место занятости"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "new_position",
            "data": {
              "code": "position",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Новая позиция ШР"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "prev_position",
            "data": {
              "code": "position",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Старая позиция ШР"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          }
        ],
        "result": {
          "__count": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "__index": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "table_staff": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "new_position": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "prev_position": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "table_employment_place": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          }
        }
      },
      "view": {
        "name": "(__old) Таблица сотрудников",
        "data": {
          "allowDeleteRows": false,
          "collapseNestedHeaders": false,
          "columnsView": {
            "new_position": {
              "align": "left",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "prev_position": {
              "align": "left",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "table_employment_place": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "table_staff": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": false,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            }
          },
          "footerHidden": false,
          "groupingSettings": {
            "code": "",
            "kind": "None",
            "sort": "asc"
          },
          "headerHidden": false,
          "maxRowCount": 0,
          "relativeWidth": false,
          "rowMinHeight": 35,
          "showOrderNumbers": false,
          "viewTemplate": "Элементов: {$__count}",
          "viewVariant": "table"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "is_table",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "(__BP) Входные данные таблица?",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "table_test",
      "type": "TABLE",
      "searchable": false,
      "indexed": false,
      "deleted": true,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "fields": [
          {
            "code": "__count",
            "data": null,
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "Количество элементов",
              "system": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "__index",
            "data": {
              "result": {}
            },
            "type": "FLOAT",
            "view": {
              "data": {
                "additionalType": "integer"
              },
              "name": "№",
              "disabled": true
            },
            "array": false,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": true,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "staff",
            "data": {
              "code": "staff",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Сотрудник"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "place",
            "data": {
              "code": "employment_directory",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Место занятости"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          },
          {
            "code": "prev_position",
            "data": {
              "code": "position",
              "filter": {
                "value": {
                  "tf": {}
                },
                "enabled": false
              },
              "bindings": null,
              "namespace": "kedo",
              "isDependent": false,
              "linkedFieldCode": ""
            },
            "type": "SYS_COLLECTION",
            "view": {
              "data": {
                "showCreateItem": false
              },
              "name": "Старая позиция ШР"
            },
            "array": true,
            "single": true,
            "deleted": false,
            "formula": "",
            "indexed": false,
            "required": false,
            "searchable": false,
            "defaultValue": null,
            "calcByFormula": false
          }
        ],
        "result": {
          "place": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "staff": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "__count": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "__index": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          },
          "prev_position": {
            "kind": "none",
            "label": "",
            "formula": "sum"
          }
        }
      },
      "view": {
        "name": "Таблица(тест)",
        "data": {
          "allowDeleteRows": false,
          "collapseNestedHeaders": false,
          "columnsView": {
            "place": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": true,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "prev_position": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": true,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            },
            "staff": {
              "align": "left",
              "backgroundColor": "",
              "compression": false,
              "font": {
                "bold": false,
                "color": "",
                "italic": false,
                "underline": false
              },
              "hidden": false,
              "key": false,
              "readonly": true,
              "required": false,
              "tensile": false,
              "verticalAlign": "middle",
              "width": 175
            }
          },
          "footerHidden": false,
          "groupingSettings": {
            "code": "",
            "kind": "None",
            "sort": "asc"
          },
          "headerHidden": false,
          "maxRowCount": 0,
          "relativeWidth": false,
          "rowMinHeight": 35,
          "showOrderNumbers": false,
          "viewTemplate": "Элементов: {$__count}",
          "viewVariant": "table"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "new_position",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "position",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Новая позиция ШР",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "employment_directory",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "employment_directory",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "(__BP) Справочник занятости",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "is_restore_position",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Восстановление позиции ШР",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "end_date",
      "type": "DATETIME",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дата окончания перевода",
        "data": {
          "additionalType": "datetime",
          "defaultTimeType": "startOfDay",
          "timeOptional": false
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "position",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "position",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "(__BP) Позиция ШР",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "staff",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "staff",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "(__BP) Сотрудник",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "update_successfull",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": true,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "(__BP) Обновление прошло успешно?",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "temporary_transfer",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Временный перевод?",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "prev_position",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "position",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "(__old) Старая позиция ШР",
        "data": {},
        "input": true,
        "output": true
      }
    },
    {
      "code": "is_dismissal",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Процесс увольнения?",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "count",
      "type": "FLOAT",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": 0,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "count",
        "data": {
          "additionalType": "integer",
          "showRowSeparator": true
        },
        "input": true,
        "output": true
      }
    },
    {
      "code": "json_table",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "(__old) JSON table",
        "data": {
          "additionalType": "text"
        },
        "input": true,
        "output": true
      }
    }
  ],
  "manualRun": true,
  "readonly": false,
  "__createdAt": "2024-04-17T09:58:35.266251255Z",
  "__createdBy": "1a8a4a0b-7e7e-4e0e-895e-ab2a0a301d1e",
  "__updatedAt": "2024-05-15T05:26:41.792933992Z",
  "__updatedBy": "34ff56b9-aa7a-4000-8a60-8359f257b257",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 32,
        "y": 88,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "type": "start",
        "color": "#ffffff",
        "exits": ["c50c31e2-d08b-47ee-8c86-fdae08b655a1"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "Обновление позиции ШР - {$__createdAt}",
          "titleGenerateMethod": "template"
        }
      },
      "096ea294-4069-4288-b01d-332cd8e469dc": {
        "x": 880,
        "y": 88,
        "id": "096ea294-4069-4288-b01d-332cd8e469dc",
        "icon": "exclusive",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Временный перевод?",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "a540e8f4-6f15-4bf5-933a-2d4f77b69338",
          "d931e8b3-4fe4-4efe-baf0-e2804b7c35a1"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      },
      "12a27ca9-3f6c-4998-b4f5-463397639049": {
        "x": 96,
        "y": 72,
        "id": "12a27ca9-3f6c-4998-b4f5-463397639049",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Заполнение контекста БП",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["51f37708-f165-4d58-ac62-2f3a2b420076"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "fillContext",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "29d77913-9bf0-490e-aea7-4578b90def58": {
        "x": 1096,
        "y": 304,
        "id": "29d77913-9bf0-490e-aea7-4578b90def58",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление карточки ШР (ТАБЛИЦА) Перевод в бывших сотрудников",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["a36b6f1f-c354-44e5-9c58-60f7fef4c034"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updatePrevPositionTable",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "4772490c-3ac6-4ab6-84a4-2d73f8829043": {
        "x": 1368,
        "y": 256,
        "id": "4772490c-3ac6-4ab6-84a4-2d73f8829043",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "641d81f8-df9e-42a6-9c63-1e6821125f2c": {
        "x": 944,
        "y": 320,
        "id": "641d81f8-df9e-42a6-9c63-1e6821125f2c",
        "icon": "timer",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Ожидание окончания перевода",
        "type": "event",
        "color": "#ffffff",
        "exits": ["0770b26d-47dd-45f1-ab4d-5c60a4981a49"],
        "width": 32,
        "height": 32,
        "settings": {
          "kind": "timer",
          "timer": {
            "code": "end_date",
            "days": 0,
            "kind": "variable",
            "hours": 0,
            "minutes": 0,
            "absolute": false,
            "substraction": false
          }
        }
      },
      "8a69627b-2e75-4d90-8407-169c2685a6ab": {
        "x": 400,
        "y": 72,
        "id": "8a69627b-2e75-4d90-8407-169c2685a6ab",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление карточки ШР (ОДИН) Перевод в бывших сотрудников",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["1c8cfe83-3941-4da8-978a-4c53d0bc78e8"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updatePrevPositionSingle",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "90bc0782-ec59-45c2-ac88-6c559ea40775": {
        "x": 336,
        "y": 88,
        "id": "90bc0782-ec59-45c2-ac88-6c559ea40775",
        "icon": "exclusive",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Входные данные - один сотрудник?",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "1a0059ab-a413-411f-8c68-72e95c9eff96",
          "7562b2d5-34c2-4142-9d36-b206799dae85"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      },
      "99b01a1e-b2d8-4a89-ac2f-421e3447c06e": {
        "x": 400,
        "y": 240,
        "id": "99b01a1e-b2d8-4a89-ac2f-421e3447c06e",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление карточки ШР (ТАБЛИЦА) Перевод в бывших сотрудников",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["1f0ec385-93b6-43b3-b0fd-8028165e3dd4"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updatePrevPositionTable",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "9d1ff4c5-bd4a-402e-a252-19d19dd8f592": {
        "x": 584,
        "y": 88,
        "id": "9d1ff4c5-bd4a-402e-a252-19d19dd8f592",
        "icon": "exclusive",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Причина обновления",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "02bd4e53-e1f9-4d64-b7b2-9452ab22094f",
          "cc0d6671-8525-4029-9f5f-ca2abd51abe8"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      },
      "9da6e7c4-9c39-44ed-bcb1-c16aa0c9da17": {
        "x": 584,
        "y": 256,
        "id": "9da6e7c4-9c39-44ed-bcb1-c16aa0c9da17",
        "icon": "exclusive",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Причина обновления",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "a9329624-3cc4-4b05-b326-f1fd893b52f2",
          "199e4190-1536-46cf-82cd-9ad236499dc1"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      },
      "9e10c259-daef-41c7-86d2-42a23f6ae2cc": {
        "x": 944,
        "y": 136,
        "id": "9e10c259-daef-41c7-86d2-42a23f6ae2cc",
        "icon": "timer",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Ожидание окончания перевода",
        "type": "event",
        "color": "#ffffff",
        "exits": ["99712317-c06f-44bf-aa7b-8f1f64c929c3"],
        "width": 32,
        "height": 32,
        "settings": {
          "kind": "timer",
          "timer": {
            "code": "end_date",
            "days": 0,
            "kind": "variable",
            "hours": 0,
            "minutes": 0,
            "absolute": false,
            "substraction": false
          }
        }
      },
      "a0d2f523-1d0e-4aea-b89f-a732e6bc6a53": {
        "x": 1192,
        "y": 304,
        "id": "a0d2f523-1d0e-4aea-b89f-a732e6bc6a53",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление новой позиции ШР (ТАБЛИЦА)",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["3b0ced9b-bbbe-49b5-9301-670ee13f3f8c"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updateNewPositionTable",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "a6a0f1c1-70af-4ceb-8095-f210ddc75f53": {
        "x": 1000,
        "y": 120,
        "id": "a6a0f1c1-70af-4ceb-8095-f210ddc75f53",
        "icon": "system",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Флаг = Восстановление позиции ШР",
        "type": "assignment",
        "color": "#fde9a0",
        "exits": ["f04d513f-7586-4f4a-b424-c475307f3ae9"],
        "width": 80,
        "height": 64,
        "settings": {
          "bindings": [
            {
              "source": {
                "kind": "manual",
                "value": true
              },
              "target": {
                "kind": "context",
                "value": "is_restore_position"
              }
            }
          ]
        }
      },
      "b7e98734-6add-4cb4-9ec9-d4a380418679": {
        "x": 888,
        "y": 256,
        "id": "b7e98734-6add-4cb4-9ec9-d4a380418679",
        "icon": "exclusive",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Временный перевод?",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "5b1045cf-0ff4-43a7-ae56-16218ac57cbd",
          "273b4880-79b4-40fb-b0b4-0bae97edde67"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      },
      "be08d911-7d98-4ef2-a81e-ccd13dfade06": {
        "x": 704,
        "y": 72,
        "id": "be08d911-7d98-4ef2-a81e-ccd13dfade06",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление новой позиции ШР (ОДИН)",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["5e7dbde3-c05b-4909-a51a-696c249f24da"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updateNewPositionSingle",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "c8ccaf7c-3f16-4f99-b925-76a944f198c1": {
        "x": 1096,
        "y": 120,
        "id": "c8ccaf7c-3f16-4f99-b925-76a944f198c1",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление карточки ШР (ОДИН) Перевод в бывших сотрудников",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["f2005fcf-88d3-4e85-881d-115fe51a8266"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updatePrevPositionSingle",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "dc25f048-4a0f-4e59-9f44-2448a26377b3": {
        "x": 1000,
        "y": 304,
        "id": "dc25f048-4a0f-4e59-9f44-2448a26377b3",
        "icon": "system",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Флаг = Восстановление позиции ШР",
        "type": "assignment",
        "color": "#fde9a0",
        "exits": ["7004d255-a299-49d2-9b65-230203faca5f"],
        "width": 80,
        "height": 64,
        "settings": {
          "bindings": [
            {
              "source": {
                "kind": "manual",
                "value": true
              },
              "target": {
                "kind": "context",
                "value": "is_restore_position"
              }
            }
          ]
        }
      },
      "e75793cd-3887-48f9-9ab2-7652a9949b6d": {
        "x": 1192,
        "y": 120,
        "id": "e75793cd-3887-48f9-9ab2-7652a9949b6d",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление новой позиции ШР (ОДИН)",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["fdeda74e-6872-4d67-9ca8-f9defe4e8cdd"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updateNewPositionSingle",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "e78e931a-060d-4079-a3d9-eb6459e1e935": {
        "x": 1368,
        "y": 88,
        "id": "e78e931a-060d-4079-a3d9-eb6459e1e935",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "eaf70647-b036-437e-9e18-d73ea34b8d7c": {
        "x": 704,
        "y": 240,
        "id": "eaf70647-b036-437e-9e18-d73ea34b8d7c",
        "icon": "script",
        "lane": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Обновление новой позиции ШР (ТАБЛИЦА)",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["f874972f-6bd7-4d58-a183-e3a103fb4774"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "updateNewPositionTable",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      }
    },
    "lanes": {
      "729250e9-6911-45ef-ad71-0c5b657f9794": {
        "x": 8,
        "y": 8,
        "id": "729250e9-6911-45ef-ad71-0c5b657f9794",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 1456,
        "height": 640,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "02bd4e53-e1f9-4d64-b7b2-9452ab22094f": {
        "id": "02bd4e53-e1f9-4d64-b7b2-9452ab22094f",
        "name": "Увольнение",
        "path": [
          {
            "x": 600,
            "y": 120
          },
          {
            "x": 600,
            "y": 216
          },
          {
            "x": 1360,
            "y": 216
          },
          {
            "x": 1360,
            "y": 104
          },
          {
            "x": 1368,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "9d1ff4c5-bd4a-402e-a252-19d19dd8f592",
        "target": "e78e931a-060d-4079-a3d9-eb6459e1e935",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "is_dismissal"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "0770b26d-47dd-45f1-ab4d-5c60a4981a49": {
        "id": "0770b26d-47dd-45f1-ab4d-5c60a4981a49",
        "name": "",
        "path": [
          {
            "x": 976,
            "y": 336
          },
          {
            "x": 1000,
            "y": 336
          }
        ],
        "type": "plain",
        "source": "641d81f8-df9e-42a6-9c63-1e6821125f2c",
        "target": "dc25f048-4a0f-4e59-9f44-2448a26377b3",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "199e4190-1536-46cf-82cd-9ad236499dc1": {
        "id": "199e4190-1536-46cf-82cd-9ad236499dc1",
        "name": "Перевод",
        "path": [
          {
            "x": 616,
            "y": 272
          },
          {
            "x": 704,
            "y": 272
          }
        ],
        "type": "default",
        "source": "9da6e7c4-9c39-44ed-bcb1-c16aa0c9da17",
        "target": "eaf70647-b036-437e-9e18-d73ea34b8d7c",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "1a0059ab-a413-411f-8c68-72e95c9eff96": {
        "id": "1a0059ab-a413-411f-8c68-72e95c9eff96",
        "name": "Нет",
        "path": [
          {
            "x": 352,
            "y": 120
          },
          {
            "x": 352,
            "y": 272
          },
          {
            "x": 400,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "90bc0782-ec59-45c2-ac88-6c559ea40775",
        "target": "99b01a1e-b2d8-4a89-ac2f-421e3447c06e",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "is_table"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "1c8cfe83-3941-4da8-978a-4c53d0bc78e8": {
        "id": "1c8cfe83-3941-4da8-978a-4c53d0bc78e8",
        "name": "",
        "path": [
          {
            "x": 480,
            "y": 104
          },
          {
            "x": 584,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "8a69627b-2e75-4d90-8407-169c2685a6ab",
        "target": "9d1ff4c5-bd4a-402e-a252-19d19dd8f592",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "1f0ec385-93b6-43b3-b0fd-8028165e3dd4": {
        "id": "1f0ec385-93b6-43b3-b0fd-8028165e3dd4",
        "name": "",
        "path": [
          {
            "x": 480,
            "y": 272
          },
          {
            "x": 584,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "99b01a1e-b2d8-4a89-ac2f-421e3447c06e",
        "target": "9da6e7c4-9c39-44ed-bcb1-c16aa0c9da17",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "273b4880-79b4-40fb-b0b4-0bae97edde67": {
        "id": "273b4880-79b4-40fb-b0b4-0bae97edde67",
        "name": "Нет",
        "path": [
          {
            "x": 920,
            "y": 272
          },
          {
            "x": 1368,
            "y": 272
          }
        ],
        "type": "default",
        "source": "b7e98734-6add-4cb4-9ec9-d4a380418679",
        "target": "4772490c-3ac6-4ab6-84a4-2d73f8829043",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "3b0ced9b-bbbe-49b5-9301-670ee13f3f8c": {
        "id": "3b0ced9b-bbbe-49b5-9301-670ee13f3f8c",
        "name": "",
        "path": [
          {
            "x": 1272,
            "y": 336
          },
          {
            "x": 1360,
            "y": 336
          },
          {
            "x": 1360,
            "y": 272
          },
          {
            "x": 1368,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "a0d2f523-1d0e-4aea-b89f-a732e6bc6a53",
        "target": "4772490c-3ac6-4ab6-84a4-2d73f8829043",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "51f37708-f165-4d58-ac62-2f3a2b420076": {
        "id": "51f37708-f165-4d58-ac62-2f3a2b420076",
        "name": "",
        "path": [
          {
            "x": 176,
            "y": 104
          },
          {
            "x": 336,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "12a27ca9-3f6c-4998-b4f5-463397639049",
        "target": "90bc0782-ec59-45c2-ac88-6c559ea40775",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "5b1045cf-0ff4-43a7-ae56-16218ac57cbd": {
        "id": "5b1045cf-0ff4-43a7-ae56-16218ac57cbd",
        "name": "Да",
        "path": [
          {
            "x": 904,
            "y": 288
          },
          {
            "x": 904,
            "y": 336
          },
          {
            "x": 944,
            "y": 336
          }
        ],
        "type": "plain",
        "source": "b7e98734-6add-4cb4-9ec9-d4a380418679",
        "target": "641d81f8-df9e-42a6-9c63-1e6821125f2c",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "temporary_transfer"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "5e7dbde3-c05b-4909-a51a-696c249f24da": {
        "id": "5e7dbde3-c05b-4909-a51a-696c249f24da",
        "name": "",
        "path": [
          {
            "x": 784,
            "y": 104
          },
          {
            "x": 880,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "be08d911-7d98-4ef2-a81e-ccd13dfade06",
        "target": "096ea294-4069-4288-b01d-332cd8e469dc",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "7004d255-a299-49d2-9b65-230203faca5f": {
        "id": "7004d255-a299-49d2-9b65-230203faca5f",
        "name": "",
        "path": [
          {
            "x": 1080,
            "y": 336
          },
          {
            "x": 1096,
            "y": 336
          }
        ],
        "type": "plain",
        "source": "dc25f048-4a0f-4e59-9f44-2448a26377b3",
        "target": "29d77913-9bf0-490e-aea7-4578b90def58",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "7562b2d5-34c2-4142-9d36-b206799dae85": {
        "id": "7562b2d5-34c2-4142-9d36-b206799dae85",
        "name": "Да",
        "path": [
          {
            "x": 368,
            "y": 104
          },
          {
            "x": 400,
            "y": 104
          }
        ],
        "type": "default",
        "source": "90bc0782-ec59-45c2-ac88-6c559ea40775",
        "target": "8a69627b-2e75-4d90-8407-169c2685a6ab",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "99712317-c06f-44bf-aa7b-8f1f64c929c3": {
        "id": "99712317-c06f-44bf-aa7b-8f1f64c929c3",
        "name": "",
        "path": [
          {
            "x": 976,
            "y": 152
          },
          {
            "x": 1000,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "9e10c259-daef-41c7-86d2-42a23f6ae2cc",
        "target": "a6a0f1c1-70af-4ceb-8095-f210ddc75f53",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "a36b6f1f-c354-44e5-9c58-60f7fef4c034": {
        "id": "a36b6f1f-c354-44e5-9c58-60f7fef4c034",
        "name": "",
        "path": [
          {
            "x": 1176,
            "y": 336
          },
          {
            "x": 1192,
            "y": 336
          }
        ],
        "type": "plain",
        "source": "29d77913-9bf0-490e-aea7-4578b90def58",
        "target": "a0d2f523-1d0e-4aea-b89f-a732e6bc6a53",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "a540e8f4-6f15-4bf5-933a-2d4f77b69338": {
        "id": "a540e8f4-6f15-4bf5-933a-2d4f77b69338",
        "name": "Да",
        "path": [
          {
            "x": 896,
            "y": 120
          },
          {
            "x": 896,
            "y": 152
          },
          {
            "x": 944,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "096ea294-4069-4288-b01d-332cd8e469dc",
        "target": "9e10c259-daef-41c7-86d2-42a23f6ae2cc",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "temporary_transfer"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "a9329624-3cc4-4b05-b326-f1fd893b52f2": {
        "id": "a9329624-3cc4-4b05-b326-f1fd893b52f2",
        "name": "Увольнение",
        "path": [
          {
            "x": 600,
            "y": 288
          },
          {
            "x": 600,
            "y": 396
          },
          {
            "x": 1360,
            "y": 396
          },
          {
            "x": 1360,
            "y": 272
          },
          {
            "x": 1368,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "9da6e7c4-9c39-44ed-bcb1-c16aa0c9da17",
        "target": "4772490c-3ac6-4ab6-84a4-2d73f8829043",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "is_dismissal"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "c50c31e2-d08b-47ee-8c86-fdae08b655a1": {
        "id": "c50c31e2-d08b-47ee-8c86-fdae08b655a1",
        "name": "",
        "path": [
          {
            "x": 64,
            "y": 104
          },
          {
            "x": 96,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "12a27ca9-3f6c-4998-b4f5-463397639049",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "cc0d6671-8525-4029-9f5f-ca2abd51abe8": {
        "id": "cc0d6671-8525-4029-9f5f-ca2abd51abe8",
        "name": "Перевод",
        "path": [
          {
            "x": 616,
            "y": 104
          },
          {
            "x": 704,
            "y": 104
          }
        ],
        "type": "default",
        "source": "9d1ff4c5-bd4a-402e-a252-19d19dd8f592",
        "target": "be08d911-7d98-4ef2-a81e-ccd13dfade06",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "d931e8b3-4fe4-4efe-baf0-e2804b7c35a1": {
        "id": "d931e8b3-4fe4-4efe-baf0-e2804b7c35a1",
        "name": "Нет",
        "path": [
          {
            "x": 912,
            "y": 104
          },
          {
            "x": 1368,
            "y": 104
          }
        ],
        "type": "default",
        "source": "096ea294-4069-4288-b01d-332cd8e469dc",
        "target": "e78e931a-060d-4079-a3d9-eb6459e1e935",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "f04d513f-7586-4f4a-b424-c475307f3ae9": {
        "id": "f04d513f-7586-4f4a-b424-c475307f3ae9",
        "name": "",
        "path": [
          {
            "x": 1080,
            "y": 152
          },
          {
            "x": 1096,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "a6a0f1c1-70af-4ceb-8095-f210ddc75f53",
        "target": "c8ccaf7c-3f16-4f99-b925-76a944f198c1",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "f2005fcf-88d3-4e85-881d-115fe51a8266": {
        "id": "f2005fcf-88d3-4e85-881d-115fe51a8266",
        "name": "",
        "path": [
          {
            "x": 1176,
            "y": 152
          },
          {
            "x": 1192,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "c8ccaf7c-3f16-4f99-b925-76a944f198c1",
        "target": "e75793cd-3887-48f9-9ab2-7652a9949b6d",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "f874972f-6bd7-4d58-a183-e3a103fb4774": {
        "id": "f874972f-6bd7-4d58-a183-e3a103fb4774",
        "name": "",
        "path": [
          {
            "x": 784,
            "y": 272
          },
          {
            "x": 888,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "eaf70647-b036-437e-9e18-d73ea34b8d7c",
        "target": "b7e98734-6add-4cb4-9ec9-d4a380418679",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "fdeda74e-6872-4d67-9ca8-f9defe4e8cdd": {
        "id": "fdeda74e-6872-4d67-9ca8-f9defe4e8cdd",
        "name": "",
        "path": [
          {
            "x": 1272,
            "y": 152
          },
          {
            "x": 1360,
            "y": 152
          },
          {
            "x": 1360,
            "y": 104
          },
          {
            "x": 1356,
            "y": 104
          },
          {
            "x": 1368,
            "y": 104
          }
        ],
        "type": "plain",
        "source": "e75793cd-3887-48f9-9ab2-7652a9949b6d",
        "target": "e78e931a-060d-4079-a3d9-eb6459e1e935",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "/**\nHere you can write scripts for complex server processing of the context during process execution.\nTo write scripts, use TypeScript (https://www.typescriptlang.org).\nELMA365 SDK documentation available on https://tssdk.elma365.com.\n**/\n\nasync function fillContext(): Promise\u003cvoid\u003e {\n    if (Context.data.table_staff \u0026\u0026 Context.data.table_staff.length \u003e 0) {\n        Context.data.is_table = true;\n    }\n}\n\n\nasync function updateListPrevPositions(actual_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[], old_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[], staff: ApplicationItem\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params\u003e): Promise\u003c{ actual_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[], old_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[] }\u003e {\n    if (actual_list_staffs \u0026\u0026 actual_list_staffs.length \u003e 0) {\n        const length = actual_list_staffs.length;\n        for (let index = 0; index \u003c length; index++) {\n            if (actual_list_staffs[index].id == staff.id) {\n                actual_list_staffs.splice(index, 1);\n            }\n        }\n    }\n    old_list_staffs.push(staff);\n\n    return {\n        actual_list_staffs: actual_list_staffs,\n        old_list_staffs: old_list_staffs\n    }\n\n}\n\n//Обработки одного сотрудника для обновления позиции ШР\nasync function updatePrevPositionSingle(): Promise\u003cvoid\u003e {\n    if (!Context.data.processed_staff) {\n        throw new Error('Отсутствует переводимый сотрудник');\n    }\n    if (!Context.data.employment_directory_processed_staff) {\n        throw new Error('Отсутсвует приложение справочника занятости сотрудника');\n    }\n\n    const staff = await Context.data.processed_staff.fetch();\n    const employment_directory = await Context.data.employment_directory_processed_staff.fetch();\n\n    if (staff \u0026\u0026 employment_directory) {\n        if (!employment_directory.data.position) {\n            throw new Error('Отсутствует позиция в приложении справочника занятости сотрудника');\n        }\n        if (!employment_directory.data.type_employment) {\n            throw new Error('Отсутствует тип занятости в приложении справочника занятости сотрудника');\n        }\n        let position = await employment_directory.data.position.fetch();\n\n        switch (employment_directory.data.type_employment.code) {\n            case \"main_workplace\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 Context.data.new_position) {\n                    position = await Context.data.new_position.fetch();\n                }\n                const list_staffs = await updateListPrevPositions(position.data.staff ?? [], position.data.old_staff ?? [], staff);\n                position.data.staff = list_staffs.actual_list_staffs;\n                position.data.old_staff = list_staffs.old_list_staffs;\n                await position.save();\n\n                break;\n            }\n            case \"internal_combination\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 Context.data.new_position) {\n                    position = await Context.data.new_position.fetch();\n                }\n                const list_staffs = await updateListPrevPositions(position.data.staff_internal_combination ?? [], position.data.old_staff_internal_combination ?? [], staff);\n                position.data.staff_internal_combination = list_staffs.actual_list_staffs;\n                position.data.old_staff_internal_combination = list_staffs.old_list_staffs;\n                await position.save();\n\n                break;\n            }\n            case \"external_combination\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 Context.data.new_position) {\n                    position = await Context.data.new_position.fetch();\n                }\n                const list_staffs = await updateListPrevPositions(position.data.staff_external_combination ?? [], position.data.old_staff_external_combination ?? [], staff);\n                position.data.staff_external_combination = list_staffs.actual_list_staffs;\n                position.data.old_staff_external_combination = list_staffs.old_list_staffs;\n                await position.save();\n\n                break;\n            }\n        }\n    }\n}\n\nasync function updateListStaffs(staff: ApplicationItem\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params\u003e, actual_list_staff: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[], old_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[]): Promise\u003c{ old_list_staffs: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[], actual_list_staff: TApplication\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params, Application$kedo$staff$Processes\u003e[] }\u003e {\n    if (old_list_staffs \u0026\u0026 old_list_staffs.length \u003e 0) {\n        const length = old_list_staffs.length;\n        for (let index = 0; index \u003c length; index++) {\n            if (old_list_staffs[index].id == staff.id) {\n                old_list_staffs.splice(index, 1);\n            }\n        }\n    }\n    actual_list_staff.push(staff);\n\n    return {\n        old_list_staffs: old_list_staffs,\n        actual_list_staff: actual_list_staff,\n    }\n}\n\nasync function updateNewPositionSingle(): Promise\u003cvoid\u003e {\n    if (!Context.data.new_position) {\n        throw new Error('Отсутствует позиция на которую требуется перевод сотрудника');\n    }\n    if (!Context.data.processed_staff) {\n        throw new Error('Отсутствует переводимый сотрудник');\n    }\n    if (!Context.data.employment_directory_processed_staff) {\n        throw new Error('Отсутствует приложение места занятости сотрудника');\n    }\n\n    let new_position = await Context.data.new_position.fetch();\n    const staff = await Context.data.processed_staff.fetch();\n    const employment_directory = await Context.data.employment_directory_processed_staff.fetch();\n\n    if (employment_directory \u0026\u0026 employment_directory.data.type_employment) {\n        switch (employment_directory.data.type_employment.code) {\n            case \"main_workplace\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 employment_directory.data.position) {\n                    new_position = await employment_directory.data.position.fetch();\n                }\n\n                const old_position = await staff.data.position?.fetch();\n\n                if (old_position) {\n                    old_position.data.staff = (old_position.data.staff ?? []).filter(f =\u003e f.id !== staff.id);\n                    old_position.data.old_staff = [...(old_position.data.old_staff ?? []), staff];\n                    await old_position.save();\n                }\n\n                const lists_staffs = await updateListStaffs(staff, new_position.data.staff ?? [], new_position.data.old_staff ?? []);\n                new_position.data.staff = lists_staffs.actual_list_staff;\n                new_position.data.old_staff = lists_staffs.old_list_staffs;\n                await new_position.save();\n\n                break;\n            }\n            case \"internal_combination\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 employment_directory.data.position) {\n                    new_position = await employment_directory.data.position.fetch();\n                }\n                const lists_staffs = await updateListStaffs(staff, new_position.data.staff_internal_combination ?? [], new_position.data.old_staff_internal_combination ?? []);\n                new_position.data.staff_internal_combination = lists_staffs.actual_list_staff;\n                new_position.data.old_staff_internal_combination = lists_staffs.old_list_staffs;\n                await new_position.save();\n\n                break;\n            }\n            case \"external_combination\": {\n                if (Context.data.is_restore_position === true \u0026\u0026 employment_directory.data.position) {\n                    new_position = await employment_directory.data.position.fetch();\n                }\n                const lists_staffs = await updateListStaffs(staff, new_position.data.staff_external_combination ?? [], new_position.data.old_staff_external_combination ?? []);\n                new_position.data.staff_external_combination = lists_staffs.actual_list_staff;\n                new_position.data.old_staff_external_combination = lists_staffs.old_list_staffs;\n                await new_position.save();\n\n                break;\n            }\n        }\n    }\n}\n\nconst fff = Namespace.processes.update_staffing_table\n\n//Обработки таблицы сотрудников для обновления позиции ШР\nasync function updatePrevPositionTable(): Promise\u003cvoid\u003e {\n    if (!Context.data.table_staff || Context.data.table_staff.length == 0) {\n        throw new Error('Таблица сотрудников пуста');\n    }\n\n    const staffs_ids = Context.data.table_staff.map(f =\u003e f.staffs.id);\n    let staffs_data_array: ApplicationItem\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params\u003e[] = [];\n    if (staffs_ids \u0026\u0026 staffs_ids.length \u003e 0) {\n        staffs_data_array = await Context.fields.staff.app.search()\n            .where(f =\u003e f.__id.in(staffs_ids))\n            .size(staffs_ids.length)\n            .all();\n    }\n\n    const employment_directory_ids = Context.data.table_staff.map(f =\u003e f.employment_directory.id);\n    let employment_directory: ApplicationItem\u003cApplication$kedo$employment_directory$Data, Application$kedo$employment_directory$Params\u003e[] = [];\n    if (employment_directory_ids \u0026\u0026 employment_directory_ids.length \u003e 0) {\n        employment_directory = await Context.fields.employment_directory.app.search()\n            .where(f =\u003e f.__id.in(employment_directory_ids))\n            .size(employment_directory_ids.length)\n            .all();\n    }\n\n    let position: ApplicationItem\u003cApplication$kedo$position$Data, Application$kedo$position$Params\u003e[] = [];\n    if (employment_directory \u0026\u0026 employment_directory.length \u003e 0) {\n        const position_ids = employment_directory.map(f =\u003e f.data.position!.id);\n        if (position_ids \u0026\u0026 position_ids.length \u003e 0) {\n            position = await Context.fields.position.app.search()\n                .where(f =\u003e f.__id.in(position_ids))\n                .size(position_ids.length)\n                .all();\n        }\n    }\n\n    if (position \u0026\u0026 position.length \u003e 0) {\n        let promises: Promise\u003cvoid\u003e[] = [];\n\n        let update_position: ApplicationItem\u003cApplication$kedo$position$Data, Application$kedo$position$Params\u003e;\n        if (Context.data.new_position) {\n            update_position = await Context.data.new_position.fetch();\n        }\n\n        for (let row of Context.data.table_staff) {\n            const place = employment_directory.find(f =\u003e f.id == row.employment_directory.id);\n            if (place \u0026\u0026 place.data.type_employment) {\n                const prev_position_staff = position.find(f =\u003e f.id == place.data.position!.id);\n                const staff = staffs_data_array.find(f =\u003e f.id == place.data.staff!.id);\n\n                switch (place.data.type_employment.code) {\n                    case \"main_workplace\": {\n                        if (Context.data.is_restore_position === true) {\n                            Context.data.debug = 'Временный перевод основной';\n                            if (staff \u0026\u0026 update_position! \u0026\u0026 update_position.data.staff \u0026\u0026 update_position.data.staff.length \u003e 0) {\n                                const length = update_position.data.staff.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (update_position.data.staff[index].id == staff.id) {\n                                        update_position.data.staff.splice(index, 1);\n                                    }\n                                }\n                                if (!update_position.data.old_staff) {\n                                    update_position.data.old_staff = [];\n                                }\n                                update_position.data.old_staff.push(staff);\n                                promises.push(update_position.save());\n                            }\n                        } else {\n                            if (staff \u0026\u0026 prev_position_staff \u0026\u0026 prev_position_staff.data.staff \u0026\u0026 prev_position_staff.data.staff.length \u003e 0) {\n                                const length = prev_position_staff.data.staff.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (prev_position_staff.data.staff[index].id == staff.id) {\n                                        prev_position_staff.data.staff.splice(index, 1);\n                                    }\n                                }\n                                if (!prev_position_staff.data.old_staff) {\n                                    prev_position_staff.data.old_staff = [];\n                                }\n                                prev_position_staff.data.old_staff.push(staff);\n                                promises.push(prev_position_staff.save());\n                            }\n                        }\n\n                        break;\n                    }\n                    case \"internal_combination\": {\n                        if (Context.data.is_restore_position === true) {\n                            Context.data.debug = 'Временный перевод внутренний';\n                            if (staff \u0026\u0026 update_position! \u0026\u0026 update_position.data.staff_internal_combination \u0026\u0026 update_position.data.staff_internal_combination.length \u003e 0) {\n                                const length = update_position.data.staff_internal_combination.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (update_position.data.staff_internal_combination[index].id == staff.id) {\n                                        update_position.data.staff_internal_combination.splice(index, 1);\n                                    }\n                                }\n                                if (!update_position.data.old_staff_internal_combination) {\n                                    update_position.data.old_staff_internal_combination = [];\n                                }\n                                update_position.data.old_staff_internal_combination.push(staff);\n                                promises.push(update_position.save());\n                            }\n                        } else {\n                            if (staff \u0026\u0026 prev_position_staff \u0026\u0026 prev_position_staff.data.staff_internal_combination \u0026\u0026 prev_position_staff.data.staff_internal_combination.length \u003e 0) {\n                                const length = prev_position_staff.data.staff_internal_combination.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (prev_position_staff.data.staff_internal_combination[index].id == staff.id) {\n                                        prev_position_staff.data.staff_internal_combination.splice(index, 1);\n                                    }\n                                }\n                                if (!prev_position_staff.data.old_staff_internal_combination) {\n                                    prev_position_staff.data.old_staff_internal_combination = [];\n                                }\n                                prev_position_staff.data.old_staff_internal_combination.push(staff);\n                                promises.push(prev_position_staff.save());\n                            }\n                        }\n\n                        break;\n                    }\n                    case \"external_combination\": {\n                        if (Context.data.is_restore_position === true) {\n                            Context.data.debug = 'Временный перевод внешний';\n                            if (staff \u0026\u0026 update_position! \u0026\u0026 update_position.data.staff_external_combination \u0026\u0026 update_position.data.staff_external_combination.length \u003e 0) {\n                                const length = update_position.data.staff_external_combination.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (update_position.data.staff_external_combination[index].id == staff.id) {\n                                        update_position.data.staff_external_combination.splice(index, 1);\n                                    }\n                                }\n                                if (!update_position.data.old_staff_external_combination) {\n                                    update_position.data.old_staff_external_combination = [];\n                                }\n                                update_position.data.old_staff_external_combination.push(staff);\n                                promises.push(update_position.save());\n                            }\n                        } else {\n                            if (staff \u0026\u0026 prev_position_staff \u0026\u0026 prev_position_staff.data.staff_external_combination \u0026\u0026 prev_position_staff.data.staff_external_combination.length \u003e 0) {\n                                const length = prev_position_staff.data.staff_external_combination.length;\n                                for (let index = 0; index \u003c length; index++) {\n                                    if (prev_position_staff.data.staff_external_combination[index].id == staff.id) {\n                                        prev_position_staff.data.staff_external_combination.splice(index, 1);\n                                    }\n                                }\n                                if (!prev_position_staff.data.old_staff_external_combination) {\n                                    prev_position_staff.data.old_staff_external_combination = [];\n                                }\n                                prev_position_staff.data.old_staff_external_combination.push(staff);\n                                promises.push(prev_position_staff.save());\n                            }\n                        }\n\n                        break;\n                    }\n                }\n            }\n            if (promises.length \u003e 20) {\n                await Promise.all(promises);\n                promises = [];\n            }\n        }\n        await Promise.all(promises);\n    }\n}\n\ntype Staff = ApplicationItem\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params\u003e;\ntype EmploymentDirectory = ApplicationItem\u003cApplication$kedo$employment_directory$Data, Application$kedo$employment_directory$Params\u003e;\ntype Position = ApplicationItem\u003cApplication$kedo$position$Data, Application$kedo$position$Params\u003e;\n\nasync function updateNewPositionTable(): Promise\u003cvoid\u003e {\n    if (!Context.data.table_staff || Context.data.table_staff.length == 0 || !Context.data.new_position) {\n        throw new Error('Таблица переводимых сотрудников пуста, или отсутствует позиция, на которую требуется перевести сотрудника(-ов)');\n    }\n\n    const staffs_ids = Context.data.table_staff.map(f =\u003e f.staffs.id);\n    let staffs_data_array: Staff[] = [];\n    if (staffs_ids \u0026\u0026 staffs_ids.length \u003e 0) {\n        staffs_data_array = await Context.fields.staff.app.search()\n            .where(f =\u003e f.__id.in(staffs_ids))\n            .size(staffs_ids.length)\n            .all();\n    }\n\n    const employment_directory_ids = Context.data.table_staff.map(f =\u003e f.employment_directory.id);\n    let employment_directory: EmploymentDirectory[] = [];\n    if (employment_directory_ids \u0026\u0026 employment_directory_ids.length \u003e 0) {\n        employment_directory = await Context.fields.employment_directory.app.search()\n            .where(f =\u003e f.__id.in(employment_directory_ids))\n            .size(employment_directory_ids.length)\n            .all();\n    }\n\n    let position: Position[] = [];\n    if (employment_directory \u0026\u0026 employment_directory.length \u003e 0) {\n        const position_ids = [\n            ...employment_directory.filter(f =\u003e f.data.position != undefined).map(f =\u003e f.data.position!.id),\n            ...staffs_data_array.filter(f =\u003e f.data.position != undefined).map(f =\u003e f.data.position!.id),\n        ];\n\n        if (position_ids \u0026\u0026 position_ids.length \u003e 0) {\n            position = await Context.fields.position.app.search()\n                .where(f =\u003e f.__id.in(position_ids))\n                .size(position_ids.length)\n                .all();\n        }\n    }\n\n    let new_position = await Context.data.new_position.fetch();\n    let promises: Promise\u003cvoid\u003e[] = [];\n\n    for (let row of Context.data.table_staff) {\n        const type_employment = employment_directory.find(f =\u003e f.id == row.employment_directory.id);\n        const staff = staffs_data_array.find(f =\u003e f.id == row.staffs.id);\n\n        if (type_employment \u0026\u0026 type_employment.data.type_employment \u0026\u0026 staff) {\n            switch (type_employment.data.type_employment.code) {\n                case \"main_workplace\": {\n                    if (Context.data.is_restore_position === true) {\n                        const prev_position = position.find(f =\u003e f.id == type_employment.data.position!.id);\n                        if (prev_position)\n                            new_position = prev_position;\n                    }\n\n                    const main_position = position.find(f =\u003e f.id === staff.data.position?.id);\n\n                    if (main_position) {\n                        main_position.data.staff = (main_position.data.staff ?? []).filter(f =\u003e f.id !== staff.id);\n                    }\n\n                    if (new_position) {\n                        if (!new_position.data.staff || new_position.data.staff.length == 0) {\n                            new_position.data.staff = [];\n                        }\n                        if (new_position.data.old_staff \u0026\u0026 new_position.data.old_staff.length \u003e 0) {\n                            const length = new_position.data.old_staff.length;\n                            for (let index = 0; index \u003c length; index++) {\n                                if (new_position.data.old_staff[index].id == staff.id) {\n                                    new_position.data.old_staff.splice(index, 1);\n                                }\n                            }\n                        }\n                        new_position.data.staff.push(staff);\n                        promises.push(\n                            (async function () {\n                                if (main_position) {\n                                    await main_position.save();\n                                }\n                                await new_position.save();\n                            })()\n                        );\n                    }\n\n                    break;\n                }\n                case \"internal_combination\": {\n                    if (Context.data.is_restore_position === true) {\n                        const prev_position = position.find(f =\u003e f.id == type_employment.data.position!.id);\n                        if (prev_position)\n                            new_position = prev_position;\n                    }\n                    if (new_position) {\n                        if (!new_position.data.staff_internal_combination || new_position.data.staff_internal_combination.length == 0) {\n                            new_position.data.staff_internal_combination = [];\n                        }\n                        if (new_position.data.old_staff_internal_combination \u0026\u0026 new_position.data.old_staff_internal_combination.length \u003e 0) {\n                            const length = new_position.data.old_staff_internal_combination.length;\n                            for (let index = 0; index \u003c length; index++) {\n                                if (new_position.data.old_staff_internal_combination[index].id == staff.id) {\n                                    new_position.data.old_staff_internal_combination.splice(index, 1);\n                                }\n                            }\n                        }\n                        new_position.data.staff_internal_combination.push(staff);\n                        promises.push(new_position.save());\n                    }\n\n                    break;\n                }\n                case \"external_combination\": {\n                    if (Context.data.is_restore_position === true) {\n                        const prev_position = position.find(f =\u003e f.id == type_employment.data.position!.id);\n                        if (prev_position)\n                            new_position = prev_position;\n                    }\n                    if (new_position) {\n                        if (!new_position.data.staff_external_combination || new_position.data.staff_external_combination.length == 0) {\n                            new_position.data.staff_external_combination = [];\n                        }\n                        if (new_position.data.old_staff_external_combination \u0026\u0026 new_position.data.old_staff_external_combination.length \u003e 0) {\n                            const length = new_position.data.old_staff_external_combination.length;\n                            for (let index = 0; index \u003c length; index++) {\n                                if (new_position.data.old_staff_external_combination[index].id == staff.id) {\n                                    new_position.data.old_staff_external_combination.splice(index, 1);\n                                }\n                            }\n                        }\n                        new_position.data.staff_external_combination.push(staff);\n                        promises.push(new_position.save())\n                    }\n\n                    break;\n                }\n            }\n        }\n        if (promises.length \u003e 20) {\n            await Promise.all(promises);\n            promises = [];\n        }\n    }\n    await Promise.all(promises);\n}",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": []
    },
    "targetFeed": {
      "type": "instance",
      "variable": ""
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "useStartFormInDebug": true,
    "fieldVisibilityConditions": {
      "count": {
        "enabled": false,
        "conditions": []
      },
      "debug": {
        "enabled": false,
        "conditions": []
      },
      "staff": {
        "enabled": false,
        "conditions": []
      },
      "end_date": {
        "enabled": false,
        "conditions": []
      },
      "is_table": {
        "enabled": false,
        "conditions": []
      },
      "position": {
        "enabled": false,
        "conditions": []
      },
      "json_table": {
        "enabled": false,
        "conditions": []
      },
      "table_test": {
        "enabled": false,
        "conditions": []
      },
      "staff_table": {
        "enabled": false,
        "conditions": []
      },
      "table_staff": {
        "enabled": false,
        "conditions": []
      },
      "is_dismissal": {
        "enabled": false,
        "conditions": []
      },
      "new_position": {
        "enabled": false,
        "conditions": []
      },
      "prev_position": {
        "enabled": false,
        "conditions": []
      },
      "processed_staff": {
        "enabled": false,
        "conditions": []
      },
      "temporary_transfer": {
        "enabled": false,
        "conditions": []
      },
      "update_successfull": {
        "enabled": false,
        "conditions": []
      },
      "is_restore_position": {
        "enabled": false,
        "conditions": []
      },
      "prev_position_array": {
        "enabled": false,
        "conditions": []
      },
      "employment_directory": {
        "enabled": false,
        "conditions": []
      },
      "employment_directory_processed_staff": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
