{
  "__id": "018c8757-193c-7ebf-be9e-9345339951e5",
  "namespace": "kedo.document_types",
  "code": "create_docs_1c",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(s) Заполнение видов документов из 1С",
  "type": "bpmn",
  "draft": false,
  "version": 5,
  "context": [
    {
      "code": "document_types",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "document_types",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Вид документа в 1С"
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2023-03-28T17:35:54.581631071Z",
  "__createdBy": "8b6393ab-540b-4559-8c18-7ef92a9cc24a",
  "__updatedAt": "2024-02-08T11:38:13.059719497Z",
  "__updatedBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "2f8789ed-96e5-407f-b09f-10c2fe1cc407",
        "type": "start",
        "color": "#ffffff",
        "exits": ["4eedf3aa-79d1-4019-8d6b-b7b9b8440210"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "Заполнение видов документов из 1С ({$document_types})",
          "titleGenerateMethod": "template"
        }
      },
      "dbf93341-7f45-4f79-9833-954c217438de": {
        "x": 104,
        "y": 248,
        "id": "dbf93341-7f45-4f79-9833-954c217438de",
        "icon": "end",
        "lane": "2f8789ed-96e5-407f-b09f-10c2fe1cc407",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "f77c1f38-0499-4050-97cf-92048b0d4479": {
        "x": 80,
        "y": 144,
        "id": "f77c1f38-0499-4050-97cf-92048b0d4479",
        "icon": "script",
        "lane": "2f8789ed-96e5-407f-b09f-10c2fe1cc407",
        "name": "Заполнить справочник типов документов",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["d09b0449-c8e7-4f26-9d64-7ea77834ef9b"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "fill_doc_types",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      }
    },
    "lanes": {
      "2f8789ed-96e5-407f-b09f-10c2fe1cc407": {
        "x": 8,
        "y": 8,
        "id": "2f8789ed-96e5-407f-b09f-10c2fe1cc407",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 224,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "4eedf3aa-79d1-4019-8d6b-b7b9b8440210": {
        "id": "4eedf3aa-79d1-4019-8d6b-b7b9b8440210",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 144
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "f77c1f38-0499-4050-97cf-92048b0d4479",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "d09b0449-c8e7-4f26-9d64-7ea77834ef9b": {
        "id": "d09b0449-c8e7-4f26-9d64-7ea77834ef9b",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 208
          },
          {
            "x": 120,
            "y": 248
          }
        ],
        "type": "plain",
        "source": "f77c1f38-0499-4050-97cf-92048b0d4479",
        "target": "dbf93341-7f45-4f79-9833-954c217438de",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "/**\nHere you can write scripts for complex server processing of the context during process execution.\nTo write scripts, use TypeScript (https://www.typescriptlang.org).\nELMA365 SDK documentation available on https://tssdk.elma365.com.\n**/\n\nasync function fill_doc_types(): Promise\u003cvoid\u003e {\n    interface docType {\n        app_name: string,\n        app_code: string,\n        doc_type?: string,\n        doc_type_id_1c: string,\n    }\n    const docTypes: docType[] = [\n        {\n            app_name: 'Приказ на командировку',\n            app_code: 'order_for_a_business_trip',\n            doc_type: \"StandardODATA.Document_Командировка\",\n            doc_type_id_1c: '1ED46407EA7CB1DE3A761BDF05A9E806',\n        },\n        {\n            app_name: 'Приказ на материальную помощь',\n            app_code: 'order_financial_assistance',\n            doc_type_id_1c: '9F7E19F06543131B20BFFDC877FC9F78',\n        },\n        {\n            app_name: 'Приказ о приеме',\n            app_code: 'admission_order',\n            doc_type_id_1c: '38CC20A9DD45F8EE81126B5D024401A0',\n        },\n        {\n            app_name: 'Трудовой договоре',\n            app_code: 'labor_contract',\n            doc_type_id_1c: '4BC28437B12F282B695C7DF7DCEE3CC4',\n        },\n        {\n            app_name: 'Приказ на перевод',\n            app_code: 'order_for_transfer',\n            doc_type_id_1c: 'F126ACA5BF0AAE28246CDD6312200C8E',\n        },\n        {\n            app_name: 'Приказ на увольнение',\n            app_code: 'dismissal_order',\n            doc_type_id_1c: '2C555146B9A0501714EAF33792CB70D1',\n        },\n        {\n            app_name: 'Прочие документы',\n            app_code: 'other_documents',\n            doc_type_id_1c: ''\n        },\n        {\n            app_name: \"Трудовой договор\",\n            app_code: \"labor_contract\",\n            doc_type_id_1c: \"4BC28437B12F282B695C7DF7DCEE3CC4\"\n        },\n        {\n            app_name: \"Трудовой договор при дистанционной работе\",\n            app_code: \"labor_contract\",\n            doc_type_id_1c: \"AC7400F60307F5E4DE43CECC31E75C50\"\n        },\n        {\n            app_name: \"Приказ на ежегодный оплачиваемый отпуск\",\n            app_code: \"vacation_orders\",\n            doc_type_id_1c: \"0980DDEB351855C4A080298A5298923F\"\n        },\n        {\n            app_name: \"Приказ на отпуск без сохранения заработной платы\",\n            app_code: \"vacation_orders\",\n            doc_type_id_1c: \"0980DDEB351855C4A080298A5298923F\"\n        },\n        {\n            app_name: \"Приказ о предоставлении дополнительного времени отдыха\",\n            app_code: \"vacation_orders\",\n            doc_type_id_1c: \"C742514F1ED0F69F7946AD407852DE0E\"\n        },\n        {\n            app_name: \"Приказ на отпуск по беременности и родам\",\n            app_code: \"vacation_orders\",\n            doc_type_id_1c: \"06EC8ED305A97C6657E4880FE7DCF3BB\"\n        },\n        {\n            app_name: 'Прочие документы для трудоустройства',\n            app_code: 'additional_agreement_to_the_contract',\n            doc_type_id_1c: ''\n        }\n    ]\n\n    const existingApps = await Application.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n\n    let promises: Promise\u003cvoid\u003e[] = [];\n\n    for (const docType of docTypes) {\n        if (!existingApps.find(f =\u003e f.data.app_code === docType.app_code)) {\n            const newDoc = Application.create();\n            newDoc.data.__name = docType.app_name;\n            newDoc.data.app_code = docType.app_code\n            newDoc.data.document_type = docType.doc_type || ''\n            newDoc.data.doc_type_id_1c = docType.doc_type_id_1c\n            promises.push(newDoc.save());\n\n            if (promises.length \u003e 20) {\n                await Promise.all(promises);\n                promises = [];\n            }\n        }\n    }\n\n    await Promise.all(promises)\n}\n\n",
  "forms": [],
  "settings": {
    "logged": true,
    "targetFeed": {
      "type": "object",
      "variable": "document_types"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {}
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
