{
  "__id": "f972ccf3-e198-4d00-82dc-ead4cd3d1262",
  "__name": "Основной отпуск",
  "code": "basic_vacation_1c_activity",
  "namespace": "ext_3c26e96d-9ba5-486d-a26e-47918e61fad3",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "3c26e96d-9ba5-486d-a26e-47918e61fad3",
  "icon": "system",
  "color": "#20c997",
  "itemName": "",
  "description": "",
  "retryCount": 0,
  "retryDelay": 5,
  "context": [
    {
      "code": "vacation_data",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Данные отпуска",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": false
      }
    },
    {
      "code": "vacation_transfer",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Перенос отпуска?",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true,
        "output": false
      }
    },
    {
      "code": "document_1c_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "ID документа 1С",
        "tooltip": "В случае переноса/корректировки нужно указать ID документа в 1С",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": false
      }
    },
    {
      "code": "connection_name",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Название базы 1С",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": false
      }
    },
    {
      "code": "additional_info",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дополнительная информация",
        "data": {
          "additionalType": "string"
        },
        "input": true,
        "output": false
      }
    },
    {
      "code": "integration_app_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "ID приложения интеграции",
        "data": {
          "additionalType": "string"
        },
        "input": false,
        "output": true
      }
    },
    {
      "code": "app",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Приложение-источник",
        "data": {},
        "input": true,
        "output": false
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "/**\nЗдесь вы можете написать скрипты для сложной серверной обработки контекста во время выполнения процесса.\nДля написания скриптов используйте TypeScript (https://www.typescriptlang.org).\nДокументация TS SDK доступна на сайте https://tssdk.elma365.com.\n\nСигнатуры функций\n\nДля синхронного взаимодействия:\n\tasync function action(): Promise\u003cvoid\u003e;\n\nДля модели проверки результата:\n\tasync function action(): Promise\u003cvoid\u003e;\n\tasync function check(): Promise\u003cboolean\u003e;\n\nДля модели обратного вызова:\n\tasync function action(url: string): Promise\u003cvoid\u003e;\n\tasync function callback(req: HTTPRequest): Promise\u003cvoid\u003e;\n\n**/\n\ninterface IStaffData {\n\tname: string,\n\tid_1c: string,\n\tindividual_id_1c: string,\n\torganization_id: string,\n\tposition_id: string,\n}\n\ninterface IBaseVacation {\n\tstaff: IStaffData,\n\tstart_date?: string,\n\tend_date?: string,\n\tduration? : number,\n\tprovide_basic: boolean,\n\tprovide_additional: boolean,\n\tadditional_vacations: IAdditionalVacation[],\n\tstatement?: string,\n\tplanned_pay_date : string,\n\tcomment?: string,\n}\n\ninterface IAdditionalVacation {\n\tvacation_type: string,\n\tstart_date: string,\n\tend_date: string,\n\tduration: number,\n\tstatement: string,\n}\n\nasync function action(): Promise\u003cvoid\u003e {\n\tif (!Context.data.vacation_data) {\n\t\tthrow new Error(\"Context.data.vacation_data is undefined\");\n\t}\n\n\tconst current_date = new Datetime();\n\tconst vacation_data: IBaseVacation = JSON.parse(Context.data.vacation_data);\n\n\tlet body: any = {\n\t\t\"Date\": current_date.format(\"YYYY-MM-DDT00:00:00\"),\n\t\t\"ПериодРегистрации\": current_date.format(\"YYYY-MM-01T00:00:00\"),\n\t\t\"Организация_Key\": vacation_data.staff.organization_id,\n\t\t\"ФизическоеЛицо_Key\": vacation_data.staff.individual_id_1c,\n\t\t\"Сотрудник_Key\": vacation_data.staff.id_1c,\n\t\t\"ПланируемаяДатаВыплаты\" : vacation_data.planned_pay_date,\n\t\t\"РассчитатьЗарплату\": true,\n\t\t\"АвтозаполнениеПериодовОплаты\": true,\n\t\t\"ПорядокВыплаты\": \"Межрасчет\",\n\t};\n\n\tif (vacation_data.provide_basic == true) {\n\t\tbody = {\n\t\t\t...body,\n\t\t\t\"ПредоставитьОсновнойОтпуск\": true,\n\t\t\t\"ДатаНачалаОсновногоОтпуска\": vacation_data.start_date,\n\t\t\t\"ДатаНачалаПериодаОтсутствия\": vacation_data.start_date,\n\t\t\t\"ДатаОкончанияПериодаОтсутствия\": vacation_data.end_date,\n\t\t\t\"ДатаОкончанияОсновногоОтпуска\": vacation_data.end_date,\n\t\t\t\"КоличествоДнейОсновногоОтпуска\": vacation_data.duration,\n\t\t\t\"Основание\": vacation_data.statement,\n\t\t};\n\t}\n\n\tif (vacation_data.provide_additional == true) {\n\t\tbody = {\n\t\t\t...body,\n\t\t\t\"ПредоставитьДополнительныйОтпуск\": true,\n\t\t\t\"ДополнительныеОтпуска\": vacation_data.additional_vacations\n\t\t\t\t.map(v =\u003e {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t\"ВидОтпуска_Key\": v.vacation_type,\n\t\t\t\t\t\t\"КоличествоДней\": v.duration,\n\t\t\t\t\t\t\"ДатаНачала\": v.start_date,\n\t\t\t\t\t\t\"ДатаОкончания\": v.end_date,\n\t\t\t\t\t\t\"Основание\": v.statement,\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t};\n\t}\n\n\tconst accounting1c = Namespace.params.fields.integration_app.app.fields.accounting_systems.variants.zup_1c;\n\tlet integration_app: ApplicationItem\u003cApplication$kedo$awaiting_documents_table_1c$Data, Application$kedo$awaiting_documents_table_1c$Params\u003e | undefined;\n\n\t// Если перенос отпуск и есть ID документа в 1С\n\tif (Context.data.vacation_transfer == true \u0026\u0026 Context.data.document_1c_id) {\n\t\tintegration_app = await Namespace.params.fields.integration_app.app.search()\n\t\t\t.where((f, g) =\u003e g.and(\n\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\tf.doc_id_1c.eq(Context.data.document_1c_id!)\n\t\t\t))\n\t\t\t.first();\n\n\t\tif (!integration_app) {\n\t\t\tthrow new Error(`Не удалось найти приложение интеграции по заданному ID документа 1С: ${Context.data.document_1c_id}`);\n\t\t}\n\n\t\tconst ready_status = Namespace.params.fields.integration_app.app.fields.__status.variants.ready;\n\n\t\tintegration_app.data.document_creation_data = JSON.stringify(body);\n\t\tintegration_app.data.isCorrection = true;\n\t\tintegration_app.data.status_1c = undefined;\n\t\tintegration_app.data.additional_info = Context.data.additional_info ?? \"\";\n\t\tintegration_app.data.base_1c_name = Context.data.connection_name ?? undefined;\n\t\tintegration_app.data.related_element = Context.data.app;\n\n\t\tawait integration_app.setStatus(ready_status);\n\t} else {\n\t\tintegration_app = Namespace.params.fields.integration_app.app.create();\n\n\t\tintegration_app.data.__name = `Отпуск (${vacation_data.staff.name})`;\n\t\tintegration_app.data.document_odata_name = \"Document_Отпуск\";\n\t\tintegration_app.data.accounting_systems = accounting1c;\n\t\tintegration_app.data.personal_guid_1c = JSON.stringify([vacation_data.staff.individual_id_1c]);\n\t\tintegration_app.data.document_creation_data = JSON.stringify(body)\n\t\tintegration_app.data.additional_info = Context.data.additional_info ?? \"\";\n\t\tintegration_app.data.base_1c_name = Context.data.connection_name;\n\t\tintegration_app.data.related_element = Context.data.app;\n\t}\n\n\tawait integration_app.save();\n\tContext.data.integration_app_id = integration_app.data.__id;\n}",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "__createdAt": "2024-03-29T11:28:45.179060501Z",
  "__createdBy": "d78f4b2f-13a2-4903-aeeb-fdb72d5b9d0c",
  "__updatedAt": "2024-04-09T07:29:34.56210478Z",
  "__updatedBy": "8c6e1940-a6f3-4603-aff7-7cdf41cc9799",
  "__deletedAt": null
}
