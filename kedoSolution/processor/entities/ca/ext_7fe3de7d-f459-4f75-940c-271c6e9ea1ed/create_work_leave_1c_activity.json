{
  "__id": "90a89a78-f9ea-4664-be44-58ed2792e6d5",
  "__name": "(1С) Создать отгул в счет раннее отработанного времени в 1С",
  "code": "create_work_leave_1c",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "icon": "system",
  "color": "#20c997",
  "itemName": "",
  "description": "",
  "retryCount": 1,
  "retryDelay": 5,
  "context": [
    {
      "code": "alternative_way",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Альтернативная интеграция",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true
      }
    },
    {
      "code": "connection_name",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Имя подключения 1С",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "vacation_type",
      "type": "ENUM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "enumItems": [
          {
            "code": "rest_for_work_weekends",
            "name": "Отдых за работу в выходной, праздничный день",
            "checked": false
          },
          {
            "code": "rest_for_donating_blood",
            "name": "Отдых за сдачу крови",
            "checked": false
          },
          {
            "code": "rest_for_overtime_work",
            "name": "Отдых за сверхурочную работу",
            "checked": false
          }
        ]
      },
      "view": {
        "name": "Вид отдыха",
        "data": {},
        "input": true
      }
    },
    {
      "code": "start_date",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дата начала",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "end_date",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дата окончания",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "subdivision_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "1C ID подразделения",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "staff_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "1C ID сотрудника",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "additional_info",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дополнительная информация",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "integration_app_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "ID приложения интеграции",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "response",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ответ",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "statement",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Основание",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ошибка",
        "data": {
          "additionalType": "string"
        },
        "input": false,
        "output": true
      }
    },
    {
      "code": "comment",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Комментарий",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "organization_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "1C ID организации",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "staff_individual_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "1C ID физ. лица",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "let baseUrl: string;\nlet login: string\nlet password: string\nlet myHeaders: any\n\nfunction getConnectionInfo(): Error | null {\n\tconst connectionsArray = Namespace.params.data.list_of_connected_platforms ? JSON.parse(Namespace.params.data.list_of_connected_platforms) : undefined;\n\tif (!connectionsArray) {\n\t\treturn new Error(`Не найдено записей подключения`)\n\t}\n\n\n\tconst currentConnection = connectionsArray.length \u003e 1 ? connectionsArray.find((item: any) =\u003e {\n\t\treturn item.name === Context.data.connection_name\n\t}) : connectionsArray[0]\n\tif (!currentConnection) {\n\t\treturn new Error(`Не найдено подключение c именем ${Context.data.connection_name}`)\n\t}\n\n\tbaseUrl = currentConnection.url;\n\tlogin = currentConnection.login\n\tpassword = currentConnection.password\n\tmyHeaders = {\n\t\tAuthorization: `Basic ${btoa(login + ':' + password)}`,\n\t};\n\treturn null\n}\n\ninterface IDayOff {\n\tDate: string,\n\t\"ПериодРегистрации\": string,\n\t\"Организация_Key\": string,\n\t\"Подразделение_Key\": string,\n\t\"Сотрудник_Key\": string,\n\t\"ФизическоеЛицо_Key\": string,\n\t\"ДатаНачала\": string,\n\t\"ДатаОкончания\": string,\n\t\"Комментарий\"?: string,\n\t\"Основание\"?: string,\n\t\"ОтсутствиеВТечениеЧастиСмены\": boolean,\n\t\"ДатаОтсутствия\"? : string,\n\t\"КоличествоЧасовОтгула\"?: number,\n\t\"КоличествоДнейОтгула\"? : number,\n\t\"РасходДнейОтгула\" : number,\n\t\"РасходЧасовОтгула\" : number,\n}\n\nasync function action(): Promise\u003cvoid\u003e {\n\tconst currentDate = new TDate();\n\n\tconst body: IDayOff = {\n\t\tDate: currentDate.format('YYYY-MM-DDT00:00:00'),\n\t\t\"ПериодРегистрации\": currentDate.format('YYYY-MM-01T00:00:00'),\n\t\t\"Организация_Key\": Context.data.organization_id ?? \"\",\n\t\t\"Подразделение_Key\": Context.data.subdivision_id ?? \"\",\n\t\t\"Сотрудник_Key\": Context.data.staff_id ?? \"\",\n\t\t\"ФизическоеЛицо_Key\": Context.data.staff_individual_id ?? \"\",\n\t\t\"ДатаНачала\": Context.data.start_date ?? \"\",\n\t\t\"ДатаОкончания\": Context.data.end_date ?? \"\",\n\t\t\"ОтсутствиеВТечениеЧастиСмены\": false,\n\t\t\"Комментарий\": Context.data.comment ?? \"\",\n\t\t\"Основание\": Context.data.statement ?? \"\",\n\t\t\"РасходДнейОтгула\" : 0,\n\t\t\"РасходЧасовОтгула\" : 0,\n\t}\n\n\tconst start_date = new Datetime(Context.data.start_date!, \"YYYY-MM-DDTHH:mm:ss\");\n\tconst end_date = new Datetime(Context.data.end_date!, \"YYYY-MM-DDTHH:mm:ss\");\n\n\tconst duration = end_date.sub(start_date);\n\n\tif (duration.hours \u003c= 8) {\n\t\tbody[\"ОтсутствиеВТечениеЧастиСмены\"] = true;\n\t\tbody[\"КоличествоЧасовОтгула\"] = Math.round(duration.hours);\n\t\tbody[\"РасходЧасовОтгула\"] = Math.round(duration.hours);\n\t\tbody[\"ДатаОтсутствия\"] = Context.data.start_date ?? \"\";\n\t} else {\n\t\tbody[\"ДатаНачала\"] = Context.data.start_date ?? \"\";\n\t\tbody[\"ДатаОкончания\"]  = Context.data.end_date ?? \"\";\n\t\tbody[\"РасходДнейОтгула\"] = Math.round(duration.days);\n\t\tbody[\"КоличествоДнейОтгула\"] = Math.round(duration.days);\n\t}\n\n\tif (!Context.data.alternative_way) {\n\t\tconst error = getConnectionInfo()\n\t\tif (error != null) {\n\t\t\tContext.data.error = error.message\n\t\t\treturn\n\t\t}\n\t\tconst requestOptions: FetchRequest = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: myHeaders,\n\t\t};\n\n\t\trequestOptions.body = JSON.stringify(body);\n\n\t\tconst resUrl = `${baseUrl}/Document_Отгул?$format=json`;\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${encodeURI(resUrl)}`, requestOptions)\n\t\t\tif (!response.ok) {\n\t\t\t\tContext.data.error += ` staff data res.status error; resUrl - ${resUrl} `\n\t\t\t\tthrow new Error(`res error ${resUrl}`);\n\t\t\t}\n\n\t\t\tContext.data.response = JSON.stringify(await response.json());\n\t\t} catch (err) {\n\t\t\tContext.data.error += ` try/catch error ${err}; resUrl - ${resUrl} `\n\t\t\tthrow new Error(err)\n\t\t}\n\t} else {\n\t\tconst accounting1c = Namespace.params.fields.awaiting_docs_table_1c.app.fields.accounting_systems.variants.zup_1c\n\t\tconst awaitingApp = Namespace.params.fields.awaiting_docs_table_1c.app.create()\n\t\tawaitingApp.data.__name = `Отгул в счет ранее отработанного времени`;\n\t\tawaitingApp.data.document_odata_name = \"Document_Отгул\"\n\t\tawaitingApp.data.accounting_systems = accounting1c\n\t\tawaitingApp.data.personal_guid_1c = JSON.stringify([Context.data.staff_individual_id])\n\t\tawaitingApp.data.document_creation_data = JSON.stringify(body)\n\t\tawaitingApp.data.base_1c_name = Context.data.connection_name;\n\t\tawaitingApp.data.additional_info = Context.data.additional_info ?? \"\";\n\t\tawait awaitingApp.save();\n\n\t\tContext.data.integration_app_id = awaitingApp.data.__id\n\t}\n}",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "__createdAt": "2023-12-20T13:08:01.833459009Z",
  "__createdBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "__updatedAt": "2024-02-14T11:09:54.357801313Z",
  "__updatedBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "__deletedAt": null
}
