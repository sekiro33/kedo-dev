{
  "__id": "5c0e7ddc-5345-48af-acfe-67df76c8a8ff",
  "__name": "Генерация XML",
  "code": "create_xml",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "icon": "system",
  "color": "#20c997",
  "itemName": "",
  "description": "",
  "retryCount": 0,
  "retryDelay": 5,
  "context": [
    {
      "code": "doc",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Документ",
        "data": {},
        "input": true
      }
    },
    {
      "code": "staff",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Сотрудник (КЭДО)",
        "data": {},
        "input": true
      }
    },
    {
      "code": "xml_file",
      "type": "FILE",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "XML файл",
        "data": {},
        "output": true
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ошибка",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "test_sample",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": "\u003cedoc:wredcData xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:edoc=\"http://mintrud.gov.ru/work-related-electronic-document\"\n    id= created= version=\"1.0\"\n    xsi:schemaLocation=\"http://mintrud.gov.ru/work-related-electronic-document work-related-electronic-document_20.09.xsd\"\u003e\n    \u003ccontent\u003e\n        \u003cemployername\u003e\u003c/employername\u003e\n        \u003cinnemployer\u003e\u003c/innemployer\u003e\n        \u003cogrn\u003e\u003c/ogrn\u003e\n        \u003ckpp\u003e\u003c/kpp\n        \u003cjobtitle\u003e\u003c/jobtitle\u003e\n        \u003cdocinfo\u003e   \n            \u003cdocName\u003e\u003c/docName\u003e\n            \u003cdocNumber\u003e\u003c/docNumber\u003e\n            \u003cdate\u003e\u003c/date\u003e\n            \u003cdocType\u003e\u003c/docType\u003e\n            \u003cannotation\u003e\u003c/annotation\u003e\n            \u003cfile\u003e\u003c/file\u003e\n            \u003csize\u003e\u003c/size\u003e\n            \u003csignature\u003e\n                \u003cdate\u003e\u003c/date\u003e\n                \u003cx509\u003e\n                    \u003cfile\u003e\u003c/file\u003e\n                    \u003csize\u003e\u003c/size\u003e\n                \u003c/x509\u003e\n            \u003c/signature\u003e\n            \u003cemployeeinfo\u003e\n                \u003clastnameinfo\u003e\u003c/lastnameinfo\u003e\n                \u003cfirstnameinfo\u003e\u003c/firstnameinfo\u003e\n                \u003cpatronymicInfo\u003e\u003c/patronymicInfo\u003e\n                \u003cjobtitle\u003e\u003c/jobtitle\u003e\n                \u003csignature\u003e\n                    \u003cdate\u003e\u003c/date\u003e\n                    \u003csnils\u003e\u003c/snils\u003e\n                    \u003cx509\u003e\n                        \u003cfile\u003e\u003c/file\u003e\n                        \u003csize\u003e\u003c/size\u003e\n                    \u003c/x509\u003e\n                \u003c/signature\u003e\n            \u003c/employeeinfo\u003e\n        \u003c/docinfo\u003e\n    \u003c/content\u003e\n\u003c/edoc:wredcData\u003e",
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "XML-шаблон",
        "data": {
          "additionalType": "text"
        }
      }
    },
    {
      "code": "generated_xml",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Сгенерированный XML (строка)",
        "data": {
          "additionalType": "string"
        }
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "const emptyStringRegex = /^\\s*\\n/gm;\nconst otherDocsCode = \"12.999\";\n\ntype xmlElement = {\n\telement_name: string,\n\tregex: RegExp,\n\telement_type: string,\n\tfields?: xmlElement[]\n};\n\ntype docInfo = {\n\tid: string,\n\tcreated: string,\n\temployername: string,\n\tinnemployer: string,\n\togrn: string,\n\tkpp?: string,\n\temployeer_jobtitle?: string,\n\tdocName: string,\n\tdocNumber?: string,\n\tdocType: string,\n\tfile_name: string,\n\tfile_size: string,\n\tcreatedAt: string,\n\temployeer_sign_date: string,\n\tsign_name: string,\n\tsign_size?: string,\n\tfirstnameinfo: string,\n\tlastnameinfo: string,\n\tpatronymicInfo: string,\n\tjobtitle: string,\n\tstaff_sign_date?: string,\n\tsnils: string,\n\tsign_name_staff?: string,\n\tsign_size_staff?: string\n};\n\ntype jsonToXmlKey = keyof typeof docData;\n\nlet fetchedDoc: any;\nlet docData: docInfo | undefined;\nlet xmlText = `\u003cedoc:wredcData xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:edoc=\"http://mintrud.gov.ru/work-related-electronic-document\"\n    id= created= version=\"1.0\"\n    xsi:schemaLocation=\"http://mintrud.gov.ru/work-related-electronic-document work-related-electronic-document_20.09.xsd\"\u003e\n    \u003ccontent\u003e\n        \u003cemployername\u003e\u003c/employername\u003e\n        \u003cinnemployer\u003e\u003c/innemployer\u003e\n        \u003cogrn\u003e\u003c/ogrn\u003e\n        \u003ckpp\u003e\u003c/kpp\u003e\n        \u003cjobtitle\u003e\u003c/jobtitle\u003e\n        \u003cdocinfo\u003e   \n            \u003cdocName\u003e\u003c/docName\u003e\n            \u003cdocNumber\u003e\u003c/docNumber\u003e\n            \u003cdate\u003e\u003c/date\u003e\n            \u003cdocType\u003e\u003c/docType\u003e\n            \u003cannotation\u003e\u003c/annotation\u003e\n            \u003cfile\u003e\u003c/file\u003e\n            \u003csize\u003e\u003c/size\u003e\n            \u003csignature\u003e\n                \u003cdate\u003e\u003c/date\u003e\n                \u003cx509\u003e\n                    \u003cfile\u003e\u003c/file\u003e\n                    \u003csize\u003e\u003c/size\u003e\n                \u003c/x509\u003e\n            \u003c/signature\u003e\n            \u003cemployeeinfo\u003e\n                \u003clastnameinfo\u003e\u003c/lastnameinfo\u003e\n                \u003cfirstnameinfo\u003e\u003c/firstnameinfo\u003e\n                \u003cpatronymicInfo\u003e\u003c/patronymicInfo\u003e\n                \u003cjobtitle\u003e\u003c/jobtitle\u003e\n                \u003csignature\u003e\n                    \u003cdate\u003e\u003c/date\u003e\n                    \u003csnils\u003e\u003c/snils\u003e\n                    \u003cx509\u003e\n                        \u003cfile\u003e\u003c/file\u003e\n                        \u003csize\u003e\u003c/size\u003e\n                    \u003c/x509\u003e\n                \u003c/signature\u003e\n            \u003c/employeeinfo\u003e\n        \u003c/docinfo\u003e\n    \u003c/content\u003e\n\u003c/edoc:wredcData\u003e`\n\nconst globalXmlSchema: xmlElement[] = [\n\t{\n\t\telement_name: \"id\",\n\t\tregex: /id=/,\n\t\telement_type: \"attribute\"\n\t},\n\t{\n\t\telement_name: \"created\",\n\t\tregex: /created=/,\n\t\telement_type: \"attribute\"\n\t},\n\t{\n\t\telement_name: \"content\",\n\t\tregex: /(?\u003copen\u003e\u003ccontent\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/content\u003e)/,\n\t\telement_type: \"object\",\n\t\tfields: [\n\t\t\t{\n\t\t\t\telement_name: \"employername\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003cemployername\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/employername\u003e)/,\n\t\t\t\telement_type: \"field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\telement_name: \"innemployer\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003cinnemployer\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/innemployer\u003e)/,\n\t\t\t\telement_type: \"field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\telement_name: \"ogrn\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003cogrn\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/ogrn\u003e)/,\n\t\t\t\telement_type: \"field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\telement_name: \"kpp\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003ckpp\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/kpp\u003e)/,\n\t\t\t\telement_type: \"field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\telement_name: \"employeer_jobtitle\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003cjobtitle\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/jobtitle\u003e)[\\n\\w\\s\\t]*(?\u003crest\u003e\u003cdoc)/,\n\t\t\t\telement_type: \"field\"\n\t\t\t},\n\t\t\t{\n\t\t\t\telement_name: \"docinfo\",\n\t\t\t\tregex: /(?\u003copen\u003e\u003cdocinfo\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/docinfo\u003e)/,\n\t\t\t\telement_type: \"object\",\n\t\t\t\tfields: [\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"docName\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cdocName\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/docName\u003e)/,\n\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \telement_name: \"docNumber\",\n\t\t\t\t\t// \tregex: /(?\u003copen\u003e\u003cdocNumber\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/docNumber\u003e)/,\n\t\t\t\t\t// \telement_type: \"field\"\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"createdAt\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cdate\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/date\u003e)/,\n\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"docType\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cdocType\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/docType\u003e)/,\n\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"file_name\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cfile\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/file\u003e)/,\n\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"file_size\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csize\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/size\u003e)/,\n\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"employeer_signature\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csignature\u003e)(?\u003cvalue\u003e[\\w\\n\\s\\t\\/\u003c\u003e]*)(?\u003cclose\u003e\u003c\\/signature\u003e)[\\n\\w\\s\\t]*(?\u003crest\u003e\u003cemp)/,\n\t\t\t\t\t\telement_type: \"object\",\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"employeer_sign_date\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cdate\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/date\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"x509\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cx509\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/x509\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"object\",\n\t\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement_name: \"sign_name\",\n\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cfile\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/file\u003e)/,\n\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement_name: \"sign_size\",\n\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csize\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/size\u003e)/,\n\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\telement_name: \"employeeinfo\",\n\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cemployeeinfo\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/employeeinfo\u003e)/,\n\t\t\t\t\t\telement_type: \"object\",\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"lastnameinfo\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003clastnameinfo\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/lastnameinfo\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"firstnameinfo\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cfirstnameinfo\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/firstnameinfo\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"patronymicInfo\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cpatronymicInfo\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/patronymicInfo\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"jobtitle\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cjobtitle\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/jobtitle\u003e)/,\n\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement_name: \"staff_signature\",\n\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csignature\u003e)(?\u003cvalue\u003e[\\w\\n\\s\\t\\/\u003c\u003e]*)(?\u003cclose\u003e\u003c\\/signature\u003e)[\\n\\w\\s\\t]*(?\u003crest\u003e\u003c\\/emp)/,\n\t\t\t\t\t\t\t\telement_type: \"object\",\n\t\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement_name: \"staff_sign_date\",\n\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cdate\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/date\u003e)/,\n\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement_name: \"snils\",\n\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csnils\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/snils\u003e)/,\n\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement_name: \"x509_employeer\",\n\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cx509\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/x509\u003e)/,\n\t\t\t\t\t\t\t\t\t\telement_type: \"object\",\n\t\t\t\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\telement_name: \"sign_name_staff\",\n\t\t\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003cfile\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/file\u003e)/,\n\t\t\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\telement_name: \"sign_size_staff\",\n\t\t\t\t\t\t\t\t\t\t\t\tregex: /(?\u003copen\u003e\u003csize\u003e)(?\u003cvalue\u003e)(?\u003cclose\u003e\u003c\\/size\u003e)/,\n\t\t\t\t\t\t\t\t\t\t\t\telement_type: \"field\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t]\n\t}\n];\n\nasync function convertFile(): Promise\u003cvoid\u003e {\n\ttry {\n\n\t\tlet text = Context.data.generated_xml!;\n\t\tlet utf8: any[] = [];\n\n\t\tfor (let i = 0; i \u003c text.length; i++) {\n\t\t\tlet charcode = text.charCodeAt(i);\n\n\t\t\tif (charcode \u003c 0x80) {\n\t\t\t\tutf8.push(charcode);\n\t\t\t} else if (charcode \u003c 0x800) {\n\t\t\t\tutf8.push(\n\t\t\t\t\t0xc0 | (charcode \u003e\u003e 6),\n\t\t\t\t\t0x80 | (charcode \u0026 0x3f)\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\telse if (charcode \u003c 0xd800 || charcode \u003e= 0xe000) {\n\t\t\t\tutf8.push(\n\t\t\t\t\t0xe0 | (charcode \u003e\u003e 12),\n\t\t\t\t\t0x80 | ((charcode \u003e\u003e 6) \u0026 0x3f),\n\t\t\t\t\t0x80 | (charcode \u0026 0x3f)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\ti++;\n\t\t\t\tcharcode = 0x10000 + (((charcode \u0026 0x3ff) \u003c\u003c 10) | (text.charCodeAt(i) \u0026 0x3ff));\n\t\t\t\tutf8.push(\n\t\t\t\t\t0xf0 | (charcode \u003e\u003e 18),\n\t\t\t\t\t0x80 | ((charcode \u003e\u003e 12) \u0026 0x3f),\n\t\t\t\t\t0x80 | ((charcode \u003e\u003e 6) \u0026 0x3f),\n\t\t\t\t\t0x80 | (charcode \u0026 0x3f)\n\t\t\t\t);\n\t\t\t};\n\t\t};\n\n\t\tlet bufView = new Uint8Array(utf8.length);\n\n\t\tfor (var i = 0; i \u003c utf8.length; i++) {\n\t\t\tbufView[i] = utf8[i];\n\t\t}\n\n\t\tlet file = await Context.fields.xml_file.create(`wredc_data.xml`, bufView);\n\t\tContext.data.xml_file = file;\n\t} catch (err) {\n\t\tContext.data.error = \"xml file generate error\" + err.message;\n\t\treturn;\n\t};\n};\n\nasync function getData(): Promise\u003cdocInfo | undefined\u003e {\n\ttry {\n\n\t\tlet doc = await Context.data.doc!.fetch();\n\n\t\tif (!!doc.data.__sourceRef) {\n\t\t\tfetchedDoc = await doc.data.__sourceRef.fetch();\n\t\t} else {\n\t\t\tfetchedDoc = doc;\n\t\t};\n\n\t\tlet staff = await Context.data.staff!.fetch();\n\t\tlet extUser = await System.users.search().where(i =\u003e i.__id.eq(staff.data.ext_user!.id)).first();\n\t\tlet file: FileItem | undefined = undefined;\n\t\tlet fileLink: string = \"\";\n\t\tlet fileBase64: string = \"\";\n\t\tlet fileSize: string = \"0\";\n\t\tlet staffSignDate: string = \"\";\n\t\tlet staffSignName: string = \"\";\n\t\tlet staffSignSize: string = \"\";\n\t\tlet signHistory: any;\n\t\tlet signSize: string = \"\";\n\t\tlet signDate: string = \"\";\n\t\tlet employeeSign: any;\n\t\tlet docType: string = \"\";\n\t\tlet organization = await staff.data.organization.fetch();\n\t\tlet entity = await organization.data.entity.fetch();\n\n\t\tlet innemployer = entity.data._inn;\n\t\tlet ogrn = entity.data._ogrn;\n\t\tlet kpp = entity.data._kpp;\n\t\tlet employeerSignUser: any;\n\t\tlet employeerSignUserName: string = \"\";\n\n\t\tlet docTypeApp = await Namespace.params.fields.doc_number_app.app.search()\n\t\t\t.where((f, g) =\u003e g.and(\n\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\tf.app_namespace.eq(fetchedDoc.namespace),\n\t\t\t\tf.app_code.eq(fetchedDoc.code),\n\t\t\t))\n\t\t\t.first();\n\n\t\tdocType = docTypeApp ? docTypeApp.data.code! : otherDocsCode;\n\n\t\tif (!!fetchedDoc) {\n\t\t\tfile = await fetchedDoc.data.__file.fetch();\n\t\t\tif (!!file) {\n\t\t\t\tfileLink = await file!.getDownloadUrl();\n\t\t\t\tlet fileByteArray = await fetch(fileLink).then(async (file) =\u003e file.arrayBuffer());\n\t\t\t\tfileBase64 = btoa(String.fromCharCode(...new Uint8Array(fileByteArray)));\n\t\t\t\tfileSize = fileBase64.length.toString();\n\t\t\t\t// fileSize = \"0\";\n\t\t\t};\n\t\t};\n\n\t\tlet fileName = file?.data.__name!;\n\t\tlet signName = fileName + \".sig\";\n\t\ttry {\n\t\t\tsignHistory = await fetchedDoc.getSignHistory();\n\t\t} catch {\n\n\t\t};\n\n\t\tif (signHistory) {\n\t\t\tlet sign = signHistory[0].signs.find((s: any) =\u003e s.userID != extUser!.id);\n\t\t\temployeeSign = signHistory[0].signs.find((sign: any) =\u003e sign.userID === extUser!.id);\n\t\t\tif (!!sign) {\n\t\t\t\temployeerSignUser = await System.users.search().where((f, g) =\u003e g.and(\n\t\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\t\tf.__id.eq(sign.userID)\n\t\t\t\t)).first();\n\t\t\t\tif (employeerSignUser) {\n\t\t\t\t\temployeerSignUserName = employeerSignUser.data.displayedPosition;\n\t\t\t\t}\n\t\t\t\tlet signBase64 = sign.sign;\n\t\t\t\tsignSize = signBase64.length.toString();\n\t\t\t\t// signSize = \"0\";\n\t\t\t\tsignDate = new Datetime(sign.createdAt).format(\"YYYY-MM-DD\");\n\t\t\t};\n\t\t}\n\n\t\tlet firstName = staff.data.full_name!.firstname;\n\t\tlet lastName = staff.data.full_name!.lastname;\n\t\tlet patronymic = staff.data.full_name!.middlename;\n\n\t\tif (!!employeeSign) {\n\t\t\tstaffSignName = signName;\n\t\t\tstaffSignDate = new Datetime(employeeSign.createdAt).format(\"YYYY-MM-DD\");\n\t\t\tstaffSignSize = employeeSign.sign.length.toString();\n\t\t\t// staffSignSize = \"\";\n\t\t};\n\n\t\tlet snils = staff.data.snils;\n\t\tlet jobTitle = staff.data.position ? await staff.data.position.fetch().then((p: any) =\u003e p.data.__name) : \"Нет должности\";\n\n\t\tlet docData: docInfo = {\n\t\t\tid: fetchedDoc.data.__id,\n\t\t\tcreated: new Datetime().format(\"YYYY-MM-DD\"),\n\t\t\tcreatedAt: doc.data.__createdAt.format(\"YYYY-MM-DD HH:MM:SS\"),\n\t\t\temployername: \"ELMA\",\n\t\t\tinnemployer,\n\t\t\togrn,\n\t\t\tkpp,\n\t\t\tdocName: fileName,\n\t\t\tdocType: docType,\n\t\t\tfile_name: fileName,\n\t\t\tfile_size: fileSize,\n\t\t\temployeer_sign_date: signDate,\n\t\t\tsign_name: signName,\n\t\t\tsign_size: signSize,\n\t\t\tfirstnameinfo: firstName,\n\t\t\tlastnameinfo: lastName,\n\t\t\tpatronymicInfo: patronymic,\n\t\t\tjobtitle: jobTitle,\n\t\t\tstaff_sign_date: staffSignDate,\n\t\t\tsnils: snils,\n\t\t\tsign_name_staff: staffSignName,\n\t\t\tsign_size_staff: staffSignSize,\n\t\t\temployeer_jobtitle: employeerSignUserName\n\t\t};\n\n\t\treturn docData;\n\t} catch (err) {\n\t\tContext.data.error = \"get data error\" + err.message;\n\t\treturn;\n\t}\n};\n\nfunction handleElement(regElem: xmlElement, samplePart: string) {\n\tlet fieldType = regElem.element_type;\n\n\tswitch (fieldType) {\n\t\tcase \"attribute\":\n\t\t\txmlText = samplePart.replace(regElem.regex, `$\u0026\"${docData![regElem.element_name as jsonToXmlKey]}\"`);\n\t\t\tbreak;\n\t\tcase \"field\":\n\t\t\tif (regElem.element_name == \"employeer_jobtitle\" \u0026\u0026 !docData!.employeer_jobtitle) {\n\t\t\t\txmlText = samplePart.replace(regElem.regex, \"$4\")\n\t\t\t} else {\n\t\t\t\txmlText = samplePart.replace(regElem.regex, `$1${docData![regElem.element_name as jsonToXmlKey]}$3`);\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"object\":\n\t\t\tlet elementName = regElem.element_name;\n\t\t\tlet signExist: boolean;\n\t\t\tswitch (elementName) {\n\t\t\t\tcase \"staff_signature\":\n\t\t\t\t\tsignExist = !!(docData!.staff_sign_date \u0026\u0026 docData!.sign_name_staff \u0026\u0026 docData!.sign_size_staff);\n\n\t\t\t\t\tif (!signExist) {\n\t\t\t\t\t\txmlText = samplePart.replace(regElem.regex, \"$4\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"employeer_signature\":\n\t\t\t\t\tsignExist = !!(docData!.sign_name \u0026\u0026 docData!.sign_size \u0026\u0026 docData!.employeer_sign_date);\n\t\t\t\t\tif (!signExist) {\n\t\t\t\t\t\txmlText = samplePart.replace(regElem.regex, \"$4\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let field of regElem.fields!) {\n\t\t\t\thandleElement(field, xmlText);\n\t\t\t};\n\t\t\tbreak;\n\t};\n};\n\nasync function action(): Promise\u003cvoid\u003e {\n\tdocData = await getData();\n\tif (!docData) {\n\t\treturn;\n\t}\n\tfor (let item of globalXmlSchema) {\n\t\thandleElement(item, xmlText!)\n\t};\n\tContext.data.generated_xml = xmlText;\n\tawait convertFile();\n};\n",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "__createdAt": "2023-12-20T13:08:02.014014259Z",
  "__createdBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "__updatedAt": "2024-02-14T11:09:54.846179101Z",
  "__updatedBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "__deletedAt": null
}
