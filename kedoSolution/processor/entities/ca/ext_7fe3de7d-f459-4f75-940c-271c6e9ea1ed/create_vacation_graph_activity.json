{
  "__id": "654eed1b-ca7d-4d05-8c93-ffd647155f8d",
  "__name": "__old(1С) Создать график отпусков",
  "code": "create_vacation_graph",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "icon": "system",
  "color": "#20c997",
  "itemName": "",
  "description": "",
  "retryCount": 10,
  "retryDelay": 5,
  "context": [
    {
      "code": "organization_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "1C ID организации",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "vacation_data",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Данные отпусков",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "comment",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Комментарий",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ошибка",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "response",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ответ",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "connection_name",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Имя подключения 1С",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "alternative_way",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Альтернативная интеграция",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true
      }
    },
    {
      "code": "integration_app_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "ID приложения интеграции",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "additional_info",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Дополнительная информация",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "/**\nЗдесь вы можете написать скрипты для сложной серверной обработки контекста во время выполнения процесса.\nДля написания скриптов используйте TypeScript (https://www.typescriptlang.org).\nДокументация TS SDK доступна на сайте https://tssdk.elma365.com.\n\nСигнатуры функций\n\nДля синхронного взаимодействия:\n\tasync function action(): Promise\u003cvoid\u003e;\n\nДля модели проверки результата:\n\tasync function action(): Promise\u003cvoid\u003e;\n\tasync function check(): Promise\u003cboolean\u003e;\n\nДля модели обратного вызова:\n\tasync function action(url: string): Promise\u003cvoid\u003e;\n\tasync function callback(req: HTTPRequest): Promise\u003cvoid\u003e;\n\n**/\n\nlet baseUrl: string;\nlet login: string\nlet password: string\nlet myHeaders: any\n\nfunction getConnectionInfo(): Error | null {\n\tconst connectionsArray = Namespace.params.data.list_of_connected_platforms ? JSON.parse(Namespace.params.data.list_of_connected_platforms) : undefined;\n\n\tif (!connectionsArray) {\n\t\treturn new Error(`Не найдено записей подключения`);\n\t}\n\n\tconst currentConnection = connectionsArray.length \u003e 1 ? connectionsArray.find((item: any) =\u003e {\n\t\treturn item.name === Context.data.connection_name\n\t}) : connectionsArray[0]\n\n\tif (!currentConnection) {\n\t\treturn new Error(`Не найдено подключение c именем ${Context.data.connection_name}`)\n\t}\n\n\tbaseUrl = currentConnection.url;\n\tlogin = currentConnection.login\n\tpassword = currentConnection.password\n\tmyHeaders = {\n\t\tAuthorization: `Basic ${btoa(login + ':' + password)}`,\n\t};\n\treturn null\n}\n\ninterface IScheduleDocument {\n\t\"Date\": string,\n\t\"Организация_Key\": string,\n\t\"ДатаСобытия\": string,\n\t\"Сотрудники\": IScheduleLine[],\n\t\"Комментарий\"?: string,\n}\n\ninterface IVacationElement {\n\tstaffId: string,\n\tstaffPersonalId: string,\n\tstartDate: string,\n\tendDate: string,\n\tduration: number,\n\tvacationType: string,\n\tcomment? : string,\n}\n\ninterface IScheduleLine {\n\t\"Сотрудник_Key\": string,\n\t\"ФизическоеЛицо_Key\": string,\n\t\"ВидОтпуска_Key\": string,\n\t\"ДатаНачала\": string,\n\t\"ДатаОкончания\": string,\n\t\"КоличествоДней\": number,\n\t\"Примечание\": string,\n}\n\nasync function action(): Promise\u003cvoid\u003e {\n\tif (!Context.data.vacation_data) {\n\t\tthrow new Error(\"Context.data.vacation_data is undefined\");\n\t}\n\n\tconst current_date = new Datetime();\n\n\tconst vacation_data : IVacationElement[] = JSON.parse(Context.data.vacation_data);\n\n\t/*\n\t\tОсновной отпуск:\n\t\tbdd723d2-a9fe-4a8b-8c37-d8fe02245ea1\n\t*/\n\n\tconst schedule_table: IScheduleLine[] = vacation_data.map((line) =\u003e {\n\t\treturn {\n\t\t\t\"Сотрудник_Key\": line.staffId,\n\t\t\t\"ФизическоеЛицо_Key\": line.staffPersonalId,\n\t\t\t\"ВидОтпуска_Key\": line.vacationType,\n\t\t\t\"ДатаНачала\": `${line.startDate}T00:00:00`,\n\t\t\t\"ДатаОкончания\": `${line.endDate}T00:00:00`,\n\t\t\t\"КоличествоДней\": line.duration,\n\t\t\t\"Примечание\": line.comment ?? \"\",\n\t\t}\n\t})\n\n\tconst body: IScheduleDocument = {\n\t\tDate: current_date.format(\"YYYY-MM-DDT00:00:00\"),\n\t\t\"Организация_Key\": Context.data.organization_id ?? \"\",\n\t\t\"ДатаСобытия\": current_date.format(\"YYYY-MM-DDT00:00:00\"),\n\t\t\"Сотрудники\": schedule_table,\n\t\t\"Комментарий\": Context.data.comment ?? \"\",\n\t}\n\n\tif (!Context.data.alternative_way) {\n\t\tconst error = getConnectionInfo()\n\t\tif (error != null) {\n\t\t\tContext.data.error = error.message\n\t\t\treturn\n\t\t}\n\t\tconst requestOptions: FetchRequest = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: myHeaders,\n\t\t};\n\n\t\trequestOptions.body = JSON.stringify(body);\n\n\t\tconst resUrl = `${baseUrl}/Document_ГрафикОтпусков?$format=json`;\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${encodeURI(resUrl)}`, requestOptions)\n\t\t\tif (!response.ok) {\n\t\t\t\tContext.data.error += ` staff data res.status error; resUrl - ${resUrl} `;\n\t\t\t\t//throw new Error(`Response: ${JSON.stringify(response)}, Headers: ${JSON.stringify(myHeaders)}, Body: ${JSON.stringify(body)}`);\n\t\t\t\tthrow new Error(`res error ${resUrl}`);\n\t\t\t}\n\n\t\t\tContext.data.response = JSON.stringify(await response.json());\n\t\t} catch (err) {\n\t\t\tContext.data.error += ` try/catch error ${err}; resUrl - ${resUrl} `;\n\t\t\tthrow new Error(err);\n\t\t}\n\t} else {\n\t\tconst accounting1c = Namespace.params.fields.awaiting_docs_table_1c.app.fields.accounting_systems.variants.zup_1c\n\t\tconst awaitingApp = Namespace.params.fields.awaiting_docs_table_1c.app.create()\n\t\tawaitingApp.data.__name = \"График отпусков\"\n\t\tawaitingApp.data.document_odata_name = \"Document_ГрафикОтпусков\"\n\t\tawaitingApp.data.accounting_systems = accounting1c\n\t\tawaitingApp.data.personal_guid_1c = JSON.stringify([Context.data.individual_id_1c])\n\t\tawaitingApp.data.document_creation_data = JSON.stringify(body)\n\t\tawaitingApp.data.additional_info = Context.data.additional_info ?? \"\";\n\t\tawaitingApp.data.base_1c_name = Context.data.connection_name;\n\t\tawait awaitingApp.save()\n\n\t\tContext.data.integration_app_id = awaitingApp.data.__id\n\t}\n}",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "deprecated": true,
  "deprecatedMessage": "Перенесено в модуль интеграции 1С",
  "__createdAt": "2024-05-27T06:34:21.15061008Z",
  "__createdBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__updatedAt": "2024-05-30T22:11:26.926846337Z",
  "__updatedBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__deletedAt": null
}
