{
  "__id": "9ce8b8e8-881f-4a8c-a091-de829f735853",
  "__name": "__oldПолучаем участников групп",
  "code": "get_users",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "icon": "system",
  "color": "#20c997",
  "itemName": "Получаем участников групп",
  "bindForm": true,
  "description": "",
  "retryCount": 0,
  "retryDelay": 5,
  "context": [
    {
      "code": "organization",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": true,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Организация",
        "data": {},
        "input": true,
        "output": false
      }
    },
    {
      "code": "groups",
      "type": "ENUM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "enumItems": [
          {
            "code": "hr_dep",
            "name": "Отдел кадров",
            "checked": false
          },
          {
            "code": "accounting",
            "name": "Бухгалтерия",
            "checked": false
          },
          {
            "code": "signatories",
            "name": "Подписанты",
            "checked": false
          },
          {
            "code": "boss",
            "name": "Руководитель компании",
            "checked": false
          },
          {
            "code": "office_managers",
            "name": "Офис менеджеры",
            "checked": false
          },
          {
            "code": "matching_finance",
            "name": "Ответственные за финансы",
            "checked": false
          }
        ]
      },
      "view": {
        "name": "Группы",
        "data": {},
        "input": false
      }
    },
    {
      "code": "hr_dep",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Отдел кадров",
        "data": {},
        "output": true
      }
    },
    {
      "code": "accounting",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Бухгалтерия",
        "data": {},
        "output": true
      }
    },
    {
      "code": "matching_finance",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Ответственные за финансы ",
        "data": {},
        "output": true
      }
    },
    {
      "code": "office_managers",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Офис менеджеры",
        "data": {},
        "output": true
      }
    },
    {
      "code": "signatories",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Подписанты",
        "data": {},
        "output": true
      }
    },
    {
      "code": "boss",
      "type": "SYS_USER",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        }
      },
      "view": {
        "name": "Руководитель компании",
        "data": {},
        "output": true
      }
    },
    {
      "code": "boss_app",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Руководитель компании (app)",
        "data": {},
        "input": false,
        "output": true
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "error",
        "data": {
          "additionalType": "text"
        },
        "output": true
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "/**\nЗдесь вы можете написать скрипты для сложной серверной обработки контекста во время выполнения процесса\nДля написания скриптов используйте TypeScript (https://www.typescriptlang.org).\nДокументация TS SDK доступна на сайте https://tssdk.elma365.com.\n\nСигнатуры функций\n\nДля синхронного взаимодействия:\n\tasync function action(): Promise\u003cvoid\u003e;\n\nДля модели проверки результата:\n\tasync function action(): Promise\u003cvoid\u003e;\n\tasync function check(): Promise\u003cboolean\u003e;\n\nДля модели обратного вызова:\n\tasync function action(url: string): Promise\u003cvoid\u003e;\n\tasync function callback(req: HTTPRequest): Promise\u003cvoid\u003e;\n\n**/\n\nasync function action(): Promise\u003cvoid\u003e {\n\tlet error: string = '';\n\n\tconst refItem = new RefItem\u003cApplicationItem\u003cApplication$kedo$organization$Data, Application$kedo$organization$Params\u003e\u003e('kedo', 'organization', Context.data.organization!.id);\n\tconst organiaztion = await refItem.fetch();\n\tconst staffs = await Namespace.params.fields.employee_app.app.search()\n\t\t.where((f, g) =\u003e g.and(\n\t\t\tf.__deletedAt.eq(null)\n\t\t))\n\t\t.size(10000)\n\t\t.all();\n\t// получаем сотрудников Отдела кадров\n\tif (organiaztion.data.hr_department \u0026\u0026 organiaztion.data.hr_department.length \u003e 0) {\n\t\tfor (const item of organiaztion.data.hr_department) {\n\t\t\tconst staff = staffs.find(f =\u003e f.id == item.id);\n\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\tContext.data.hr_dep = (Context.data.hr_dep || []).concat(staff.data.ext_user!)\n\t\t\t}\n\t\t}\n\t\tif (!Context.data.hr_dep || Context.data.hr_dep.length == 0)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Отдел кадров\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Отдел кадров\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\t// получаем сотрудников Бухгалтерии\n\tif (organiaztion.data.accounting \u0026\u0026 organiaztion.data.accounting.length \u003e 0) {\n\t\tfor (const item of organiaztion.data.accounting) {\n\t\t\tconst staff = staffs.find(f =\u003e f.id == item.id);\n\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\tContext.data.accounting = (Context.data.accounting || []).concat(staff.data.ext_user!)\n\t\t\t}\n\t\t}\n\t\tif (!Context.data.accounting || Context.data.accounting.length == 0)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Бухгалтерия\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Бухгалтерия\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\t// получаем Подписантов\n\tif (organiaztion.data.signatories \u0026\u0026 organiaztion.data.signatories.length \u003e 0) {\n\t\tfor (const item of organiaztion.data.signatories) {\n\t\t\tconst staff = staffs.find(f =\u003e f.id == item.id);\n\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\tContext.data.signatories = (Context.data.signatories || []).concat(staff.data.ext_user!)\n\t\t\t}\n\t\t}\n\t\tif (!Context.data.signatories || Context.data.signatories.length == 0)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Подписанты\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Подписанты\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\t// получаем Офис менеджеров\n\tif (organiaztion.data.office_managers \u0026\u0026 organiaztion.data.office_managers.length \u003e 0) {\n\t\tfor (const item of organiaztion.data.office_managers) {\n\t\t\tconst staff = staffs.find(f =\u003e f.id == item.id);\n\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\tContext.data.office_managers = (Context.data.office_managers || []).concat(staff.data.ext_user!)\n\t\t\t}\n\t\t}\n\t\tif (!Context.data.office_managers || Context.data.office_managers.length == 0)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Офис менеджеры\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Офис менеджеры\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\t// получаем Ответственных за финансы\n\tif (organiaztion.data.matching_finance \u0026\u0026 organiaztion.data.matching_finance.length \u003e 0) {\n\t\tfor (const item of organiaztion.data.matching_finance) {\n\t\t\tconst staff = staffs.find(f =\u003e f.id == item.id);\n\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\tContext.data.matching_finance = (Context.data.matching_finance || []).concat(staff.data.ext_user!)\n\t\t\t}\n\t\t}\n\t\tif (!Context.data.matching_finance || Context.data.matching_finance.length == 0)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Ответственные за финансы\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Ответственные за финансы\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\t// получаем сотрудников Руководителя компании\n\tif (organiaztion.data.position_head) {\n\t\tconst position_head = await organiaztion.data.position_head.fetch();\n\n\t\tconst head_staffs_app = [\n\t\t\t...(position_head.data.staff ?? []),\n\t\t\t...(position_head.data.staff_internal_combination ?? []),\n\t\t\t...(position_head.data.staff_external_combination ?? []),\n\t\t];\n\n\t\tconst head_staffs_ids = head_staffs_app.map(s =\u003e s.id);\n\n\t\tif (head_staffs_ids.length \u003e 0) {\n\t\t\tconst head_staffs = await organiaztion.fields.position_head.app.fields.staff.app.search()\n\t\t\t\t.where((f, g) =\u003e g.and(\n\t\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\t\tf.__id.in(head_staffs_ids)\n\t\t\t\t))\n\t\t\t\t.size(head_staffs_ids.length)\n\t\t\t\t.all();\n\n\t\t\tfor (const item of head_staffs) {\n\t\t\t\tconst staff = head_staffs.find(f =\u003e f.id == item.id);\n\t\t\t\tif (staff \u0026\u0026 staff.data.__status \u0026\u0026 staff.data.__status.code == staff.fields.__status.variants.signed_documents.code) {\n\t\t\t\t\tContext.data.boss = staff.data.ext_user;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\terror = error + `Нет сотруднииков, назначенных на должность в свойстве \"Руководитель организации\" организации ${organiaztion.data.__name}` + ' || '\n\t\t}\n\n\t\tif (!Context.data.boss)\n\t\t\terror = error + `Нет трудоустроенных сотруднииков в свойстве \"Руководитель организации\" организации ${organiaztion.data.__name}` + ' || '\n\t} else {\n\t\terror = error + `Не заполнено свойство \"Руководитель организации\" в организации ${organiaztion.data.__name}` + ' || '\n\t}\n\n\tContext.data.error = error\n}",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "deprecated": true,
  "deprecatedMessage": "На удаление",
  "__createdAt": "2024-05-27T06:34:21.687938136Z",
  "__createdBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__updatedAt": "2024-05-30T20:25:02.921333988Z",
  "__updatedBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__deletedAt": null
}
