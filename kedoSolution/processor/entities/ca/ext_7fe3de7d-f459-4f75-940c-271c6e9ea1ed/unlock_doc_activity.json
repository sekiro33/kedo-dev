{
  "__id": "bdf28a64-1e9c-413c-a14d-7c1a284b6789",
  "__name": "__old(1С) Сменить статус документа",
  "code": "unlock_doc",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "type": [
    {
      "code": "script",
      "name": "Скрипт"
    }
  ],
  "group": "7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "icon": "system",
  "color": "#20c997",
  "itemName": "",
  "bindForm": true,
  "description": "",
  "retryCount": 10,
  "retryDelay": 5,
  "context": [
    {
      "code": "doc_id",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "ID документа",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "polnoe_imya_statusa",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Полное имя статуса",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "delete_printing_file",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Удалить печатную форму",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ошибка",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "response",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ответ",
        "data": {
          "additionalType": "string"
        },
        "output": true
      }
    },
    {
      "code": "debug",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "debug",
        "data": {
          "additionalType": "string"
        },
        "output": false
      }
    },
    {
      "code": "connection_name",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Название базы 1С",
        "data": {
          "additionalType": "string"
        },
        "input": true
      }
    },
    {
      "code": "is_alternative",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": false,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Альтернативная интеграция",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        },
        "input": true
      }
    },
    {
      "code": "staff",
      "type": "REF_ITEM",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Сотрудник",
        "data": {},
        "input": true
      }
    }
  ],
  "draft": false,
  "published": true,
  "data": {
    "scripts": "/**\nЗдесь вы можете написать скрипты для сложной серверной обработки контекста во время выполнения процесса.\nДля написания скриптов используйте TypeScript (https://www.typescriptlang.org).\nДокументация TS SDK доступна на сайте https://tssdk.elma365.com.\n\nСигнатуры функций\n\nДля синхронного взаимодействия:\n\tasync function action(): Promise\u003cvoid\u003e;\n\nДля модели проверки результата:\n\tasync function action(): Promise\u003cvoid\u003e;\n\tasync function check(): Promise\u003cboolean\u003e;\n\nДля модели обратного вызова:\n\tasync function action(url: string): Promise\u003cvoid\u003e;\n\tasync function callback(req: HTTPRequest): Promise\u003cvoid\u003e;\n\n**/\n\nlet baseUrl: string;\nlet login: string\nlet password: string\nlet myHeaders: any\n\nfunction getConnectionInfo(): Error | null {\n\tconst connectionsArray = Namespace.params.data.list_of_connected_platforms ? JSON.parse(Namespace.params.data.list_of_connected_platforms) : undefined;\n\tif (!connectionsArray) {\n\t\treturn new Error(`Не найдено записей подключения`)\n\t}\n\n\n\tconst currentConnection = connectionsArray.length \u003e 1 ? connectionsArray.find((item: any) =\u003e {\n\t\treturn item.name === Context.data.connection_name\n\t}) : connectionsArray[0]\n\tif (!currentConnection) {\n\t\treturn new Error(`Не найдено подключение c именем ${Context.data.connection_name}`)\n\t}\n\n\tbaseUrl = currentConnection.url;\n\tlogin = currentConnection.login\n\tpassword = currentConnection.password\n\tmyHeaders = {\n\t\tAuthorization: `Basic ${btoa(login + ':' + password)}`,\n\t};\n\treturn null\n}\n\nasync function action(): Promise\u003cvoid\u003e {\n\tif (Context.data.is_alternative) {\n\t\tif (Context.data.staff) {\n\t\t\tconst refItem = new RefItem\u003cApplicationItem\u003cApplication$kedo$staff$Data, Application$kedo$staff$Params\u003e\u003e('kedo', 'staff', Context.data.staff!.id);\n\t\t\tconst staff = await refItem.fetch();\n\n\t\t\tconst docs = await Namespace.params.fields.awaiting_docs_table_1c.app.search().where((f, g) =\u003e g.and(\n\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\tf.__status.eq(Namespace.params.fields.awaiting_docs_table_1c.app.fields.__status.variants.received),\n\t\t\t)).size(10000).all();\n\n\t\t\tconst staff_docs = docs.filter(doc =\u003e {\n\t\t\t\tif (doc.data.personal_guid_1c) {\n\t\t\t\t\tconst staff_id_1c: string[] = JSON.parse(doc.data.personal_guid_1c);\n\t\t\t\t\tif (staff_id_1c[0] == staff.data.id_1c || staff_id_1c[0] == staff.data.individual_id_1c) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\n\t\t\tstaff_docs.forEach(doc =\u003e doc.data.status_1c = Context.data.polnoe_imya_statusa);\n\t\t\tawait Promise.all(staff_docs.map(doc =\u003e doc.save()));\n\n\t\t} else {\n\t\t\tconst app = await Namespace.params.fields.awaiting_docs_table_1c.app.search().where((f, g) =\u003e g.and(\n\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\tf.doc_id_1c.eq(Context.data.doc_id!)\n\t\t\t)).first();\n\n\t\t\tif (!!app) {\n\t\t\t\tapp.data.status_1c = Context.data.polnoe_imya_statusa;\n\t\t\t\tawait app.save()\n\t\t\t} else {\n\t\t\t\tContext.data.error = `Couldnt find the awaiting doc app with 1c id of ${Context.data.doc_id}`\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\t/*if (!!Context.data.is_alternative) {\n\t\tconst docFromTable = await Namespace.params.fields.awaiting_docs_table_1c.app.search()\n\t\t\t.where((f, g) =\u003e g.and(\n\t\t\t\tf.__deletedAt.eq(null),\n\t\t\t\tf.doc_id_1c.eq(Context.data.doc_id!)\n\t\t\t)).first()\n\t\tif (!docFromTable) {\n\t\t\treturn\n\t\t}\n\t\tdocFromTable.data.status_1c = Context.data.polnoe_imya_statusa\n\t\t//docFromTable.data.status_1c_category = Context.data.doc_status;\n\n\t\tswitch (Context.data.polnoe_imya_statusa) {\n\t\t\tcase docFromTable.fields.status_1c_category.variants.agrement.code:\n\t\t\t\tdocFromTable.data.status_1c = docFromTable.fields.status_1c_category.variants.agrement.name;\n\t\t\t\tbreak;\n\t\t\tcase docFromTable.fields.status_1c_category.variants.ready.code:\n\t\t\t\tdocFromTable.data.status_1c = docFromTable.fields.status_1c_category.variants.ready.name;\n\t\t\t\tbreak;\n\t\t\tcase docFromTable.fields.status_1c_category.variants.signing.code:\n\t\t\t\tdocFromTable.data.status_1c = docFromTable.fields.status_1c_category.variants.signing.name;\n\t\t\t\tbreak;\n\t\t\tcase docFromTable.fields.status_1c_category.variants.signed.code:\n\t\t\t\tdocFromTable.data.status_1c = docFromTable.fields.status_1c_category.variants.signed.name;\n\t\t\t\tbreak;\n\t\t\tcase docFromTable.fields.status_1c_category.variants.rejected.code:\n\t\t\t\tdocFromTable.data.status_1c = docFromTable.fields.status_1c_category.variants.rejected.name;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tdocFromTable.save()\n\t\treturn;\n\t}*/\n\n\tconst error = getConnectionInfo()\n\tif (error != null) {\n\t\tContext.data.error = error.message\n\t\treturn\n\t}\n\tconst statusApp = await Namespace.params.fields.statuses_app.app.search().where((f, g) =\u003e g.and(\n\t\tf.__deletedAt.eq(null),\n\t\tf.full_name.eq(Context.data.polnoe_imya_statusa!)\n\t)).first();\n\n\tif (!!statusApp) {\n\t\tconst guid = statusApp!.data.guid;\n\t\tconst url = \"InformationRegister_EM_ПечатныеФормыДокументов?$format=json\u0026$skip=999999\u0026$inlinecount=allpages\";\n\t\tawait makeRequest('GET', url);\n\t\tconst response = JSON.parse(Context.data.response!);\n\t\tconst count = parseInt(response[\"odata.count\"]);\n\t\tContext.data.debug = count + ' '\n\t\tlet iter = 0\n\t\tconst batch = 50\n\t\twhile (iter * batch \u003c count) {\n\t\t\tconst docURL = `InformationRegister_EM_ПечатныеФормыДокументов?$format=json\u0026$top=${batch}\u0026$skip=${batch * iter}`\n\t\t\tawait makeRequest('GET', docURL);\n\t\t\tconst response = JSON.parse(Context.data.response!);\n\t\t\tconst foundDoc = response.value.find((item: any) =\u003e {\n\t\t\t\treturn item[\"Документ\"] === Context.data.doc_id;\n\t\t\t});\n\t\t\tContext.data.debug += `iter ${iter} `\n\t\t\tif (!!foundDoc) {\n\t\t\t\tContext.data.debug += 'found '\n\t\t\t\tconst changeURL = `${foundDoc[\"СтатусДокумента@navigationLinkUrl\"].split('/')[0]}?$format=json`\n\t\t\t\tconst body = Context.data.delete_printing_file ? {\n\t\t\t\t\t\"СтатусДокумента_Key\": statusApp.data.guid,\n\t\t\t\t\t\"ХранилищеПечатнойФормы\": \"\"\n\t\t\t\t} : {\n\t\t\t\t\t\"СтатусДокумента_Key\": statusApp.data.guid\n\t\t\t\t}\n\n\t\t\t\tconst stringBody = JSON.stringify(body)\n\n\t\t\t\tawait makeRequest('PATCH', changeURL, stringBody)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titer++\n\t\t}\n\t}\n}\n\nasync function makeRequest(method: string, url: string, body?: string) {\n\tconst requestOptions: FetchRequest = {\n\t\tmethod: method,\n\t\theaders: myHeaders,\n\t};\n\n\tif (!!body) {\n\t\trequestOptions.body = body;\n\t}\n\n\tconst resUrl = baseUrl + '/' + url;\n\n\ttry {\n\t\tconst response = await fetch(`${encodeURI(resUrl)}`, requestOptions)\n\t\tif (!response.ok) {\n\t\t\tContext.data.error += ` staff data res.status error; resUrl - ${resUrl} `\n\t\t\tthrow new Error(`res error ${resUrl}`);\n\t\t}\n\n\t\tContext.data.response = JSON.stringify(await response.json());\n\t} catch (err) {\n\t\tContext.data.error += ` try/catch error ${err}; resUrl - ${resUrl} `\n\t\tthrow new Error(err)\n\t}\n}",
    "execution": [
      {
        "code": "sync",
        "name": "Синхронное"
      }
    ],
    "allowGlobal": false,
    "checkInterval": ""
  },
  "async": false,
  "deprecated": true,
  "deprecatedMessage": "На удаление",
  "__createdAt": "2024-05-27T06:34:22.318050143Z",
  "__createdBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__updatedAt": "2024-05-30T20:30:40.95061325Z",
  "__updatedBy": "59e0911f-230a-4b6d-becf-6b302a91977a",
  "__deletedAt": null
}
