{
  "__id": "018c8757-193c-7ebe-84d5-c280e52c75ac",
  "namespace": "kedo.documents_types",
  "code": "fill_default_types",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(s) Заполнить виды по умолчанию",
  "type": "bpmn",
  "draft": false,
  "version": 6,
  "context": [
    {
      "code": "documents_types",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "documents_types",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Вид документов"
      }
    },
    {
      "code": "created_types",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Созданные типы",
        "data": {
          "additionalType": "text"
        }
      }
    },
    {
      "code": "error_string",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "error_string",
        "data": {
          "additionalType": "text"
        }
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2023-02-22T11:21:57.792837559Z",
  "__createdBy": "8b6393ab-540b-4559-8c18-7ef92a9cc24a",
  "__updatedAt": "2024-02-18T18:20:37.321394157Z",
  "__updatedBy": "b9287795-55a7-42be-989a-2677b5bb0a2c",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "2775d8cc-a6c4-44a3-8a35-ac15a95ca71e",
        "type": "start",
        "color": "#ffffff",
        "exits": ["4463cea3-0f46-4bb8-a762-99e490e2de76"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "",
          "titleGenerateMethod": "template"
        }
      },
      "2ed63cb6-9042-4b28-9bf5-08aed0e542da": {
        "x": 80,
        "y": 160,
        "id": "2ed63cb6-9042-4b28-9bf5-08aed0e542da",
        "icon": "script",
        "lane": "2775d8cc-a6c4-44a3-8a35-ac15a95ca71e",
        "name": "Создание типов документов по умолчанию",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["29b189f4-c87a-470b-b82d-6328761e10f2"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "set_types",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "exit": "3097fefd-1b9a-4090-a05c-2c6f89e82197",
              "notify": true,
              "interrupt": false,
              "receivers": [
                {
                  "code": "administrators",
                  "kind": "group",
                  "multi": true,
                  "namespace": "system"
                }
              ]
            }
          }
        }
      },
      "f2e23952-fdc7-448f-9015-c139c07b3886": {
        "x": 104,
        "y": 288,
        "id": "f2e23952-fdc7-448f-9015-c139c07b3886",
        "icon": "end",
        "lane": "2775d8cc-a6c4-44a3-8a35-ac15a95ca71e",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      }
    },
    "lanes": {
      "2775d8cc-a6c4-44a3-8a35-ac15a95ca71e": {
        "x": 8,
        "y": 8,
        "id": "2775d8cc-a6c4-44a3-8a35-ac15a95ca71e",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 252,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "29b189f4-c87a-470b-b82d-6328761e10f2": {
        "id": "29b189f4-c87a-470b-b82d-6328761e10f2",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 224
          },
          {
            "x": 120,
            "y": 288
          }
        ],
        "type": "plain",
        "source": "2ed63cb6-9042-4b28-9bf5-08aed0e542da",
        "target": "f2e23952-fdc7-448f-9015-c139c07b3886",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "4463cea3-0f46-4bb8-a762-99e490e2de76": {
        "id": "4463cea3-0f46-4bb8-a762-99e490e2de76",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 160
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "2ed63cb6-9042-4b28-9bf5-08aed0e542da",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "\ninterface IDocument {\n    name: string;\n    app_namespace: string;\n    app_code: string;\n    code: string;\n    article: string;\n}\n\nlet documents: IDocument[] = [\n    {\n        app_code: 'labor_contract',\n        article: '67',\n        app_namespace: 'kedo',\n        code: '01.006',\n        name: 'Трудовой договор',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '96, 259',\n        app_namespace: 'time_tracking',\n        code: '02.006',\n        name: 'Согласие работника на привлечение к работе в ночное время, незапрещенной ему по состоянию здоровья в соответствии с медицинским заключением',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '99, 259',\n        app_namespace: 'time_tracking',\n        code: '02.008',\n        name: 'Согласие работника на привлечение его к сверхурочной работе',\n    },\n    {\n        app_code: 'overtime_work',\n        article: '113, 259, 290',\n        app_namespace: 'time_tracking',\n        code: '02.010',\n        name: 'Согласие работника на привлечение его к работе в выходные и нерабочие праздничные дни',\n    },\n    {\n        app_code: 'vacation_docs',\n        article: '124',\n        app_namespace: 'absences',\n        code: '02.013',\n        name: 'Заявление работника о переносе ежегодного оплачиваемого отпуска на другой срок',\n    },\n    {\n        app_code: 'application_for_leave_without_pay',\n        article: '128',\n        app_namespace: 'personnel_documents',\n        code: '02.015',\n        name: 'Заявление работника о предоставлении отпуска без сохранения заработной платы',\n    },\n    {\n        app_code: 'vacation_docs',\n        article: '128',\n        app_namespace: 'absences',\n        code: '02.015',\n        name: 'Заявление работника о предоставлении отпуска без сохранения заработной платы',\n    },\n    {\n        app_code: 'overtimeWorkNotifications',\n        article: '99',\n        app_namespace: 'time_tracking',\n        code: '02.023',\n        name: 'Ознакомление с правом отказаться от сверхурочной работы',\n    },\n    {\n        app_code: 'labor_contract',\n        article: '71, 80, 348.12',\n        app_namespace: 'kedo',\n        code: '11.002',\n        name: 'Предупреждение о расторжении трудового договора по собственному желанию',\n    },\n    {\n        app_code: 'information_about_labor_activity',\n        article: '66.1',\n        app_namespace: 'kedo',\n        code: '12.002',\n        name: 'Заявление о предоставлении сведений о трудовой деятельности',\n    },\n    {\n        app_code: '-',\n        article: '-',\n        app_namespace: '-',\n        code: '12.999',\n        name: 'Иные документы',\n    }\n]\n\nasync function set_types(): Promise\u003cvoid\u003e {\n    const document_codes = documents.map(f =\u003e f.code);\n\n    const all_documents = await Application.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.code.in(document_codes)\n        ))\n        .size(10000)\n        .all();\n\n    let promises: Promise\u003cvoid\u003e[] = [];\n\n    for (const document of documents) {\n        if (all_documents.find(f =\u003e f.data.code == document.code)) {\n            continue;\n        }\n\n        const new_document = Application.create();\n        new_document.data.__name = document.name;\n        new_document.data.code = document.code;\n        new_document.data.app_code = document.app_code;\n        new_document.data.app_namespace = document.app_namespace;\n        new_document.data.article = document.article;\n        promises.push(new_document.save());\n\n        if (promises.length \u003e 20) {\n            await Promise.all(promises);\n            promises = [];\n        }\n    }\n\n    await Promise.all(promises);\n}\n",
  "forms": [],
  "settings": {
    "logged": true,
    "targetFeed": {
      "type": "instance",
      "variable": "documents_types"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": false,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {
      "error_string": {
        "enabled": false,
        "conditions": []
      },
      "created_types": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
