{
  "__id": "018c8757-193c-7edc-a25e-3f237f2dd55e",
  "namespace": "kedo.staff",
  "code": "sending_data",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(РвРФ) Отправка данных",
  "type": "bpmn",
  "draft": false,
  "version": 3,
  "context": [
    {
      "code": "docs_contract",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "documents_for_employment",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Документы контракт",
        "data": {}
      }
    },
    {
      "code": "wrong_document",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Документы в неверном формате",
        "data": {
          "additionalType": "text"
        }
      }
    },
    {
      "code": "doc_links",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ссылки на документы",
        "data": {
          "additionalType": "text"
        }
      }
    },
    {
      "code": "debug",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "debug",
        "data": {
          "additionalType": "string"
        }
      }
    },
    {
      "code": "staff_docs_contract",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "personnel_documents",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Кадровые документы контракт",
        "data": {}
      }
    },
    {
      "code": "error",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Ошибка",
        "data": {
          "additionalType": "string"
        }
      }
    },
    {
      "code": "doc_ids",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Идентификаторы документов",
        "data": {
          "additionalType": "text"
        }
      }
    },
    {
      "code": "error_exists",
      "type": "BOOLEAN",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Есть ошибка",
        "data": {
          "additionalType": "radio",
          "noValue": "Нет",
          "yesValue": "Да"
        }
      }
    },
    {
      "code": "staff",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "staff",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Сотрудник"
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2023-04-06T13:31:48.669778775Z",
  "__createdBy": "8b6393ab-540b-4559-8c18-7ef92a9cc24a",
  "__updatedAt": "2023-08-23T13:15:09.401440831Z",
  "__updatedBy": "7303b866-4220-4086-a09e-348a76b12c73",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "type": "start",
        "color": "#ffffff",
        "exits": ["bd4a26f4-59f6-4b40-9239-513f07c35770"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true,
              "hideEmpty": false
            },
            {
              "code": "staff",
              "tooltip": "",
              "readonly": false,
              "required": false,
              "hideEmpty": false
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "(РвРФ) Отправка данных ({$staff})",
          "titleGenerateMethod": "template"
        }
      },
      "45879b0e-d1bb-4175-ba1a-eff1065bcf5f": {
        "x": 192,
        "y": 216,
        "id": "45879b0e-d1bb-4175-ba1a-eff1065bcf5f",
        "icon": "notification",
        "lane": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "name": "Ошибка",
        "type": "notification",
        "color": "#ffff66",
        "exits": ["466ce7f1-bbe9-4976-abc3-d9cd525454fa"],
        "width": 80,
        "height": 64,
        "settings": {
          "author": {
            "code": "",
            "kind": "current"
          },
          "target": {
            "kind": "process"
          },
          "receivers": [
            {
              "kind": "current"
            }
          ],
          "messageBody": "{$error}",
          "messageHeader": "Ошибка при отправке документов сотрудника {$staff}"
        }
      },
      "92068cb7-d08c-4f95-9299-1dbe7ebb3b3a": {
        "x": 104,
        "y": 304,
        "id": "92068cb7-d08c-4f95-9299-1dbe7ebb3b3a",
        "lane": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "c39edc8b-12a0-451d-ada8-e4d02e5dc78e": {
        "x": 80,
        "y": 128,
        "id": "c39edc8b-12a0-451d-ada8-e4d02e5dc78e",
        "icon": "script",
        "lane": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "name": "Отправить документы сотрудника в РвРФ",
        "type": "script",
        "color": "#fde9a0",
        "exits": [
          "caf5fe64-a963-47ce-a292-b225ace97cbb",
          "8f016d63-5e92-4563-8706-f8d2a0afc7b3"
        ],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "sendDoc",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "exit": "8f016d63-5e92-4563-8706-f8d2a0afc7b3",
              "notify": true,
              "interrupt": true,
              "receivers": [
                {
                  "kind": "current"
                }
              ]
            }
          }
        }
      },
      "f8b4d486-4f47-4c45-aa66-b92497846e81": {
        "x": 104,
        "y": 232,
        "id": "f8b4d486-4f47-4c45-aa66-b92497846e81",
        "icon": "exclusive",
        "lane": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "name": "",
        "type": "gateway",
        "color": "#ffffff",
        "exits": [
          "d67037a4-4059-48be-bee7-b219aca794a9",
          "330e54e3-ffc5-4d75-aa89-26270328850f"
        ],
        "width": 32,
        "height": 32,
        "settings": {
          "func": "",
          "type": "exclusive",
          "useFunc": false,
          "funcType": "STRING",
          "description": ""
        }
      }
    },
    "lanes": {
      "b99a29ea-b3dc-4646-b8c2-5a12310d31c1": {
        "x": 8,
        "y": 8,
        "id": "b99a29ea-b3dc-4646-b8c2-5a12310d31c1",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 316,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "330e54e3-ffc5-4d75-aa89-26270328850f": {
        "id": "330e54e3-ffc5-4d75-aa89-26270328850f",
        "name": "",
        "path": [
          {
            "x": 136,
            "y": 248
          },
          {
            "x": 192,
            "y": 248
          }
        ],
        "type": "plain",
        "source": "f8b4d486-4f47-4c45-aa66-b92497846e81",
        "target": "45879b0e-d1bb-4175-ba1a-eff1065bcf5f",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [
            {
              "a": {
                "kind": "context",
                "value": "error_exists"
              },
              "b": {
                "kind": "manual",
                "value": true
              },
              "type": "BOOLEAN",
              "inversion": false,
              "operation": {
                "relation": "equal",
                "inversion": false,
                "caseInsensitive": false
              },
              "conjunction": false
            }
          ],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "466ce7f1-bbe9-4976-abc3-d9cd525454fa": {
        "id": "466ce7f1-bbe9-4976-abc3-d9cd525454fa",
        "name": "",
        "path": [
          {
            "x": 232,
            "y": 280
          },
          {
            "x": 232,
            "y": 320
          },
          {
            "x": 136,
            "y": 320
          }
        ],
        "type": "plain",
        "source": "45879b0e-d1bb-4175-ba1a-eff1065bcf5f",
        "target": "92068cb7-d08c-4f95-9299-1dbe7ebb3b3a",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "8f016d63-5e92-4563-8706-f8d2a0afc7b3": {
        "id": "8f016d63-5e92-4563-8706-f8d2a0afc7b3",
        "name": "",
        "path": [
          {
            "x": 160,
            "y": 160
          },
          {
            "x": 232,
            "y": 160
          },
          {
            "x": 232,
            "y": 216
          }
        ],
        "type": "error",
        "source": "c39edc8b-12a0-451d-ada8-e4d02e5dc78e",
        "target": "45879b0e-d1bb-4175-ba1a-eff1065bcf5f",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "bd4a26f4-59f6-4b40-9239-513f07c35770": {
        "id": "bd4a26f4-59f6-4b40-9239-513f07c35770",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 128
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "c39edc8b-12a0-451d-ada8-e4d02e5dc78e",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "caf5fe64-a963-47ce-a292-b225ace97cbb": {
        "id": "caf5fe64-a963-47ce-a292-b225ace97cbb",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 192
          },
          {
            "x": 120,
            "y": 232
          }
        ],
        "type": "plain",
        "source": "c39edc8b-12a0-451d-ada8-e4d02e5dc78e",
        "target": "f8b4d486-4f47-4c45-aa66-b92497846e81",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "d67037a4-4059-48be-bee7-b219aca794a9": {
        "id": "d67037a4-4059-48be-bee7-b219aca794a9",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 264
          },
          {
            "x": 120,
            "y": 304
          }
        ],
        "type": "default",
        "source": "f8b4d486-4f47-4c45-aa66-b92497846e81",
        "target": "92068cb7-d08c-4f95-9299-1dbe7ebb3b3a",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "const userId = \"9a81cb30-4aef-11ed-b0f9-f557cda0de1e\";\nconst token = \"UUsybjl6dlgzdVB5VmVzdE8xeng6VmswejBFSmh0TnRhZ3BwTzhNSVJiVkNZb3F5TDZYZHpSZ3BHRmJBUQ==\";\nconst docKindId = \"ETD.OtherDoc\";\nconst groupId = \"ETD.LoadingFiles\";\nconst notificationURL = \"null.ru\";\n\nasync function sendDoc(): Promise\u003cvoid\u003e {\n  Context.data.wrong_document = \"\";\n  Context.data.doc_links = \"\";\n  Context.data.doc_ids = \"\";\n  let staff = await Context.data.staff!.fetch();\n  let snils = staff.data.snils!.replace(/-/g, \"\").replace(/\\s/g, \"\");\n  let staffDocs = await Context.fields.staff_docs_contract.app.search().where((f, g) =\u003e g.and(\n    f.__deletedAt.eq(null),\n    f.staff.link(staff)\n  )).size(10000).all();\n  let docs = await Context.fields.docs_contract.app.search().where((f, g) =\u003e g.and(\n    f.__deletedAt.eq(null),\n    f.staff.link(staff)\n  )).size(10000).all();\n\n  let sources = await Promise.all([...staffDocs, ...docs].map(doc =\u003e doc.data.__sourceRef?.fetch()));\n  Context.data.debug = sources.map(doc =\u003e doc.data.__name).join(\"\\n\")\n  let allDocs = await Promise.all(sources.map(async source =\u003e {\n    const fileName = await source.data.__file.fetch().then((r: any) =\u003e r.data.__name);\n    return {\n      name: fileName,\n      link: await source.data.__file.getDownloadUrl()\n    }\n  }));\n\n  for (let doc of allDocs) {\n    let docLink = doc.link;\n    let docBuffer = await fetch(docLink).then(doc =\u003e doc.arrayBuffer());\n    let base64String = _arrayBufferToBase64(docBuffer);\n    let fileName = doc.name\n    let comment = \"\";\n    let body = JSON.stringify({\n        userId,\n        snils,\n        name: fileName,\n        comment,\n        file: base64String,\n        groupId,\n        docKindId,\n        notificationURL,\n        fileName\n      });\n    let response = await fetch(\"https://ekd-integration.trudvsem.ru/createLaborerDocs\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Basic ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    });\n    let responseText = await response.text();\n\n    if (!response.ok || JSON.parse(responseText).error) {\n      if (responseText.includes(\"валидации\") || responseText.includes(\"PDF\")) {\n        Context.data.wrong_document += fileName;\n        Context.data.wrong_document += \"\\n\";\n        Context.data.debug += responseText;\n        continue;\n      };\n      Context.data.error_exists = true;\n      let error = responseText;\n      Context.data.error = error;\n      return;\n    };\n\n    let responseJson = JSON.parse(responseText);\n    let docId = responseJson.documentId;\n    let documentLink = responseJson.documentLink;\n\n    Context.data.doc_links += documentLink;\n    Context.data.doc_links += \"\\n\";\n    Context.data.doc_ids += docId;\n    Context.data.doc_ids += \"\\n\";\n    await _sleep(1000);\n  };\n};\n\nfunction _arrayBufferToBase64(buffer: ArrayBuffer) {\n    let binary = '';\n    let bytes = new Uint8Array( buffer );\n    let len = bytes.byteLength;\n    for (let i = 0; i \u003c len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    };\n    return btoa(binary);\n};\n\nasync function _sleep(milliseconds: number) {\n  return new Promise(resolve =\u003e setTimeout(resolve, milliseconds))\n}",
  "forms": [],
  "settings": {
    "logged": true,
    "targetFeed": {
      "type": "object",
      "variable": "staff"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "fieldVisibilityConditions": {
      "debug": {
        "enabled": false,
        "conditions": []
      },
      "error": {
        "enabled": false,
        "conditions": []
      },
      "doc_ids": {
        "enabled": false,
        "conditions": []
      },
      "doc_links": {
        "enabled": false,
        "conditions": []
      },
      "error_exists": {
        "enabled": false,
        "conditions": []
      },
      "docs_contract": {
        "enabled": false,
        "conditions": []
      },
      "wrong_document": {
        "enabled": false,
        "conditions": []
      },
      "staff_docs_contract": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
