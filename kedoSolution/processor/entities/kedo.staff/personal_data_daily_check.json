{
  "__id": "018e89f8-23b6-7966-a001-03f36c9ea04b",
  "namespace": "kedo.staff",
  "code": "personal_data_daily_check",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "Группы: Заполнение из Организаций",
  "type": "bpmn",
  "draft": false,
  "version": 2,
  "context": [
    {
      "code": "personal_date_type",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": true,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "personal_data_types",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Тип персональных данных",
        "data": {}
      }
    },
    {
      "code": "staff_personal_data",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "employees_personal_data",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Персональные данные сотрудников",
        "data": {}
      }
    },
    {
      "code": "max_chunk_size",
      "type": "FLOAT",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": 50,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Максимальное количество элементов, обрабатываемых за раз",
        "data": {
          "additionalType": "integer",
          "showRowSeparator": true
        }
      }
    },
    {
      "code": "child_process_json",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "JSON для дочернего процесса",
        "data": {
          "additionalType": "string"
        }
      }
    },
    {
      "code": "staff_categories",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "employees_categories",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Категории сотрудника",
        "data": {}
      }
    },
    {
      "code": "max_counter",
      "type": "FLOAT",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Всего итераций",
        "data": {
          "additionalType": "integer",
          "showRowSeparator": true
        }
      }
    },
    {
      "code": "personal_data_type",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "personal_data_types",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Типы персональных данных",
        "data": {}
      }
    },
    {
      "code": "debug",
      "type": "STRING",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "debug",
        "data": {
          "additionalType": "string"
        }
      }
    },
    {
      "code": "staff",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": false,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "staff",
        "filter": {
          "value": {
            "tf": {}
          },
          "enabled": false
        },
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Сотрудник"
      }
    },
    {
      "code": "counter",
      "type": "FLOAT",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": false,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {},
      "view": {
        "name": "Счетчик",
        "data": {
          "additionalType": "integer",
          "showRowSeparator": true
        }
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2022-10-12T11:33:28.991185906Z",
  "__createdBy": "b3904ee1-c631-4888-88ee-3922dc2fcbea",
  "__updatedAt": "2024-04-11T08:07:03.225926946Z",
  "__updatedBy": "54584d91-0741-4200-a803-b00376614edb",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "type": "start",
        "color": "#ffffff",
        "exits": ["7f088983-8a67-401c-822c-39de5d1d1d68"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "max_chunk_size",
              "tooltip": "",
              "readonly": false,
              "required": true,
              "hideEmpty": false
            }
          ],
          "instruction": "Будет запущен процесс создания/обновления групп доступа по организациям и документам. Настройка прав доступа по умолчанию",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "Заполнение групп",
          "titleGenerateMethod": "template"
        }
      },
      "9fe47ee8-b0d9-4237-811e-7807c958ebe7": {
        "x": 80,
        "y": 152,
        "id": "9fe47ee8-b0d9-4237-811e-7807c958ebe7",
        "icon": "script",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "Распределяем сотрудников по ролям",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["2a5081ae-4bb7-47fd-8bfd-1281acfb3bea"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "setUsers",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "b49a4deb-30cd-4645-8dda-b5568c09cf1f": {
        "x": 80,
        "y": 256,
        "id": "b49a4deb-30cd-4645-8dda-b5568c09cf1f",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "Создаём группы по организациям",
        "type": "call",
        "color": "#ffffff",
        "exits": ["0fcbcdab-de6c-4235-bb2c-517ef87f34b5"],
        "width": 80,
        "height": 64,
        "settings": {
          "code": "sign_me_certificate_reissuance",
          "async": false,
          "input": [
            {
              "source": {
                "kind": "context",
                "value": "max_chunk_size"
              },
              "target": {
                "kind": "context",
                "value": "max_chunk_size"
              }
            }
          ],
          "output": [
            {
              "source": {
                "kind": "context",
                "value": "child_process_json"
              },
              "target": {
                "kind": "context",
                "value": "child_process_json"
              }
            }
          ],
          "namespace": "kedo.staff",
          "subProcessTargetFieldCode": ""
        }
      },
      "ba73dae8-a1f3-4cab-a245-a37cf4dcb95b": {
        "x": 80,
        "y": 360,
        "id": "ba73dae8-a1f3-4cab-a245-a37cf4dcb95b",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "Создание индивидуальных прав доступа по документам",
        "type": "call",
        "color": "#ffffff",
        "exits": ["b5067190-90c8-44ad-9868-36e35baf9b11"],
        "width": 80,
        "height": 64,
        "settings": {
          "code": "create_tights_for_groups",
          "async": false,
          "input": [
            {
              "source": {
                "kind": "context",
                "value": "child_process_json"
              },
              "target": {
                "kind": "context",
                "value": "parent_process_json"
              }
            }
          ],
          "output": [],
          "namespace": "kedo.staff",
          "subProcessTargetFieldCode": ""
        }
      },
      "c24744ee-53dc-4047-9d17-5481e4ac4fc8": {
        "x": 104,
        "y": 568,
        "id": "c24744ee-53dc-4047-9d17-5481e4ac4fc8",
        "icon": "end",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "c8997850-ee98-435a-8230-5fb418c0240e": {
        "x": 80,
        "y": 480,
        "id": "c8997850-ee98-435a-8230-5fb418c0240e",
        "icon": "notification",
        "lane": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "Группы заполнены",
        "type": "notification",
        "color": "#ffff66",
        "exits": ["4ae3598e-bec4-4c59-b533-9f729acbc8e1"],
        "width": 80,
        "height": 64,
        "settings": {
          "author": {
            "code": "",
            "kind": "system"
          },
          "target": {
            "kind": "process"
          },
          "receivers": [
            {
              "kind": "current"
            }
          ],
          "messageHeader": "Процесс актуализации завершён. Для организаций созданы группы пользователей и настроены права доступа по умолчанию."
        }
      }
    },
    "lanes": {
      "f6820e2a-2013-4b51-a5cf-c742917dbaf5": {
        "x": 8,
        "y": 8,
        "id": "f6820e2a-2013-4b51-a5cf-c742917dbaf5",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 272,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "0fcbcdab-de6c-4235-bb2c-517ef87f34b5": {
        "id": "0fcbcdab-de6c-4235-bb2c-517ef87f34b5",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 320
          },
          {
            "x": 120,
            "y": 360
          }
        ],
        "type": "plain",
        "source": "b49a4deb-30cd-4645-8dda-b5568c09cf1f",
        "target": "ba73dae8-a1f3-4cab-a245-a37cf4dcb95b",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "2a5081ae-4bb7-47fd-8bfd-1281acfb3bea": {
        "id": "2a5081ae-4bb7-47fd-8bfd-1281acfb3bea",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 216
          },
          {
            "x": 120,
            "y": 256
          }
        ],
        "type": "plain",
        "source": "9fe47ee8-b0d9-4237-811e-7807c958ebe7",
        "target": "b49a4deb-30cd-4645-8dda-b5568c09cf1f",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "4ae3598e-bec4-4c59-b533-9f729acbc8e1": {
        "id": "4ae3598e-bec4-4c59-b533-9f729acbc8e1",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 544
          },
          {
            "x": 120,
            "y": 568
          }
        ],
        "type": "plain",
        "source": "c8997850-ee98-435a-8230-5fb418c0240e",
        "target": "c24744ee-53dc-4047-9d17-5481e4ac4fc8",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "7f088983-8a67-401c-822c-39de5d1d1d68": {
        "id": "7f088983-8a67-401c-822c-39de5d1d1d68",
        "name": "Заполнить",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "9fe47ee8-b0d9-4237-811e-7807c958ebe7",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "b5067190-90c8-44ad-9868-36e35baf9b11": {
        "id": "b5067190-90c8-44ad-9868-36e35baf9b11",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 424
          },
          {
            "x": 120,
            "y": 480
          }
        ],
        "type": "plain",
        "source": "ba73dae8-a1f3-4cab-a245-a37cf4dcb95b",
        "target": "c8997850-ee98-435a-8230-5fb418c0240e",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "/**\nHere you can write scripts for complex server processing of the context during process execution.\nTo write scripts, use TypeScript (https://www.typescriptlang.org).\nELMA365 SDK documentation available on https://tssdk.elma365.com.\n**/\n\n\n//Запись сотрудников по ролям hr, бухгалтеры, подписанты, внутренние сотрудники\nasync function setUsers(): Promise\u003cvoid\u003e {\n    //поиск групп\n    const groups = await System.userGroups.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.namespace.eq(Namespace.code)\n        ))\n        .size(10000)\n        .all()\n    if (groups.length == 0)\n        return\n    const hr_dep = groups.find(f =\u003e f.data.__name == 'Отдел кадров')!;\n    const accounting = groups.find(f =\u003e f.data.__name == 'Бухгалтеры')!;\n    const signatories = groups.find(f =\u003e f.data.__name == 'Подписанты')!;\n    const innerUsers = groups.find(f =\u003e f.data.__name === \"Внутренние сотрудники организации\")!\n    if (!hr_dep || !accounting || !signatories || !innerUsers) {\n        Context.data.debug = JSON.stringify(groups.map(gr =\u003e {\n            return {id: gr.id, name: gr.data.__name}\n        }))\n    }\n    hr_dep.data.description = accounting.data.description = signatories.data.description = undefined;\n    hr_dep.data.subOrgunitIds = accounting.data.subOrgunitIds = signatories.data.subOrgunitIds = undefined;\n    hr_dep.data.subOrgunitIds = [];\n    accounting.data.subOrgunitIds = [];\n    signatories.data.subOrgunitIds = [];\n    innerUsers.data.subOrgunitIds = [];\n\n    //распределение сотрудников по группам\n    const organizations = await Namespace.app.organization.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    const staffs = await Namespace.app.staff.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    for (const organiaztion of organizations) {\n        if (organiaztion.data.hr_department \u0026\u0026 organiaztion.data.hr_department.length \u003e 0) {\n            for (const staff of organiaztion.data.hr_department) {\n                const user = staffs.find(f =\u003e f.id == staff.id)!;\n                if (user \u0026\u0026 user.data.ext_user) {\n                    hr_dep.data.subOrgunitIds.push(user.data.ext_user!.id)\n                }\n            }\n        }\n        if (organiaztion.data.inner_org_users \u0026\u0026 organiaztion.data.inner_org_users.length \u003e 0) {\n            for (const staff of organiaztion.data.inner_org_users) {\n                const user = staffs.find(f =\u003e f.id == staff.id)!;\n                if (user \u0026\u0026 user.data.ext_user) {\n                    innerUsers.data.subOrgunitIds.push(user.data.ext_user!.id)\n                }\n            }\n        }\n        if (organiaztion.data.accounting \u0026\u0026 organiaztion.data.accounting.length \u003e 0) {\n            for (const staff of organiaztion.data.accounting) {\n                const user = staffs.find(f =\u003e f.id == staff.id)!;\n                if (user \u0026\u0026 user.data.ext_user) {\n                    accounting.data.subOrgunitIds.push(user.data.ext_user!.id)\n                }\n            }\n        }\n        if (organiaztion.data.signatories \u0026\u0026 organiaztion.data.signatories.length \u003e 0) {\n            for (const staff of organiaztion.data.signatories) {\n                const user = staffs.find(f =\u003e f.id == staff.id)!;\n                if (user \u0026\u0026 user.data.ext_user) {\n                    signatories.data.subOrgunitIds.push(user.data.ext_user!.id)\n                }\n            }\n        }\n    }\n    hr_dep.data.subOrgunitIds = [...new Set(hr_dep.data.subOrgunitIds)];\n    accounting.data.subOrgunitIds = [...new Set(accounting.data.subOrgunitIds)];\n    signatories.data.subOrgunitIds = [...new Set(signatories.data.subOrgunitIds)];\n\n   // await Promise.all([hr_dep.save(), accounting.save(), signatories.save()])\n    await accounting.save();\n    await signatories.save();\n    await hr_dep.save();\n    await innerUsers.save();\n}\n",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": []
    },
    "targetFeed": {
      "type": "object",
      "variable": "staff"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": false,
    "allowNamespace": true,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {
      "debug": {
        "enabled": false,
        "conditions": []
      },
      "staff": {
        "enabled": false,
        "conditions": []
      },
      "counter": {
        "enabled": false,
        "conditions": []
      },
      "max_counter": {
        "enabled": false,
        "conditions": []
      },
      "max_chunk_size": {
        "enabled": false,
        "conditions": []
      },
      "staff_categories": {
        "enabled": false,
        "conditions": []
      },
      "child_process_json": {
        "enabled": false,
        "conditions": []
      },
      "personal_data_type": {
        "enabled": false,
        "conditions": []
      },
      "personal_date_type": {
        "enabled": false,
        "conditions": []
      },
      "staff_personal_data": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
