{
  "__id": "018f0a73-f072-7853-8d72-976103d9331b",
  "namespace": "kedo.types_combination",
  "code": "filling_types_combinations",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(s) Заполнение видов совмещений",
  "type": "bpmn",
  "draft": false,
  "version": 1,
  "context": [
    {
      "code": "types_combination",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "types_combination",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Вид совмещения"
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2024-04-01T13:52:00.719168755Z",
  "__createdBy": "54584d91-0741-4200-a803-b00376614edb",
  "__updatedAt": "2024-04-01T14:05:00.25512801Z",
  "__updatedBy": "099fd2a1-8125-406b-aaff-0db06d81aa40",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "16accdab-774c-4669-adbb-4b8715f4b137",
        "type": "start",
        "color": "#ffffff",
        "exits": ["7e1fc707-e3df-4ee8-a040-1aba88953d2d"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "(s) Заполнение видов совмещений ({$types_combination})",
          "titleGenerateMethod": "template"
        }
      },
      "810f6851-0846-4715-b2f2-a5c42aafe702": {
        "x": 104,
        "y": 240,
        "id": "810f6851-0846-4715-b2f2-a5c42aafe702",
        "icon": "end",
        "lane": "16accdab-774c-4669-adbb-4b8715f4b137",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "e4cec320-5e6b-4e08-9efd-a15c88ae1e3c": {
        "x": 80,
        "y": 136,
        "id": "e4cec320-5e6b-4e08-9efd-a15c88ae1e3c",
        "icon": "script",
        "lane": "16accdab-774c-4669-adbb-4b8715f4b137",
        "name": "Создание видов по умолчанию",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["d2c8c252-fcc5-4b0b-9998-e8b046b092fa"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "set_types",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      }
    },
    "lanes": {
      "16accdab-774c-4669-adbb-4b8715f4b137": {
        "x": 8,
        "y": 8,
        "id": "16accdab-774c-4669-adbb-4b8715f4b137",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 224,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "7e1fc707-e3df-4ee8-a040-1aba88953d2d": {
        "id": "7e1fc707-e3df-4ee8-a040-1aba88953d2d",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 136
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "e4cec320-5e6b-4e08-9efd-a15c88ae1e3c",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "d2c8c252-fcc5-4b0b-9998-e8b046b092fa": {
        "id": "d2c8c252-fcc5-4b0b-9998-e8b046b092fa",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 200
          },
          {
            "x": 120,
            "y": 240
          }
        ],
        "type": "plain",
        "source": "e4cec320-5e6b-4e08-9efd-a15c88ae1e3c",
        "target": "810f6851-0846-4715-b2f2-a5c42aafe702",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "/**\nHere you can write scripts for complex server processing of the context during process execution.\nTo write scripts, use TypeScript (https://www.typescriptlang.org).\nELMA365 SDK documentation available on https://tssdk.elma365.com.\n**/\n\ninterface IDocument {\n    name: string;\n    code: string;\n    need_memo: boolean;\n}\n\nlet types: IDocument[] = [\n    {\n        code: 'performance_employee_duties',\n        need_memo: true,\n        name: 'Исполнение обязанностей сотрудника',\n    },\n    {\n        code: 'combining_positions',\n        need_memo: true,\n        name: 'Совмещение должностей',\n    },\n    {\n        code: 'expansion_service_areas',\n        need_memo: true,\n        name: 'Расширение зон обслуживания',\n    },\n    {\n        code: 'substitution_only',\n        need_memo: true,\n        name: 'Только замещение',\n    }\n]\n\nasync function set_types(): Promise\u003cvoid\u003e {\n    const types_code = types.map(f =\u003e f.code);\n\n    const all_types = await Application.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.code.in(types_code)\n        ))\n        .size(10000)\n        .all();\n\n    let promises: Promise\u003cvoid\u003e[] = [];\n\n    for (const type of types) {\n        if (all_types.find(f =\u003e f.data.code == type.code)) {\n            continue;\n        }\n\n        const new_type = Application.create();\n        new_type.data.__name = type.name;\n        new_type.data.code = type.code;\n        new_type.data.need_memo = type.need_memo;\n        promises.push(new_type.save());\n\n        if (promises.length \u003e 20) {\n            await Promise.all(promises);\n            promises = [];\n        }\n    }\n\n    await Promise.all(promises);\n}",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": [
        {
          "code": "types_combination",
          "data": {
            "code": "types_combination",
            "namespace": "kedo"
          },
          "type": "SYS_COLLECTION",
          "view": {
            "name": "Вид совмещения"
          },
          "array": true,
          "single": true
        }
      ]
    },
    "targetFeed": {
      "type": "object",
      "variable": "types_combination"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {}
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
