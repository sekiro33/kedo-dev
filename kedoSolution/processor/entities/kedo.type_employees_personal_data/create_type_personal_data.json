{
  "__id": "018e89f8-23b6-7908-8b98-ca71c9b21bff",
  "namespace": "kedo.type_employees_personal_data",
  "code": "create_type_personal_data",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(s) Заполнение видов персональных данных по умолчанию",
  "type": "bpmn",
  "draft": false,
  "version": 2,
  "context": [
    {
      "code": "type_employees_personal_data",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "type_employees_personal_data",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Виды изменения персональных данных"
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2024-03-06T07:26:45.288831886Z",
  "__createdBy": "dbf3495b-ce41-49f5-ba21-cdd11a052281",
  "__updatedAt": "2024-04-01T14:37:22.242595273Z",
  "__updatedBy": "1a8a4a0b-7e7e-4e0e-895e-ab2a0a301d1e",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "6c72295f-27dc-406b-a762-214e40711a15",
        "type": "start",
        "color": "#ffffff",
        "exits": ["7e24cb98-1783-439f-85ec-88517b48ae73"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "Заполнение видов персональных данных по умолчанию ({$type_employees_personal_data})",
          "titleGenerateMethod": "template"
        }
      },
      "856e206d-a42d-4fc2-be33-050655d219c0": {
        "x": 104,
        "y": 272,
        "id": "856e206d-a42d-4fc2-be33-050655d219c0",
        "icon": "end",
        "lane": "6c72295f-27dc-406b-a762-214e40711a15",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      },
      "c7e7797b-06c5-4cec-9ebc-03ae140194ea": {
        "x": 80,
        "y": 152,
        "id": "c7e7797b-06c5-4cec-9ebc-03ae140194ea",
        "icon": "script",
        "lane": "6c72295f-27dc-406b-a762-214e40711a15",
        "name": "Заполнить типы персональных данных",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["f3da69a3-0586-49c3-897e-a817596a759d"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "createTypePersonalData",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      }
    },
    "lanes": {
      "6c72295f-27dc-406b-a762-214e40711a15": {
        "x": 8,
        "y": 8,
        "id": "6c72295f-27dc-406b-a762-214e40711a15",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 912,
        "height": 636,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "7e24cb98-1783-439f-85ec-88517b48ae73": {
        "id": "7e24cb98-1783-439f-85ec-88517b48ae73",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "c7e7797b-06c5-4cec-9ebc-03ae140194ea",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "f3da69a3-0586-49c3-897e-a817596a759d": {
        "id": "f3da69a3-0586-49c3-897e-a817596a759d",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 216
          },
          {
            "x": 120,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "c7e7797b-06c5-4cec-9ebc-03ae140194ea",
        "target": "856e206d-a42d-4fc2-be33-050655d219c0",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "\ninterface ITypePersonalData {\n    name: string,\n    code: string,\n    application_personal_data: boolean,\n    order_personal_data: boolean,\n    additional_agreement_personal_data: boolean,\n    child_personal_data: boolean,\n    use_personal_docs: boolean,\n}\n\nconst PERSONALDATA: ITypePersonalData[] = [\n    {\n        name: \"Паспортные данные\",\n        code: \"passport_data\",\n        application_personal_data: true,\n        order_personal_data: true,\n        additional_agreement_personal_data: true,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Изменение адреса регистрации\",\n        code: \"change_address_registration\",\n        application_personal_data: true,\n        order_personal_data: true,\n        additional_agreement_personal_data: true,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Изменение фактического места жительства\",\n        code: \"change_residence\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Изменение СНИЛС\",\n        code: \"changt_snils\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Изменение номера телефона\",\n        code: \"change_phone_number\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Данные водительского удостоверения\",\n        code: \"data_driver\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Сведения о браке\",\n        code: \"marriage_information\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Сведения о воинском учете\",\n        code: \"military_registration\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Данные о владении иностранным языком\",\n        code: \"data_language\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Сведения об образовании\",\n        code: \"data_education\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: false,\n        use_personal_docs: false,\n    },\n    {\n        name: \"Сведения о составе семьи\",\n        code: \"composition_family_information\",\n        application_personal_data: false,\n        order_personal_data: false,\n        additional_agreement_personal_data: false,\n        child_personal_data: true,\n        use_personal_docs: false,\n    },\n]\n\nasync function createTypePersonalData(): Promise\u003cvoid\u003e {\n    let promises: Promise\u003cvoid\u003e[] = [];\n    \n    const created_apps = await Context.fields.type_employees_personal_data.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(100).all();\n\n    for (const personal_data of PERSONALDATA) {\n        let app = created_apps.find(f =\u003e f.data.code == personal_data.code);\n\n        if (!app) {\n            app = Context.fields.type_employees_personal_data.app.create();\n        }\n\n        app.data.name = personal_data.name;\n        app.data.code = personal_data.code;\n        app.data.application_personal_data = personal_data.application_personal_data;\n        app.data.order_personal_data = personal_data.order_personal_data;\n        app.data.additional_agreement_personal_data = personal_data.additional_agreement_personal_data;\n        app.data.child_personal_data = personal_data.child_personal_data;\n        app.data.use_personal_docs = personal_data.use_personal_docs;\n\n        promises.push(app.save());\n    }\n\n    await Promise.all(promises);\n}\n",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": [
        {
          "code": "type_employees_personal_data",
          "data": {
            "code": "type_employees_personal_data",
            "namespace": "kedo"
          },
          "type": "SYS_COLLECTION",
          "view": {
            "name": "Виды изменения персональных данных"
          },
          "array": true,
          "single": true
        }
      ]
    },
    "targetFeed": {
      "type": "object",
      "variable": "type_employees_personal_data"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {
      "type_employees_personal_data": {
        "enabled": false,
        "conditions": []
      }
    }
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
