{
  "__id": "018c8757-193c-7ef1-af83-ab4a64b0d9d2",
  "namespace": "kedo.statuses",
  "code": "fill_default_statuses_workflow",
  "category": "00000000-0000-0000-0000-000000000000",
  "__name": "(s) Заполнить статусы по умолчанию",
  "type": "bpmn",
  "draft": false,
  "version": 23,
  "context": [
    {
      "code": "statuses",
      "type": "SYS_COLLECTION",
      "searchable": false,
      "indexed": false,
      "deleted": false,
      "array": true,
      "required": false,
      "single": true,
      "defaultValue": null,
      "calcByFormula": false,
      "formula": "",
      "data": {
        "code": "statuses",
        "filter": null,
        "bindings": null,
        "namespace": "kedo",
        "isDependent": false,
        "linkedFieldCode": ""
      },
      "view": {
        "name": "Статусы"
      }
    }
  ],
  "manualRun": false,
  "readonly": false,
  "__createdAt": "2023-11-28T11:31:54.163517258Z",
  "__createdBy": "b1815b65-1548-40d4-a2c2-8c2edb60ebe9",
  "__updatedAt": "2024-02-29T12:44:17.496854393Z",
  "__updatedBy": "dbf3495b-ce41-49f5-ba21-cdd11a052281",
  "process": {
    "items": {
      "00000000-0000-0000-0000-000000000000": {
        "x": 104,
        "y": 72,
        "id": "00000000-0000-0000-0000-000000000000",
        "lane": "c0a458f7-220f-4949-81cb-d26f52ab7c59",
        "type": "start",
        "color": "#ffffff",
        "exits": ["6cc26437-bae8-49b6-9de8-8ef7d994c0e9"],
        "width": 32,
        "height": 32,
        "settings": {
          "formFields": [
            {
              "code": "__name",
              "display": "Название",
              "tooltip": "Название экземпляра процесса, будет показываться в задачах",
              "readonly": false,
              "required": true
            }
          ],
          "instruction": "",
          "notifyMessage": "Запущен процесс",
          "titleTemplate": "(s) Заполнить статусы по умолчанию ({$statuses})",
          "titleGenerateMethod": "template"
        }
      },
      "ac69782c-894c-474d-a4d8-fa6bd89ca953": {
        "x": 80,
        "y": 152,
        "id": "ac69782c-894c-474d-a4d8-fa6bd89ca953",
        "icon": "script",
        "lane": "c0a458f7-220f-4949-81cb-d26f52ab7c59",
        "name": "Создание статусов",
        "type": "script",
        "color": "#fde9a0",
        "exits": ["66ba73be-0e1d-4bca-8db6-489ac01d87bb"],
        "width": 80,
        "height": 64,
        "settings": {
          "func": "fill_defaul_statuses",
          "count": 1,
          "delay": 5,
          "retry": true,
          "escalation": {
            "byError": {
              "notify": false,
              "interrupt": false,
              "receivers": []
            }
          }
        }
      },
      "f87f3d49-f8c8-4e6b-9f3c-b5f18afa3d1c": {
        "x": 104,
        "y": 272,
        "id": "f87f3d49-f8c8-4e6b-9f3c-b5f18afa3d1c",
        "icon": "end",
        "lane": "c0a458f7-220f-4949-81cb-d26f52ab7c59",
        "name": "",
        "type": "end",
        "color": "#ffffff",
        "exits": [],
        "width": 32,
        "height": 32,
        "settings": {
          "actions": [],
          "isModal": false,
          "actionType": "nothing",
          "messageText": "",
          "redirectUrl": ""
        }
      }
    },
    "lanes": {
      "c0a458f7-220f-4949-81cb-d26f52ab7c59": {
        "x": 8,
        "y": 8,
        "id": "c0a458f7-220f-4949-81cb-d26f52ab7c59",
        "name": "Инициатор",
        "color": "#d6f0cc",
        "width": 224,
        "height": 600,
        "settings": {
          "type": "dynamic",
          "variable": "__createdBy",
          "permissionExtend": {
            "kind": "simple"
          }
        },
        "direction": "vertical",
        "multiInstance": false
      }
    },
    "paper": {
      "format": "A4",
      "orientation": "landscape"
    },
    "transitions": {
      "66ba73be-0e1d-4bca-8db6-489ac01d87bb": {
        "id": "66ba73be-0e1d-4bca-8db6-489ac01d87bb",
        "name": "",
        "path": [
          {
            "x": 120,
            "y": 216
          },
          {
            "x": 120,
            "y": 272
          }
        ],
        "type": "plain",
        "source": "ac69782c-894c-474d-a4d8-fa6bd89ca953",
        "target": "f87f3d49-f8c8-4e6b-9f3c-b5f18afa3d1c",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      },
      "6cc26437-bae8-49b6-9de8-8ef7d994c0e9": {
        "id": "6cc26437-bae8-49b6-9de8-8ef7d994c0e9",
        "name": "Запустить",
        "path": [
          {
            "x": 120,
            "y": 104
          },
          {
            "x": 120,
            "y": 152
          }
        ],
        "type": "plain",
        "source": "00000000-0000-0000-0000-000000000000",
        "target": "ac69782c-894c-474d-a4d8-fa6bd89ca953",
        "settings": {
          "exit": {
            "confirm": "none",
            "interrupt": false,
            "skipCheck": false,
            "formFields": [],
            "buttonClass": "default",
            "confirmText": "",
            "popoverSize": "md",
            "formDescription": ""
          },
          "conditions": [],
          "descritpion": ""
        },
        "nameShift": 0
      }
    }
  },
  "scripts": "/**\nHere you can write scripts for complex server processing of the context during process execution.\nTo write scripts, use TypeScript (https://www.typescriptlang.org).\nELMA365 SDK documentation available on https://tssdk.elma365.com.\n**/\n\ninterface IStatus {\n    name: string,\n    code: string,\n}\n\nconst STATUSES: IStatus[] = [\n    {\n        name: \"В процессе оформления\",\n        code: \"pending\",\n    },\n    {\n        name: \"В процессе\",\n        code: \"in_progress\",\n    },\n    {\n        name: \"На корректировке\",\n        code: \"correction\",\n    },\n    {\n        name: \"Отменено\",\n        code: \"cancelled\",\n    },\n    {\n        name: \"Оформлено\",\n        code: \"issued\",\n    },\n    {\n        name: \"Новая\",\n        code: \"new\",\n    },\n    {\n        name: \"На подписании\",\n        code: \"signing\",\n    },\n    {\n        name: \"На согласовании\",\n        code: \"approval\",\n    },\n    {\n        name: \"На доп. подписании\",\n        code: \"additional_signing\",\n    },\n    {\n        name: \"Отказ сотрудника\",\n        code: \"staff_cancelled\",\n    },\n    {\n        name: \"Подготовка приказа\",\n        code: \"order_prepare\",\n    },\n    {\n        name: \"Подписание сотрудником\",\n        code: \"staff_order_signing\",\n    },\n    {\n        name: \"Подписание работодателем\",\n        code: \"chief_order_signing\",\n    },\n    {\n        name: \"Приказ подписан\",\n        code: \"order_signed\",\n    },\n    {\n        name: \"Приказ на корректировке\",\n        code: \"order_correction\",\n    },\n    {\n        name: \"На принятии решения\",\n        code: \"need_decision\",\n    },\n    {\n        name: \"Подписан на бумаге\",\n        code: \"paper_signed\",\n    },\n    {\n        name: \"Оформление на бумаге\",\n        code: \"paper_prepare\",\n    },\n    {\n        name: \"Оформление переноса\",\n        code: \"transfer\",\n    },\n    {\n        name: \"Отзыв заявления\",\n        code: \"withdrawal\",\n    },\n    {\n        name : \"На подготовке\",\n        code : \"on_prepare\",\n    },\n    {\n        name : \"Согласовано / подписано\",\n        code : \"agreed_signed\",\n    },\n    {\n        name : \"Завершен(-а)\",\n        code : \"completed\",\n    },\n    {\n        name : \"Подписан\",\n        code : \"signed\",\n    },\n    {\n        name : \"Ознакомление с ЛНА\",\n        code : \"familiarization_local_regulations\",\n    },\n    {\n        name : \"На подписании заявления\",\n        code : \"signing_application\",\n    },\n    {\n        name : \"Оформление отмены\",\n        code : \"making_cancellation\",\n    },\n    {\n        name : \"На подписании согласия\",\n        code : \"signing_consent\",\n    },\n    {\n        name: \"Подписание документа сотрудником\",\n        code: \"staff_doc_signing\",\n    },\n    {\n        name: \"Подписание документа работодателем\",\n        code: \"chief_doc_signing\",\n    },\n    {\n        name: \"В работе\",\n        code: \"at_work\",\n    },\n    {\n        name: \"Выдача документа\",\n        code: \"doc_issuance\",\n    },\n    {\n        name: \"На ознакомлении\",\n        code: \"at_look\",\n    },\n    {\n        name: \"Выплата начислений\",\n        code: \"payment_money\",\n    },\n    {\n        name: \"Ожидание подтверждения\",\n        code: \"waiting_confirm\", \n    },\n    {\n        name: \"Ознакомлен\",\n        code: \"introduction\", \n    },\n    {\n        name: \"Требуется передать документ\",\n        code: \"submit_document\",\n    },\n    {\n        name: \"Ожидание начала\",\n        code: \"waiting_start\",\n    },\n    {\n        name : \"Подготовка отчета\",\n        code : \"prepare_report\",\n    },\n    {\n        name: \"Расчет отпускных\",\n        code: \"vacation_pay_calculation\",\n    },\n    {\n        name : \"Выплата отпускных\",\n        code : \"vacation_pay_payment\",\n    },\n];\n\nasync function fill_defaul_statuses(): Promise\u003cvoid\u003e {\n    let promises: Promise\u003cvoid\u003e[] = [];\n\n    const created_apps = await Context.fields.statuses.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n\n    for (const status of STATUSES) {\n        let app = created_apps.find(f =\u003e f.data.code == status.code);\n\n        if (!app) {\n            app = Context.fields.statuses.app.create();\n        }\n\n        app.data.name = status.name;\n        app.data.code = status.code;\n\n        promises.push(app.save());\n    }\n\n    await Promise.all(promises);\n}",
  "forms": [],
  "settings": {
    "logged": true,
    "debugForm": {
      "allFields": false,
      "formFields": []
    },
    "targetFeed": {
      "type": "object",
      "variable": "statuses"
    },
    "allowGlobal": false,
    "instanceCard": {
      "allFields": true,
      "formFields": []
    },
    "notifyOnStart": true,
    "allowNamespace": false,
    "applicationContext": false,
    "importsDependencies": [],
    "fieldVisibilityConditions": {}
  },
  "hideInList": false,
  "applicationLink": false,
  "__deletedAt": null
}
