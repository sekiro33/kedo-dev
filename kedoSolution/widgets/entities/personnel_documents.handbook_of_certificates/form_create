{"__id":"018c8758-3f95-7e0a-9c4c-665de135c55e","namespace":"personnel_documents.handbook_of_certificates","code":"form_create","__name":"Форма создания","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"96f173ef-f765-436f-a7ad-3d056b44e655","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["item"]},"systemFunctions":{"validate":{"kind":"Function","name":"validate","type":"client"}}},"content":{"[content]":[{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"fc1c9203-cc27-4441-af14-0775bea24d29","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","__name"]},"tooltip":null,"required":true,"hideEmpty":false,"__readOnly":null}},{"id":"f3f65690-612a-4dd2-a1ca-2dcdde172f3e","descriptor":"dynamic-form-row","values":{"control":{"path":["item","universal_responsible"]},"required":true,"__readOnly":null,"showDisplayName":true,"tooltip":null,"hideEmpty":false,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"universal_responsible_change","type":"client"},"__isConstValues":[]}},{"id":"aa80a67b-403c-475f-b9b0-3622c564c47e","descriptor":"dynamic-form-row","values":{"tooltip":null,"__hidden":{"path":["required"],"modifier":"not"},"__readOnly":null,"bindingMode":false,"__isConstValues":[],"control":{"path":["item","responsible"]},"required":{"path":["required"]},"hideEmpty":false,"showDisplayName":true}},{"id":"7308562c-54e3-4ce0-b6ac-cfa8ad862084","descriptor":"dynamic-form-row","values":{"__hidden":{"path":["view_table"],"modifier":"not"},"__readOnly":null,"bindingMode":false,"showDisplayName":true,"tooltip":null,"required":{"path":["view_table"]},"hideEmpty":false,"__isConstValues":[],"control":{"path":["item","organizations_reponsible_table"]}}},{"id":"a4a65139-d7df-4bec-b338-c184256b1475","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","form_is_required"]},"tooltip":null,"required":true,"hideEmpty":false,"__readOnly":false}},{"id":"6e57471a-9c12-4a82-be95-6053560df206","descriptor":"dynamic-form-row","values":{"__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","period_is_required"]},"tooltip":null,"required":true,"hideEmpty":false}},{"id":"bb5ebf31-490b-4630-a01f-be31a44c00ed","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","list_of_required_documents"]}}}]}}],"[sidebar]":[{"id":"662f08da-59da-4112-9ae1-763785ab8bf2","descriptor":"sidebar-widget","content":{"":[{"id":"1556d7a7-eaa5-41a2-b262-82ec3b86e64d","descriptor":"user-guide"}]}}],"[headerControls]":[],"[headerCustomization]":[],"[footer]":[{"id":"0fb94431-9919-4c2d-b38b-51b985f07abc","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}]}},"fields":[{"code":"required","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"required","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"view_table","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"view_table","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"rights_settings_by_doc","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"rights_settings_by_doc","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Настройка прав доступа по документам","data":{}}}],"fieldVisibilityConditions":{"required":{"enabled":false,"conditions":[]},"view_table":{"enabled":false,"conditions":[]},"rights_settings_by_doc":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\ndeclare const console:any;\nasync function universal_responsible_change(): Promise\u003cvoid\u003e {\n    if (Context.data.universal_responsible) {\n        ViewContext.data.required = true;\n        ViewContext.data.view_table = false;\n    } else {\n        ViewContext.data.view_table = true;\n        ViewContext.data.required = false;\n        if (Context.data.organizations_reponsible_table!.length == 0) {\n            let organizations = await Context.fields.organizations_reponsible_table.fields.organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n            for (let item of organizations) {\n                let row = Context.data.organizations_reponsible_table!.insert();\n                row.organization = item;\n            }\n            Context.data.organizations_reponsible_table = Context.data.organizations_reponsible_table;\n        }\n    }\n}\n\nasync function validate(): Promise\u003cValidationResult\u003e {\n    let settings = await ViewContext.fields.rights_settings_by_doc.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    let result = new ValidationResult();\n    if (Context.data.organizations_reponsible_table \u0026\u0026 Context.data.organizations_reponsible_table.length \u003e 0 \u0026\u0026 !!Context.data.universal_responsible) {\n        for (let i = 0; i \u003c Context.data.organizations_reponsible_table.length; i++) {\n            let row = Context.data.organizations_reponsible_table[i];\n            let setting = settings.filter(item =\u003e item.data.organization!.id == row.organization.id);\n            for (let item of row.responsible) {\n                let user_group_ids = (await item.fetch()).data.groupIds!.map(item =\u003e item.id);\n                if (setting \u0026\u0026 setting.length \u003e 0) {\n                    for (let j = 0; j \u003c setting.length; j++) {\n                        let st = setting[j];\n                        if (user_group_ids!.indexOf(st.data.org_groups![0].code) != -1) {\n                            if ((st.data.doc_table!.find(item =\u003e item.ns_and_code == 'personnel_documents;certificate'))!.access == true) {\n                                break;\n                            }\n                            else {\n                                let user = await item.fetch();\n                                if (j + 1 \u003e= setting.length) {\n                                    result.addMessage(user.data.fullname!.lastname + ' ' + user.data.fullname!.firstname + ' не имеет доступа к справкам.')\n                                }\n                            }\n                        } else {\n                            if (j + 1 \u003e= setting.length) {\n                                let user = await item.fetch();\n                                result.addMessage(user.data.fullname!.lastname + ' ' + user.data.fullname!.firstname + ' не имеет доступа к справкам.')\n                            }\n                        }\n                    }\n                } else{\n                     result.addMessage('Не найдены настройки по документам')\n                }\n            }\n\n        }\n\n    }\n\n    return result;\n}","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"personnel_documents","dataCode":"handbook_of_certificates","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server) {\n        async function universal_responsible_change() {\n            if (Context.data.universal_responsible) {\n                ViewContext.data.required = true;\n                ViewContext.data.view_table = false;\n            }\n            else {\n                ViewContext.data.view_table = true;\n                ViewContext.data.required = false;\n                if (Context.data.organizations_reponsible_table.length == 0) {\n                    let organizations = await Context.fields.organizations_reponsible_table.fields.organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n                    for (let item of organizations) {\n                        let row = Context.data.organizations_reponsible_table.insert();\n                        row.organization = item;\n                    }\n                    Context.data.organizations_reponsible_table = Context.data.organizations_reponsible_table;\n                }\n            }\n        }\n        async function validate() {\n            let settings = await ViewContext.fields.rights_settings_by_doc.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n            let result = new ValidationResult();\n            if (Context.data.organizations_reponsible_table \u0026\u0026 Context.data.organizations_reponsible_table.length \u003e 0 \u0026\u0026 !!Context.data.universal_responsible) {\n                for (let i = 0; i \u003c Context.data.organizations_reponsible_table.length; i++) {\n                    let row = Context.data.organizations_reponsible_table[i];\n                    let setting = settings.filter(item =\u003e item.data.organization.id == row.organization.id);\n                    for (let item of row.responsible) {\n                        let user_group_ids = (await item.fetch()).data.groupIds.map(item =\u003e item.id);\n                        if (setting \u0026\u0026 setting.length \u003e 0) {\n                            for (let j = 0; j \u003c setting.length; j++) {\n                                let st = setting[j];\n                                if (user_group_ids.indexOf(st.data.org_groups[0].code) != -1) {\n                                    if ((st.data.doc_table.find(item =\u003e item.ns_and_code == 'personnel_documents;certificate')).access == true) {\n                                        break;\n                                    }\n                                    else {\n                                        let user = await item.fetch();\n                                        if (j + 1 \u003e= setting.length) {\n                                            result.addMessage(user.data.fullname.lastname + ' ' + user.data.fullname.firstname + ' не имеет доступа к справкам.');\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (j + 1 \u003e= setting.length) {\n                                        let user = await item.fetch();\n                                        result.addMessage(user.data.fullname.lastname + ' ' + user.data.fullname.firstname + ' не имеет доступа к справкам.');\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            result.addMessage('Не найдены настройки по документам');\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        return {\n            universal_responsible_change,\n            validate\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"universal_responsible_change","parameters":[],"type":"[object Object]"},{"name":"validate","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:09:16.819946938Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:09:08.709000672Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
