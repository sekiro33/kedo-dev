{"__id":"018c8758-4180-7e2a-aab7-dd9e6e1c7161","namespace":"personnel_documents.handbook_of_certificates","code":"edit","__name":"Форма редактирования","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":5,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"45f1b2c0-430a-467c-b27a-4db157dc67ed","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["item"]},"systemFunctions":{"validate":{"kind":"Function","name":"validate","type":"client"}}},"content":{"[footer]":[{"id":"7dc0edc6-f0a1-4a65-a5e6-b3bcb6815a03","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}],"[content]":[{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"fc3c5b7e-0308-46c1-8c63-b22241b349b8","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","__name"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false}},{"id":"0ec2dda3-e379-474e-9a9d-bfc64c615e73","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["item","form_is_required"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"__isConstValues":[]}},{"id":"152e75b9-8d27-4b87-92e8-bcbe3310f985","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","period_is_required"]}}},{"id":"48553de7-fc10-493c-8d72-e26724ca950d","descriptor":"dynamic-form-row","values":{"control":{"path":["item","universal_responsible"]},"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"universal_responsible_change","type":"client"},"__isConstValues":[],"tooltip":null,"showDisplayName":true}},{"id":"f8f8a409-f650-471b-a1b4-d56a794747cb","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"control":{"path":["item","responsible"]},"__hidden":{"path":["view_responsible"],"modifier":"not"},"required":{"path":["view_responsible"]},"__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"tooltip":null}},{"id":"ea90e084-2019-4e83-8024-c3aa3641533b","descriptor":"dynamic-form-row","values":{"control":{"path":["item","organizations_reponsible_table"]},"tooltip":null,"__isConstValues":[],"showDisplayName":true,"__hidden":{"path":["view_organizations_reponsible_table"],"modifier":"not"},"required":{"path":["view_organizations_reponsible_table"]},"hideEmpty":false,"__readOnly":null,"bindingMode":false}}]}}],"[sidebar]":[{"id":"662f08da-59da-4112-9ae1-763785ab8bf2","descriptor":"sidebar-widget","content":{"":[{"id":"1556d7a7-eaa5-41a2-b262-82ec3b86e64d","descriptor":"user-guide"}]}}],"[headerControls]":[],"[headerCustomization]":[]}},"fields":[{"code":"view_responsible","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"view_responsible","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"view_organizations_reponsible_table","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"view_organizations_reponsible_table","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"rights_settings_by_doc","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"rights_settings_by_doc","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Настройка прав доступа по документам","data":{}}}],"fieldVisibilityConditions":{"view_responsible":{"enabled":false,"conditions":[]},"rights_settings_by_doc":{"enabled":false,"conditions":[]},"view_organizations_reponsible_table":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\ndeclare const console:any\nasync function onInit(): Promise\u003cvoid\u003e {\n    if (Context.data.universal_responsible) {\n        ViewContext.data.view_responsible = true;\n        ViewContext.data.view_organizations_reponsible_table = false;\n    } else if (Context.data.universal_responsible == false) {\n        ViewContext.data.view_organizations_reponsible_table = true;\n        ViewContext.data.view_responsible = false;\n    }\n}\n\nasync function universal_responsible_change(): Promise\u003cvoid\u003e {\n    if (Context.data.universal_responsible) {\n        ViewContext.data.view_responsible = true;\n        ViewContext.data.view_organizations_reponsible_table = false;\n    } else {\n        ViewContext.data.view_organizations_reponsible_table = true;\n        ViewContext.data.view_responsible = false;\n         if (Context.data.organizations_reponsible_table!.length == 0) {\n            let organizations = await Context.fields.organizations_reponsible_table.fields.organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n            for (let item of organizations) {\n                let row = Context.data.organizations_reponsible_table!.insert();\n                row.organization = item;\n            }\n            Context.data.organizations_reponsible_table = Context.data.organizations_reponsible_table;\n        }\n    }\n}\n\nasync function validate(): Promise\u003cValidationResult\u003e {\n    let settings = await ViewContext.fields.rights_settings_by_doc.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    let result = new ValidationResult();\n    if (Context.data.organizations_reponsible_table \u0026\u0026 Context.data.organizations_reponsible_table.length \u003e 0 \u0026\u0026 !Context.data.universal_responsible) {\n        let user_ids :string [] = [];\n        user_ids = user_ids.concat(...(Context.data.organizations_reponsible_table.map(item=\u003eitem.responsible.map(user=\u003euser.id))))\n        let users = await System.users.search().where(f=\u003ef.__id.in(user_ids)).size(1000).all()\n        for (let i = 0; i \u003c Context.data.organizations_reponsible_table.length; i++) {\n            let row = Context.data.organizations_reponsible_table[i];\n            let setting = settings.filter(item =\u003e item.data.organization \u0026\u0026 row.organization \u0026\u0026  item.data.organization.id == row.organization.id);\n            for (let item of row.responsible) {\n                let user_group_ids = users!.find(user=\u003euser.id == item.id)?.data.groupIds!.map(item =\u003e item.id);\n                if (setting \u0026\u0026 setting.length \u003e 0) {\n                    for (let j = 0; j \u003c setting.length; j++) {\n                        let st = setting[j];\n                        if (user_group_ids!.indexOf(st.data.org_groups![0].code) != -1) {\n                            if ((st.data.doc_table!.find(item =\u003e item.ns_and_code == 'personnel_documents;certificate'))!.access == true) {\n                                break;\n                            }\n                            else {\n                                let user = users!.find(user=\u003euser.id == item.id)\n                                if (j + 1 \u003e= setting.length) {\n                                    result.addMessage(user?.data.fullname!.lastname + ' ' + user?.data.fullname!.firstname + ' не имеет доступа к справкам.')\n                                }\n                            }\n                        } else {\n                            if (j + 1 \u003e= setting.length) {\n                                let user = users!.find(user=\u003euser.id == item.id)\n                                result.addMessage(user?.data.fullname!.lastname + ' ' + user?.data.fullname!.firstname + ' не имеет доступа к справкам.')\n                            }\n                        }\n                    }\n                } else{\n                    result.addMessage('Не найдены настройки по документам')\n                }\n            }\n        }\n    }\n    return result;\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"personnel_documents","dataCode":"handbook_of_certificates","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            if (Context.data.universal_responsible) {\n                ViewContext.data.view_responsible = true;\n                ViewContext.data.view_organizations_reponsible_table = false;\n            }\n            else if (Context.data.universal_responsible == false) {\n                ViewContext.data.view_organizations_reponsible_table = true;\n                ViewContext.data.view_responsible = false;\n            }\n        }\n        async function universal_responsible_change() {\n            if (Context.data.universal_responsible) {\n                ViewContext.data.view_responsible = true;\n                ViewContext.data.view_organizations_reponsible_table = false;\n            }\n            else {\n                ViewContext.data.view_organizations_reponsible_table = true;\n                ViewContext.data.view_responsible = false;\n                if (Context.data.organizations_reponsible_table.length == 0) {\n                    let organizations = await Context.fields.organizations_reponsible_table.fields.organization.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n                    for (let item of organizations) {\n                        let row = Context.data.organizations_reponsible_table.insert();\n                        row.organization = item;\n                    }\n                    Context.data.organizations_reponsible_table = Context.data.organizations_reponsible_table;\n                }\n            }\n        }\n        async function validate() {\n            var _a;\n            let settings = await ViewContext.fields.rights_settings_by_doc.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n            let result = new ValidationResult();\n            if (Context.data.organizations_reponsible_table \u0026\u0026 Context.data.organizations_reponsible_table.length \u003e 0 \u0026\u0026 !Context.data.universal_responsible) {\n                let user_ids = [];\n                user_ids = user_ids.concat(...(Context.data.organizations_reponsible_table.map(item =\u003e item.responsible.map(user =\u003e user.id))));\n                let users = await System.users.search().where(f =\u003e f.__id.in(user_ids)).size(1000).all();\n                for (let i = 0; i \u003c Context.data.organizations_reponsible_table.length; i++) {\n                    let row = Context.data.organizations_reponsible_table[i];\n                    let setting = settings.filter(item =\u003e item.data.organization \u0026\u0026 row.organization \u0026\u0026 item.data.organization.id == row.organization.id);\n                    for (let item of row.responsible) {\n                        let user_group_ids = (_a = users.find(user =\u003e user.id == item.id)) === null || _a === void 0 ? void 0 : _a.data.groupIds.map(item =\u003e item.id);\n                        if (setting \u0026\u0026 setting.length \u003e 0) {\n                            for (let j = 0; j \u003c setting.length; j++) {\n                                let st = setting[j];\n                                if (user_group_ids.indexOf(st.data.org_groups[0].code) != -1) {\n                                    if ((st.data.doc_table.find(item =\u003e item.ns_and_code == 'personnel_documents;certificate')).access == true) {\n                                        break;\n                                    }\n                                    else {\n                                        let user = users.find(user =\u003e user.id == item.id);\n                                        if (j + 1 \u003e= setting.length) {\n                                            result.addMessage((user === null || user === void 0 ? void 0 : user.data.fullname.lastname) + ' ' + (user === null || user === void 0 ? void 0 : user.data.fullname.firstname) + ' не имеет доступа к справкам.');\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (j + 1 \u003e= setting.length) {\n                                        let user = users.find(user =\u003e user.id == item.id);\n                                        result.addMessage((user === null || user === void 0 ? void 0 : user.data.fullname.lastname) + ' ' + (user === null || user === void 0 ? void 0 : user.data.fullname.firstname) + ' не имеет доступа к справкам.');\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            result.addMessage('Не найдены настройки по документам');\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        return {\n            onInit,\n            universal_responsible_change,\n            validate\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"universal_responsible_change","parameters":[],"type":"[object Object]"},{"name":"validate","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:09:17.309978494Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:08:58.510087293Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
