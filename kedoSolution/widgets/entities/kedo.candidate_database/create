{
  "__id": "018f1058-705d-72b5-b1c8-8071d555063b",
  "namespace": "kedo.candidate_database",
  "code": "create",
  "__name": "Форма создания",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 30,
  "hidden": false,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "59a6c7f9-8860-4112-ba29-10efb8bb0df8",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "formGroup": {
          "path": ["item"]
        },
        "systemFunctions": {}
      },
      "content": {
        "[footer]": [
          {
            "id": "f5d8eeda-1422-4e33-85d7-9517da5381ea",
            "descriptor": "zone-content",
            "values": {
              "zoneCode": "[footer]"
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "c7cd4a84-440a-421f-99ea-79dd2fc99582",
                  "descriptor": "elma-info-block",
                  "values": {
                    "__relativeURL": "",
                    "typeEnum": [
                      {
                        "code": "danger",
                        "name": "Ошибка (красный)"
                      }
                    ],
                    "__baseURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "text": {
                      "path": ["text_error"]
                    },
                    "__hidden": {
                      "path": ["view_error"],
                      "modifier": "not"
                    },
                    "__outlet": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "231adc7d-1545-4b65-b810-9d28ffe81b65",
                        "descriptor": "row",
                        "values": {
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "8298fec8-a7f3-4bb3-a33e-3d44d223db85",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "3ad5c3c3-d01e-4d90-bc6f-d5ecd07b48dd",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "required": false,
                                      "__readOnly": true,
                                      "bindingMode": false,
                                      "showCreateItem": false,
                                      "__isConstValues": [],
                                      "__outlet": "",
                                      "hideEmpty": false,
                                      "displayName": "",
                                      "__relativeURL": "",
                                      "showDisplayName": false,
                                      "control": {
                                        "path": ["candidate_double"]
                                      },
                                      "tooltip": "",
                                      "__baseURL": "",
                                      "__renderContentOnDemand": false
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "6bff6ed8-8e46-4e95-8eaf-ba2c78a14b64",
                              "descriptor": "column",
                              "values": {
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "3f11afb6-a602-4288-a201-7e282b44269f",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "showDisplayName": false,
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["date_str"]
                                      },
                                      "tooltip": null,
                                      "__outlet": "",
                                      "hideEmpty": false,
                                      "__readOnly": true,
                                      "__isConstValues": [],
                                      "required": false,
                                      "__baseURL": "",
                                      "bindingMode": false,
                                      "displayName": "",
                                      "__relativeURL": ""
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "76c775c7-ad15-46d7-a98b-a7049461553d",
                              "descriptor": "column",
                              "values": {
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "956acf15-4bc3-4e9b-a93d-a8b6e69d4aba",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__baseURL": "",
                                      "hideEmpty": false,
                                      "__readOnly": true,
                                      "showDisplayName": false,
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["phone_tel"]
                                      },
                                      "tooltip": null,
                                      "__outlet": "",
                                      "required": false,
                                      "bindingMode": false,
                                      "displayName": "",
                                      "__relativeURL": "",
                                      "__isConstValues": []
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "2cdad3ea-16c7-4f45-8e74-635222f30ce9",
                        "descriptor": "html",
                        "descriptorVersion": 3,
                        "values": {
                          "html": "\u003cp style=\"text-align: left;\"\u003e\u003cspan style=\"font-size: 10pt;\"\u003eДля использования уже созданной карточки кандидата зайдите в нее, отредактируйте, если нужно, и нажмите \u0026#34;Повторное рассмотрение\u0026#34;. \u003c/span\u003e\u003c/p\u003e"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "64e86644-2eb3-4114-857f-9ccc76dcee67",
                  "descriptor": "elma-info-block",
                  "values": {
                    "__isConstValues": [],
                    "__hidden": {
                      "path": ["view_warning"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "typeEnum": [
                      {
                        "code": "warning",
                        "name": "Предупреждение (оранжевый)"
                      }
                    ],
                    "__relativeURL": "",
                    "text": {
                      "path": ["text_error"]
                    },
                    "__baseURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "a32c5345-6f76-493a-a159-b82eb2205562",
                        "descriptor": "row",
                        "values": {
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "11084e9f-e148-4aff-954f-968adb16c04c",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "7d1a9b40-8ad3-4c6c-a2e9-c8e62fa2416d",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "hideEmpty": false,
                                      "bindingMode": false,
                                      "displayName": "",
                                      "__isConstValues": [],
                                      "__renderContentOnDemand": false,
                                      "tooltip": "",
                                      "__baseURL": "",
                                      "__readOnly": true,
                                      "showDisplayName": false,
                                      "__outlet": "",
                                      "__relativeURL": "",
                                      "required": false,
                                      "showCreateItem": false,
                                      "control": {
                                        "path": ["candidate_double"]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "49396779-bf96-4231-874c-bf5771204dc1",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "1b36e9e5-b5b5-4d1e-a934-8af9690bd91b",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__outlet": "",
                                      "__baseURL": "",
                                      "__readOnly": true,
                                      "displayName": "",
                                      "__isConstValues": [],
                                      "showDisplayName": false,
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["date_str"]
                                      },
                                      "tooltip": null,
                                      "required": false,
                                      "hideEmpty": false,
                                      "bindingMode": false,
                                      "__relativeURL": ""
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "61a1876f-b6ef-46b7-948d-ec67b593696d",
                              "descriptor": "column",
                              "values": {
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "72bfe67f-0231-479c-96f9-73ac6ab9357e",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "control": {
                                        "path": ["phone_tel"]
                                      },
                                      "tooltip": null,
                                      "required": false,
                                      "displayName": "",
                                      "__isConstValues": [],
                                      "__renderContentOnDemand": false,
                                      "__outlet": "",
                                      "__baseURL": "",
                                      "hideEmpty": false,
                                      "__readOnly": true,
                                      "bindingMode": false,
                                      "__relativeURL": "",
                                      "showDisplayName": false
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "dd20d017-145a-473e-bf2c-ae8dcc4551e2",
                        "descriptor": "html",
                        "descriptorVersion": 3,
                        "values": {
                          "html": "\u003cp\u003e\u003cspan style=\"font-size: 10pt;\"\u003eДля использования уже созданной карточки кандидата зайдите в нее, отредактируйте, если нужно, и нажмите \u0026#34;Повторное рассмотрение\u0026#34;. \u003c/span\u003e\u003c/p\u003e"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "bfe4d6c6-19f7-46b6-ab77-33fc178b31a6",
                  "descriptor": "elma-info-block",
                  "values": {
                    "text": {
                      "path": ["text_error_staff"]
                    },
                    "__outlet": "",
                    "typeEnum": [
                      {
                        "code": "danger",
                        "name": "Ошибка (красный)"
                      }
                    ],
                    "__baseURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__hidden": {
                      "path": ["view_error_staff"],
                      "modifier": "not"
                    },
                    "__relativeURL": "",
                    "__isConstValues": []
                  },
                  "content": {
                    "": [
                      {
                        "id": "d02ea974-19d9-483e-a5ba-d2d9457d4a27",
                        "descriptor": "row",
                        "values": {
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "11084e9f-e148-4aff-954f-968adb16c04c",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "5e1b8076-9140-407d-b2cf-e4ae949cf1fe",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__relativeURL": "",
                                      "showCreateItem": false,
                                      "__renderContentOnDemand": false,
                                      "tooltip": null,
                                      "__baseURL": "",
                                      "__readOnly": true,
                                      "bindingMode": false,
                                      "displayName": "",
                                      "__outlet": "",
                                      "showDisplayName": false,
                                      "__isConstValues": [],
                                      "control": {
                                        "path": ["staff_double"]
                                      },
                                      "required": false,
                                      "hideEmpty": false
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "49396779-bf96-4231-874c-bf5771204dc1",
                              "descriptor": "column",
                              "values": {
                                "__renderContentOnDemand": false,
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "5f065e40-fa07-4b82-a717-6b5acd14943f",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "showDisplayName": false,
                                      "__renderContentOnDemand": false,
                                      "required": false,
                                      "displayName": "",
                                      "__relativeURL": "",
                                      "__isConstValues": [],
                                      "hideEmpty": false,
                                      "__readOnly": true,
                                      "bindingMode": false,
                                      "control": {
                                        "path": ["date_str_staff"]
                                      },
                                      "tooltip": null,
                                      "__outlet": "",
                                      "__baseURL": ""
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "faf0ec10-5a2f-445e-b4b9-f8fabae7cfa9",
                              "descriptor": "column",
                              "values": {
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false,
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": []
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "c2ce8f94-95b5-4537-b06d-595f41100b33",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__readOnly": true,
                                      "__relativeURL": "",
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["phone_tel_staff"]
                                      },
                                      "__outlet": "",
                                      "required": false,
                                      "__baseURL": "",
                                      "__isConstValues": [],
                                      "showDisplayName": false,
                                      "tooltip": null,
                                      "hideEmpty": false,
                                      "bindingMode": false,
                                      "displayName": ""
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "11b70fbf-db77-4c50-9957-a073225dad4a",
                  "descriptor": "elma-info-block",
                  "values": {
                    "__hidden": {
                      "path": ["view_warning_staff"],
                      "modifier": "not"
                    },
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__renderContentAsync": false,
                    "text": {
                      "path": ["text_error_staff"]
                    },
                    "__outlet": "",
                    "typeEnum": [
                      {
                        "code": "warning",
                        "name": "Предупреждение (оранжевый)"
                      }
                    ],
                    "__isConstValues": [],
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "334120fa-945c-42bc-9b26-eb4e32dba0a6",
                        "descriptor": "row",
                        "values": {
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "11084e9f-e148-4aff-954f-968adb16c04c",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "69b1e979-bcae-4247-8406-1b7071051ed8",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__isConstValues": [],
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["staff_double"]
                                      },
                                      "tooltip": null,
                                      "__readOnly": true,
                                      "__relativeURL": "",
                                      "bindingMode": false,
                                      "displayName": "",
                                      "showCreateItem": false,
                                      "showDisplayName": false,
                                      "__outlet": "",
                                      "required": false,
                                      "hideEmpty": false,
                                      "__baseURL": ""
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "49396779-bf96-4231-874c-bf5771204dc1",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "d3b7f4e4-fedc-4cc9-bd07-5faf0d746bf5",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "tooltip": null,
                                      "required": false,
                                      "__baseURL": "",
                                      "displayName": "",
                                      "__relativeURL": "",
                                      "showDisplayName": false,
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["date_str_staff"]
                                      },
                                      "__outlet": "",
                                      "hideEmpty": false,
                                      "__readOnly": true,
                                      "bindingMode": false,
                                      "__isConstValues": []
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "765ec044-df1a-4ef3-9125-4704ee39c3e4",
                              "descriptor": "column",
                              "values": {
                                "__outlet": "",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false
                              },
                              "content": {
                                "": [
                                  {
                                    "id": "0a717dbe-3987-4fcc-bf56-2eb61130d1b0",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__renderContentOnDemand": false,
                                      "tooltip": null,
                                      "__outlet": "",
                                      "required": false,
                                      "__baseURL": "",
                                      "__readOnly": true,
                                      "displayName": "",
                                      "showDisplayName": false,
                                      "control": {
                                        "path": ["phone_tel_staff"]
                                      },
                                      "hideEmpty": false,
                                      "bindingMode": false,
                                      "__relativeURL": "",
                                      "__isConstValues": []
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "86f1ee15-b72f-42a8-845a-4d4943ac6269",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "bindingMode": false,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "__outlet": "",
                    "required": true,
                    "__baseURL": "",
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "control": {
                      "path": ["item", "lastname"]
                    },
                    "hideEmpty": false,
                    "__readOnly": null,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkData",
                      "type": "client"
                    }
                  }
                },
                {
                  "id": "ad1eea31-3922-4f07-b97d-358fe8b65846",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "tooltip": null,
                    "__readOnly": null,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkData",
                      "type": "client"
                    },
                    "__baseURL": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "control": {
                      "path": ["item", "firstname"]
                    },
                    "__outlet": "",
                    "required": true
                  }
                },
                {
                  "id": "5c8be474-cbed-4a8d-8cb3-08c95ea69dd6",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "required": false,
                    "bindingMode": false,
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "control": {
                      "path": ["no_middlename"]
                    },
                    "__outlet": "",
                    "hideEmpty": false,
                    "__readOnly": null,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "__baseURL": ""
                  }
                },
                {
                  "id": "6e1b861d-97e9-4134-be31-62438c000de7",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "tooltip": null,
                    "__renderContentOnDemand": false,
                    "__relativeURL": "",
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkData",
                      "type": "client"
                    },
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "control": {
                      "path": ["item", "middlename"]
                    },
                    "__hidden": {
                      "path": ["no_middlename"]
                    },
                    "__outlet": "",
                    "__readOnly": null,
                    "bindingMode": false,
                    "required": false,
                    "__baseURL": "",
                    "hideEmpty": false
                  }
                },
                {
                  "id": "bc171f60-5577-46f1-bf54-36dbe7e0ffa0",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "tooltip": null,
                    "required": true,
                    "__baseURL": "",
                    "__readOnly": null,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "control": {
                      "path": ["item", "notification"]
                    },
                    "__outlet": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "changeNotification",
                      "type": "client"
                    }
                  }
                },
                {
                  "id": "d1040dff-a329-45ef-8393-39312c220ae6",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "required": false,
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__baseURL": "",
                    "__readOnly": null,
                    "__relativeURL": "",
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkData",
                      "type": "client"
                    },
                    "showDisplayName": true,
                    "control": {
                      "path": ["item", "date_of_birth"]
                    },
                    "tooltip": null,
                    "__outlet": ""
                  }
                },
                {
                  "id": "bc097b87-f518-42c7-8524-45c5ba1c8fc7",
                  "descriptor": "elma-info-block",
                  "values": {
                    "__renderContentAsync": false,
                    "__hidden": {
                      "path": ["error_phone_candidate"],
                      "modifier": "not"
                    },
                    "typeEnum": [
                      {
                        "code": "danger",
                        "name": "Ошибка (красный)"
                      }
                    ],
                    "__baseURL": "",
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "text": "Найден кандидат с таким номером",
                    "__outlet": "",
                    "__relativeURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "d9845c35-ec12-49d2-aef2-8d0b66164872",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "required": false,
                          "bindingMode": false,
                          "showDisplayName": false,
                          "__renderContentOnDemand": false,
                          "__readOnly": true,
                          "__relativeURL": "",
                          "showCreateItem": false,
                          "__isConstValues": [],
                          "control": {
                            "path": ["phone_candidate"]
                          },
                          "__outlet": "",
                          "hideEmpty": false,
                          "displayName": "",
                          "tooltip": null,
                          "__baseURL": ""
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "810f4fb7-cf6e-4851-a08c-6bb337ab31d4",
                  "descriptor": "elma-info-block",
                  "values": {
                    "__outlet": "",
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__renderContentOnDemand": false,
                    "text": "Найден сотрудник с таким номером",
                    "__hidden": {
                      "path": ["error_phone_staff"],
                      "modifier": "not"
                    },
                    "typeEnum": [
                      {
                        "code": "danger",
                        "name": "Ошибка (красный)"
                      }
                    ],
                    "__isConstValues": [],
                    "__renderContentAsync": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "94c1dc5d-36d6-4d3a-8ce8-1b8faafa3911",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "bindingMode": false,
                          "showCreateItem": false,
                          "__isConstValues": [],
                          "__readOnly": true,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["phone_staff"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "displayName": "",
                          "__relativeURL": "",
                          "showDisplayName": false,
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "47ba8e43-c713-4673-b208-6272258a9849",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "tooltip": null,
                    "required": {
                      "path": ["required_phone"]
                    },
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__readOnly": null,
                    "bindingMode": false,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "setPhone",
                      "type": "client"
                    },
                    "control": {
                      "path": ["item", "phone"]
                    },
                    "showDisplayName": true,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "__outlet": ""
                  }
                },
                {
                  "id": "21bc5098-9b6a-48de-b58b-2a3b5b66255a",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__readOnly": null,
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "control": {
                      "path": ["item", "email"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "required": {
                      "path": ["required_email"]
                    },
                    "__baseURL": "",
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false
                  }
                },
                {
                  "id": "72c6587e-319a-4414-af27-d800b0894a80",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__baseURL": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "required": true,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "changePosition",
                      "type": "client"
                    },
                    "showCreateItem": false,
                    "__isConstValues": [],
                    "control": {
                      "path": ["item", "planned_position"]
                    },
                    "__readOnly": null,
                    "__outlet": "",
                    "__renderContentOnDemand": false
                  }
                },
                {
                  "id": "f1dac39e-9cb5-4ea6-806b-d104bfa39442",
                  "descriptor": "row-layout",
                  "values": {
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "elementsAlignEnum": [
                      {
                        "code": "left",
                        "name": "shared.common.row-layout@widget-elements-align-left"
                      }
                    ],
                    "__renderContentAsync": false,
                    "__outlet": "",
                    "__styles": "width: 70%",
                    "__baseURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "08f80a32-7dab-4f64-82ed-9e9dedd2b764",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": "В таблице указывается список видов личных документов, которые кандидат должен прикрепить в процессе заполнения анкеты",
                          "bindingMode": false,
                          "__isConstValues": [],
                          "widgetCustomSettings": {
                            "kind": "BlobObject",
                            "settings": {
                              "columnsView": {
                                "document_type": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": false,
                                  "required": true,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                },
                                "file_document": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": false,
                                  "required": false,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                }
                              },
                              "allowDeleteRows": false
                            }
                          },
                          "__renderContentOnDemand": false,
                          "__baseURL": "",
                          "showDisplayName": true,
                          "required": true,
                          "__readOnly": null,
                          "__relativeURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeTable",
                            "type": "client"
                          },
                          "control": {
                            "path": ["item", "table_personal_documents"]
                          },
                          "__outlet": "",
                          "hideEmpty": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "2b9036dc-3b72-4be4-a548-1f74aad08d11",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "__baseURL": "",
                    "__readOnly": null,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "hideEmpty": false,
                    "control": {
                      "path": ["item", "info_candidate"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "required": false
                  }
                },
                {
                  "id": "88549491-ee2e-4f5b-9289-194b0135b21c",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__renderContentOnDemand": false,
                    "tooltip": null,
                    "hideEmpty": false,
                    "__readOnly": null,
                    "bindingMode": false,
                    "showDisplayName": true,
                    "__isConstValues": [],
                    "control": {
                      "path": ["item", "memo_for_candidate"]
                    },
                    "__outlet": "",
                    "required": false,
                    "__baseURL": "",
                    "__relativeURL": ""
                  }
                },
                {
                  "id": "5c1e5432-eb13-4268-8a68-dede23d4dae4",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "bindingMode": false,
                    "__relativeURL": "",
                    "control": {
                      "path": ["item", "date_employment"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "required": false,
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__readOnly": null,
                    "__renderContentOnDemand": false
                  }
                },
                {
                  "id": "74ffdaa1-82e4-4593-8ec9-61dc2173db41",
                  "descriptor": "dynamic-form",
                  "values": {
                    "form": {
                      "path": ["item"]
                    },
                    "fields": {
                      "path": ["fields"]
                    },
                    "__outlet": "",
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": []
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "662f08da-59da-4112-9ae1-763785ab8bf2",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "1556d7a7-eaa5-41a2-b262-82ec3b86e64d",
                  "descriptor": "user-guide"
                }
              ]
            }
          }
        ],
        "[headerControls]": [],
        "[headerCustomization]": []
      }
    },
    "fields": [
      {
        "code": "no_middlename",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Без отчества",
          "data": {
            "additionalType": "checkbox",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "required_phone",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Обязательность телефона",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "required_email",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Обязательность почты",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "candidate_double",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "candidate_database",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "bindings": null,
          "namespace": "kedo",
          "isDependent": false,
          "linkedFieldCode": ""
        },
        "view": {
          "name": "Кандидат",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "text_error",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Текст ошибки",
          "data": {
            "additionalType": "text"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "text_warning",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Текст предупреждения",
          "data": {
            "additionalType": "text"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "staff_double",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "staff",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "bindings": null,
          "namespace": "kedo",
          "isDependent": false,
          "linkedFieldCode": ""
        },
        "view": {
          "name": "Сотрудник",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать ошибку кандидата",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_warning",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать предупреждение кандидата",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_staff",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать ошибку сотрудника",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_warning_staff",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать предупреждение сотрудника",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "phone_tel",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Телефон",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "phone_tel_staff",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Телефон",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_phone",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_phone",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_date",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_date",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_date_staff",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_date_staff",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_phone_staff",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_phone_staff",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "text_error_staff",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "text_error_staff",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "date_str",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Дата рождения",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "date_str_staff",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Дата рождения",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "error_phone_candidate",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "error_phone_candidate",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "error_phone_staff",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "error_phone_staff",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "phone_staff",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "staff",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "namespace": "kedo"
        },
        "view": {
          "name": "Сотрудник с номером",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "phone_candidate",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "candidate_database",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "namespace": "kedo"
        },
        "view": {
          "name": "Кандидат с номером",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "phone_check",
        "type": "PHONE",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "phone_check",
          "data": {
            "type": "work"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "date_check",
        "type": "DATETIME",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "date_check",
          "data": {
            "additionalType": "date",
            "defaultTimeType": "startOfDay",
            "timeOptional": false
          },
          "input": true,
          "output": true
        }
      }
    ],
    "fieldVisibilityConditions": {
      "date_str": {
        "enabled": false,
        "conditions": []
      },
      "phone_tel": {
        "enabled": false,
        "conditions": []
      },
      "date_check": {
        "enabled": false,
        "conditions": []
      },
      "text_error": {
        "enabled": false,
        "conditions": []
      },
      "view_error": {
        "enabled": false,
        "conditions": []
      },
      "phone_check": {
        "enabled": false,
        "conditions": []
      },
      "phone_staff": {
        "enabled": false,
        "conditions": []
      },
      "staff_double": {
        "enabled": false,
        "conditions": []
      },
      "text_warning": {
        "enabled": false,
        "conditions": []
      },
      "view_warning": {
        "enabled": false,
        "conditions": []
      },
      "no_middlename": {
        "enabled": false,
        "conditions": []
      },
      "date_str_staff": {
        "enabled": false,
        "conditions": []
      },
      "required_email": {
        "enabled": false,
        "conditions": []
      },
      "required_phone": {
        "enabled": false,
        "conditions": []
      },
      "phone_candidate": {
        "enabled": false,
        "conditions": []
      },
      "phone_tel_staff": {
        "enabled": false,
        "conditions": []
      },
      "view_error_date": {
        "enabled": false,
        "conditions": []
      },
      "candidate_double": {
        "enabled": false,
        "conditions": []
      },
      "text_error_staff": {
        "enabled": false,
        "conditions": []
      },
      "view_error_phone": {
        "enabled": false,
        "conditions": []
      },
      "view_error_staff": {
        "enabled": false,
        "conditions": []
      },
      "error_phone_staff": {
        "enabled": false,
        "conditions": []
      },
      "view_warning_staff": {
        "enabled": false,
        "conditions": []
      },
      "error_phone_candidate": {
        "enabled": false,
        "conditions": []
      },
      "view_error_date_staff": {
        "enabled": false,
        "conditions": []
      },
      "view_error_phone_staff": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\nlet massive_id_app: string[];\ndeclare let console: any;\ndeclare const document: any;\nasync function onInit(): Promise\u003cvoid\u003e {\n\n    //Ищем виды документов, где флаг \"Необходим для анкеты кандидата по умолчанию\" = true;\n    const type_docs = await Context.fields.table_personal_documents.fields.document_type.app.search().where((f, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.required_for_candidate.eq(true)\n    )).size(10000).all();\n    //Записываем такие документы в таблицу\n    for (let item of type_docs) {\n        const row = Context.data.table_personal_documents!.insert();\n        row.document_type = item;\n    }\n    Context.data.table_personal_documents = Context.data.table_personal_documents;\n\n    ViewContext.data.required_phone = true;\n\n    if (Context.data.phone) {\n        ViewContext.data.phone_check = Context.data.phone;\n    }\n    if (Context.data.date_of_birth) {\n        ViewContext.data.date_check = Context.data.date_of_birth;\n    }\n}\n\nasync function checkData(): Promise\u003cvoid\u003e {\n\n    let error_date_candidate: boolean = false;\n    let error_date_staff: boolean = false;\n\n    ViewContext.data.text_error = 'Найден схожий кандидат с таким же ФИО'\n    ViewContext.data.text_error_staff = 'Найден схожий сотрудник с таким же ФИО'\n\n\n    let firstname = Context.data.firstname ? Context.data.firstname : '';\n    let lastname = Context.data.lastname ? Context.data.lastname : '';\n    let middlename = Context.data.middlename ? Context.data.middlename : '';\n    Context.data.__name = lastname + ' ' + firstname + ' ' + middlename;\n\n    let candidate_double_date;\n    if (Context.data.date_of_birth) {\n        candidate_double_date = await ViewContext.fields.candidate_double.app.search()\n            .where((f, g) =\u003e g.and(\n                f.__name.eq(Context.data.__name),\n                f.__deletedAt.eq(null),\n                f.date_of_birth.eq(Context.data.date_of_birth!),\n                f.__id.neq(Context.data.__id)\n            ))\n            .first();\n    }\n    let staff_double_date;\n    if (Context.data.date_of_birth) {\n        staff_double_date = await ViewContext.fields.staff_double.app.search()\n            .where((f, g) =\u003e g.and(\n                f.__name.eq(Context.data.__name),\n                f.__deletedAt.eq(null),\n                f.date_of_birth.eq(Context.data.date_of_birth!)\n            ))\n            .first();\n    }\n    const candidate_double = await ViewContext.fields.candidate_double.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__name.eq(Context.data.__name),\n            f.__deletedAt.eq(null),\n            f.__id.neq(Context.data.__id)\n        ))\n        .first();\n    const staff_double = await ViewContext.fields.staff_double.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__name.eq(Context.data.__name),\n            f.__deletedAt.eq(null),\n        ))\n        .first();\n\n    if (candidate_double) {\n        ViewContext.data.candidate_double = candidate_double;\n        ViewContext.data.date_str = candidate_double.data.date_of_birth?.format('DD.MM.YYYY');\n        ViewContext.data.phone_tel = candidate_double.data.phone?.tel;\n\n        if (candidate_double_date) {\n            ViewContext.data.candidate_double = candidate_double_date;\n            ViewContext.data.date_str = candidate_double_date.data.date_of_birth?.format('DD.MM.YYYY');\n            ViewContext.data.phone_tel = candidate_double_date.data.phone?.tel;\n            ViewContext.data.text_error += ' и датой рождения';\n            error_date_candidate = true;\n        }\n\n        if (error_date_candidate === true) {\n            ViewContext.data.view_error = true;\n            ViewContext.data.view_warning = false;\n        } else {\n            ViewContext.data.view_warning = true;\n            ViewContext.data.view_error = false;\n        }\n    } else {\n        ViewContext.data.view_error = false;\n        ViewContext.data.view_warning = false;\n    }\n\n    if (staff_double) {\n        ViewContext.data.staff_double = staff_double;\n        ViewContext.data.date_str_staff = staff_double.data.date_of_birth?.format('DD.MM.YYYY');\n        ViewContext.data.phone_tel_staff = staff_double.data.phone?.tel;\n\n        if (staff_double_date) {\n            if (ViewContext.data.date_check \u0026\u0026 staff_double_date.data.date_of_birth \u0026\u0026 ViewContext.data.date_check.equal(staff_double_date.data.date_of_birth)) {\n            } else {\n                ViewContext.data.staff_double = staff_double_date;\n                ViewContext.data.date_str_staff = staff_double_date.data.date_of_birth?.format('DD.MM.YYYY');\n                ViewContext.data.phone_tel_staff = staff_double_date.data.phone?.tel;\n                ViewContext.data.text_error_staff += ' и датой рождения';\n                error_date_staff = true;\n            }\n        }\n\n        if (error_date_staff === true) {\n            ViewContext.data.view_error_staff = true;\n            ViewContext.data.view_warning_staff = false;\n        } else {\n            ViewContext.data.view_warning_staff = true;\n            ViewContext.data.view_error_staff = false;\n        }\n    } else {\n        ViewContext.data.view_error_staff = false;\n        ViewContext.data.view_warning_staff = false;\n    }\n\n    const buttons = document.getElementsByClassName(\"btn btn-primary\")\n    for (let button of buttons) {\n        if (button.innerHTML.indexOf(\"Сохранить\") != -1) {\n            if (ViewContext.data.view_error === true || ViewContext.data.view_error_staff === true) {\n                button.disabled = true\n            } else {\n                button.disabled = false\n            }\n        }\n    }\n}\n\nasync function changeTable(): Promise\u003cvoid\u003e {\n    const all_docs = await Context.fields.table_personal_documents.fields.document_type.app.search().where((f, g) =\u003e g.and(\n        f.__deletedAt.eq(null)\n    )).size(10000).all();\n    massive_id_app = all_docs.map(f =\u003e f.id);\n    console.log(massive_id_app)\n    Context.fields.table_personal_documents.fields.document_type.data.clearFilter();\n\n    if (Context.data.table_personal_documents \u0026\u0026 Context.data.table_personal_documents.length \u003e 0) {\n        let massive_id_table = Context.data.table_personal_documents.map(f =\u003e f.document_type.id);\n        console.log(massive_id_table)\n        let filtred_massive = massive_id_app.filter((item) =\u003e (massive_id_table.indexOf(item) == -1))\n\n        Context.fields.table_personal_documents.fields.document_type.data.setFilter(f =\u003e f.__id.in(filtred_massive))\n\n    }\n}\n\nasync function changePosition(): Promise\u003cvoid\u003e {\n    if (Context.data.planned_position) {\n        const position = await Context.data.planned_position.fetch();\n        const division = await position.data.subdivision!.fetch();\n        if (division.data.custom_html_card) {\n            Context.data.info_candidate = division.data.custom_html_card\n        }\n    }\n}\n\nasync function changeNotification(): Promise\u003cvoid\u003e {\n    if (Context.data.notification) {\n        if (Context.data.notification.code == Context.fields.notification.variants.email.code) {\n            ViewContext.data.required_email = true;\n            ViewContext.data.required_phone = false;\n        }\n        if (Context.data.notification.code == Context.fields.notification.variants.sms.code) {\n            ViewContext.data.required_email = false;\n            ViewContext.data.required_phone = true;\n        }\n    }\n}\n\n//Проверяем совпадения по номеру телефона с базой кандидатов и сотрудников\nasync function setPhone(): Promise\u003cvoid\u003e {\n    if (Context.data.phone) {\n        const phone_double = await ViewContext.fields.candidate_double.app.search()\n            .where((f, g) =\u003e g.and(\n                f.__deletedAt.eq(null),\n                f.phone.eq(Context.data.phone!),\n                f.__id.neq(Context.data.__id)\n            ))\n            .first();\n\n        let phone_double_staff: any;\n        if (ViewContext.data.phone_check) {\n            phone_double_staff = await ViewContext.fields.staff_double.app.search()\n                .where((f, g) =\u003e g.and(\n                    f.__deletedAt.eq(null),\n                    f.phone.eq(Context.data.phone!),\n                    f.phone.neq(ViewContext.data.phone_check!)\n                ))\n                .first();\n        } else {\n            phone_double_staff = await ViewContext.fields.staff_double.app.search()\n                .where((f, g) =\u003e g.and(\n                    f.__deletedAt.eq(null),\n                    f.phone.eq(Context.data.phone!)\n                ))\n                .first();\n        }\n\n        if (phone_double) {\n            ViewContext.data.error_phone_candidate = true;\n            ViewContext.data.phone_candidate = phone_double;\n\n        } else {\n            ViewContext.data.error_phone_candidate = false;\n        }\n\n        if (phone_double_staff) {\n            ViewContext.data.error_phone_staff = true;\n            ViewContext.data.phone_staff = phone_double_staff;\n\n        } else {\n            ViewContext.data.error_phone_staff = false;\n        }\n    } else {\n        ViewContext.data.error_phone_candidate = false;\n        ViewContext.data.error_phone_staff = false;\n    }\n\n    const buttons = document.getElementsByClassName(\"btn btn-primary\")\n    for (let button of buttons) {\n        if (button.innerHTML.indexOf(\"Сохранить\") != -1) {\n            if (ViewContext.data.error_phone_candidate === true || ViewContext.data.error_phone_staff === true) {\n                button.disabled = true\n            } else {\n                button.disabled = false\n            }\n        }\n    }\n}\n",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "widgetZones": [
      {
        "code": "[footer]"
      }
    ],
    "dataFieldCode": "item"
  },
  "dataNamespace": "kedo",
  "dataCode": "candidate_database",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        let massive_id_app;\n        async function onInit() {\n            const type_docs = await Context.fields.table_personal_documents.fields.document_type.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.required_for_candidate.eq(true))).size(10000).all();\n            for (let item of type_docs) {\n                const row = Context.data.table_personal_documents.insert();\n                row.document_type = item;\n            }\n            Context.data.table_personal_documents = Context.data.table_personal_documents;\n            ViewContext.data.required_phone = true;\n            if (Context.data.phone) {\n                ViewContext.data.phone_check = Context.data.phone;\n            }\n            if (Context.data.date_of_birth) {\n                ViewContext.data.date_check = Context.data.date_of_birth;\n            }\n        }\n        async function checkData() {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            let error_date_candidate = false;\n            let error_date_staff = false;\n            ViewContext.data.text_error = 'Найден схожий кандидат с таким же ФИО';\n            ViewContext.data.text_error_staff = 'Найден схожий сотрудник с таким же ФИО';\n            let firstname = Context.data.firstname ? Context.data.firstname : '';\n            let lastname = Context.data.lastname ? Context.data.lastname : '';\n            let middlename = Context.data.middlename ? Context.data.middlename : '';\n            Context.data.__name = lastname + ' ' + firstname + ' ' + middlename;\n            let candidate_double_date;\n            if (Context.data.date_of_birth) {\n                candidate_double_date = await ViewContext.fields.candidate_double.app.search()\n                    .where((f, g) =\u003e g.and(f.__name.eq(Context.data.__name), f.__deletedAt.eq(null), f.date_of_birth.eq(Context.data.date_of_birth), f.__id.neq(Context.data.__id)))\n                    .first();\n            }\n            let staff_double_date;\n            if (Context.data.date_of_birth) {\n                staff_double_date = await ViewContext.fields.staff_double.app.search()\n                    .where((f, g) =\u003e g.and(f.__name.eq(Context.data.__name), f.__deletedAt.eq(null), f.date_of_birth.eq(Context.data.date_of_birth)))\n                    .first();\n            }\n            const candidate_double = await ViewContext.fields.candidate_double.app.search()\n                .where((f, g) =\u003e g.and(f.__name.eq(Context.data.__name), f.__deletedAt.eq(null), f.__id.neq(Context.data.__id)))\n                .first();\n            const staff_double = await ViewContext.fields.staff_double.app.search()\n                .where((f, g) =\u003e g.and(f.__name.eq(Context.data.__name), f.__deletedAt.eq(null)))\n                .first();\n            if (candidate_double) {\n                ViewContext.data.candidate_double = candidate_double;\n                ViewContext.data.date_str = (_a = candidate_double.data.date_of_birth) === null || _a === void 0 ? void 0 : _a.format('DD.MM.YYYY');\n                ViewContext.data.phone_tel = (_b = candidate_double.data.phone) === null || _b === void 0 ? void 0 : _b.tel;\n                if (candidate_double_date) {\n                    ViewContext.data.candidate_double = candidate_double_date;\n                    ViewContext.data.date_str = (_c = candidate_double_date.data.date_of_birth) === null || _c === void 0 ? void 0 : _c.format('DD.MM.YYYY');\n                    ViewContext.data.phone_tel = (_d = candidate_double_date.data.phone) === null || _d === void 0 ? void 0 : _d.tel;\n                    ViewContext.data.text_error += ' и датой рождения';\n                    error_date_candidate = true;\n                }\n                if (error_date_candidate === true) {\n                    ViewContext.data.view_error = true;\n                    ViewContext.data.view_warning = false;\n                }\n                else {\n                    ViewContext.data.view_warning = true;\n                    ViewContext.data.view_error = false;\n                }\n            }\n            else {\n                ViewContext.data.view_error = false;\n                ViewContext.data.view_warning = false;\n            }\n            if (staff_double) {\n                ViewContext.data.staff_double = staff_double;\n                ViewContext.data.date_str_staff = (_e = staff_double.data.date_of_birth) === null || _e === void 0 ? void 0 : _e.format('DD.MM.YYYY');\n                ViewContext.data.phone_tel_staff = (_f = staff_double.data.phone) === null || _f === void 0 ? void 0 : _f.tel;\n                if (staff_double_date) {\n                    if (ViewContext.data.date_check \u0026\u0026 staff_double_date.data.date_of_birth \u0026\u0026 ViewContext.data.date_check.equal(staff_double_date.data.date_of_birth)) {\n                    }\n                    else {\n                        ViewContext.data.staff_double = staff_double_date;\n                        ViewContext.data.date_str_staff = (_g = staff_double_date.data.date_of_birth) === null || _g === void 0 ? void 0 : _g.format('DD.MM.YYYY');\n                        ViewContext.data.phone_tel_staff = (_h = staff_double_date.data.phone) === null || _h === void 0 ? void 0 : _h.tel;\n                        ViewContext.data.text_error_staff += ' и датой рождения';\n                        error_date_staff = true;\n                    }\n                }\n                if (error_date_staff === true) {\n                    ViewContext.data.view_error_staff = true;\n                    ViewContext.data.view_warning_staff = false;\n                }\n                else {\n                    ViewContext.data.view_warning_staff = true;\n                    ViewContext.data.view_error_staff = false;\n                }\n            }\n            else {\n                ViewContext.data.view_error_staff = false;\n                ViewContext.data.view_warning_staff = false;\n            }\n            const buttons = document.getElementsByClassName(\"btn btn-primary\");\n            for (let button of buttons) {\n                if (button.innerHTML.indexOf(\"Сохранить\") != -1) {\n                    if (ViewContext.data.view_error === true || ViewContext.data.view_error_staff === true) {\n                        button.disabled = true;\n                    }\n                    else {\n                        button.disabled = false;\n                    }\n                }\n            }\n        }\n        async function changeTable() {\n            const all_docs = await Context.fields.table_personal_documents.fields.document_type.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null))).size(10000).all();\n            massive_id_app = all_docs.map(f =\u003e f.id);\n            console.log(massive_id_app);\n            Context.fields.table_personal_documents.fields.document_type.data.clearFilter();\n            if (Context.data.table_personal_documents \u0026\u0026 Context.data.table_personal_documents.length \u003e 0) {\n                let massive_id_table = Context.data.table_personal_documents.map(f =\u003e f.document_type.id);\n                console.log(massive_id_table);\n                let filtred_massive = massive_id_app.filter((item) =\u003e (massive_id_table.indexOf(item) == -1));\n                Context.fields.table_personal_documents.fields.document_type.data.setFilter(f =\u003e f.__id.in(filtred_massive));\n            }\n        }\n        async function changePosition() {\n            if (Context.data.planned_position) {\n                const position = await Context.data.planned_position.fetch();\n                const division = await position.data.subdivision.fetch();\n                if (division.data.custom_html_card) {\n                    Context.data.info_candidate = division.data.custom_html_card;\n                }\n            }\n        }\n        async function changeNotification() {\n            if (Context.data.notification) {\n                if (Context.data.notification.code == Context.fields.notification.variants.email.code) {\n                    ViewContext.data.required_email = true;\n                    ViewContext.data.required_phone = false;\n                }\n                if (Context.data.notification.code == Context.fields.notification.variants.sms.code) {\n                    ViewContext.data.required_email = false;\n                    ViewContext.data.required_phone = true;\n                }\n            }\n        }\n        async function setPhone() {\n            if (Context.data.phone) {\n                const phone_double = await ViewContext.fields.candidate_double.app.search()\n                    .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.phone.eq(Context.data.phone), f.__id.neq(Context.data.__id)))\n                    .first();\n                let phone_double_staff;\n                if (ViewContext.data.phone_check) {\n                    phone_double_staff = await ViewContext.fields.staff_double.app.search()\n                        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.phone.eq(Context.data.phone), f.phone.neq(ViewContext.data.phone_check)))\n                        .first();\n                }\n                else {\n                    phone_double_staff = await ViewContext.fields.staff_double.app.search()\n                        .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.phone.eq(Context.data.phone)))\n                        .first();\n                }\n                if (phone_double) {\n                    ViewContext.data.error_phone_candidate = true;\n                    ViewContext.data.phone_candidate = phone_double;\n                }\n                else {\n                    ViewContext.data.error_phone_candidate = false;\n                }\n                if (phone_double_staff) {\n                    ViewContext.data.error_phone_staff = true;\n                    ViewContext.data.phone_staff = phone_double_staff;\n                }\n                else {\n                    ViewContext.data.error_phone_staff = false;\n                }\n            }\n            else {\n                ViewContext.data.error_phone_candidate = false;\n                ViewContext.data.error_phone_staff = false;\n            }\n            const buttons = document.getElementsByClassName(\"btn btn-primary\");\n            for (let button of buttons) {\n                if (button.innerHTML.indexOf(\"Сохранить\") != -1) {\n                    if (ViewContext.data.error_phone_candidate === true || ViewContext.data.error_phone_staff === true) {\n                        button.disabled = true;\n                    }\n                    else {\n                        button.disabled = false;\n                    }\n                }\n            }\n        }\n        return {\n            onInit,\n            checkData,\n            changeTable,\n            changePosition,\n            changeNotification,\n            setPhone\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkData",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeTable",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changePosition",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeNotification",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "setPhone",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [
        {
          "namespace": "kedo",
          "code": "candidate_database"
        },
        {
          "namespace": "kedo",
          "code": "staff"
        },
        {
          "namespace": "kedo",
          "code": "position"
        }
      ],
      "pages": []
    }
  },
  "__createdAt": "2024-04-24T13:43:02.488397113Z",
  "__createdBy": "e6fbb566-3df2-420e-a7f3-03b97d2ac599",
  "__updatedAt": "2024-05-08T10:31:59.84599413Z",
  "__updatedBy": "e6fbb566-3df2-420e-a7f3-03b97d2ac599",
  "__deletedAt": null
}
