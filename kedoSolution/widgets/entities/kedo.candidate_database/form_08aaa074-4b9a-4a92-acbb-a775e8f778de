{
  "__id": "018f0a74-f8af-7649-a2d5-e2fed0ee2310",
  "namespace": "kedo.candidate_database",
  "code": "form_08aaa074-4b9a-4a92-acbb-a775e8f778de",
  "__name": "Ознакомиться с решением кандидата",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 1,
  "hidden": true,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "24bb7d7f-bdc6-456b-b954-c65d416e2237",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "formType": "task-form",
        "formGroup": {
          "path": ["context"]
        },
        "systemFunctions": {}
      },
      "content": {
        "[headerControls]": [
          {
            "id": "475aa008-aaff-402f-8de2-408bae1f1928",
            "descriptor": "task-percent-widget",
            "values": {
              "task": {
                "path": ["task"]
              }
            }
          },
          {
            "id": "702d9c59-77ae-4dd5-b71a-a5fe7b58858f",
            "descriptor": "extension-zone-toolbar-widget",
            "values": {
              "item": {
                "path": ["__itemRef"]
              }
            }
          },
          {
            "id": "f7b11c79-4267-4f5b-a002-dd629d549682",
            "descriptor": "process-item-map",
            "values": {
              "skipRulesCheck": true,
              "task": {
                "path": ["task"]
              }
            }
          },
          {
            "id": "ff2500ee-6573-49cd-a9e8-2d5c93350f26",
            "descriptor": "button",
            "values": {
              "icon": "menu_vertical",
              "view": "icon",
              "label": "bpm.tasks.item@menu",
              "action": {
                "path": ["menuAction"]
              },
              "runProcessSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              },
              "createAppItemSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              }
            }
          }
        ],
        "[headerCustomization]": [],
        "[footer]": [
          {
            "id": "31979bac-00bd-4123-a901-9d14190c8dde",
            "descriptor": "buttons-panel",
            "values": {
              "buttons": {
                "path": ["actionButtons"]
              }
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "2d68dee4-0ad0-4376-b5ac-7f50ed9b7bbe",
                  "descriptor": "elma-info-block",
                  "values": {
                    "text": "Кандидат подтвердил предложение о работе. Заполните поля для продолжения трудоустройства кандидата.",
                    "__outlet": "",
                    "typeEnum": [
                      {
                        "code": "info",
                        "name": "shared.common.elma-info-block@widget-type-info"
                      }
                    ],
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": []
                  }
                },
                {
                  "id": "dcdd3e4e-0c49-483b-87c2-8c782a8890f0",
                  "descriptor": "dynamic-form",
                  "values": {
                    "form": {
                      "path": ["context"]
                    },
                    "fields": {
                      "path": ["fields"]
                    }
                  }
                },
                {
                  "id": "caa6028d-b8e5-472f-85d8-c35834321d16",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["context", "responsible_reception"]
                    },
                    "tooltip": "В случае, заранее известен сотрудник, ответственный за прием, выберите его из списка",
                    "__isConstValues": [],
                    "hideEmpty": false,
                    "__readOnly": null,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__hidden": {
                      "path": [
                        "context",
                        "select_person_responsible_employment"
                      ],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "required": {
                      "path": [
                        "context",
                        "select_person_responsible_employment"
                      ]
                    },
                    "__baseURL": "",
                    "showDisplayName": true,
                    "__renderContentOnDemand": false
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "39d7757a-529f-4526-98f3-fddc66becf85",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "abe4b782-6e2d-49cc-a57e-81b636422ee5",
                  "descriptor": "target-widget",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "231b371a-64ae-4b61-8014-cba6da318ac9",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "5e39b91d-aea4-467e-862f-0f8766eb44df",
                  "descriptor": "linked-item",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "a4469de0-d7f3-11ec-9d64-0242ac120002",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "3ead7c41-6dfa-4144-80da-2bfb5f0ccf59",
                  "descriptor": "item-reminder",
                  "values": {
                    "task": {
                      "path": ["task"]
                    },
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "56d1d0e8-aa83-4cdd-ae43-294b26ad4d04",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e1525e34-14ba-456b-b703-f407945c01e0",
                  "descriptor": "item-tasks",
                  "descriptorVersion": 4,
                  "values": {
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "eef018f2-1d3a-4600-a19d-791733b28b5e",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e0a17dec-603a-461a-becf-861637630584",
                  "descriptor": "messages-target",
                  "values": {
                    "target": {
                      "path": ["target"]
                    }
                  }
                }
              ]
            }
          }
        ],
        "[formInfoPanel]": [
          {
            "id": "9cdedc24-c798-419a-9b54-4c1a7df800a8",
            "descriptor": "validation-info-block",
            "values": {
              "__validateResult": {
                "path": ["context", "__validateResult"]
              }
            }
          }
        ]
      }
    },
    "fieldVisibilityConditions": {},
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\nasync function onInit(): Promise\u003cvoid\u003e {\n    Context.data.responsible_reception_staff = await Context.fields.responsible_reception_staff.app.search().where((f,g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(Context.data.__createdBy))).first();\n    const entity = await Context.data.organization!.fetch();\n    if (entity.data.hr_department) {\n        const hr_ids = entity.data.hr_department.map(f=\u003ef.id)\n        Context.fields.responsible_reception_staff.data.setFilter((appFields, context, globalFilters) =\u003e globalFilters.and(\n            appFields.__id.in(hr_ids)\n        ));\n    }\n    \n\n}",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "dataFieldCode": "context"
  },
  "dataNamespace": "kedo.candidate_database",
  "dataCode": "_process_working_with_candidate",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            Context.data.responsible_reception_staff = await Context.fields.responsible_reception_staff.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(Context.data.__createdBy))).first();\n            const entity = await Context.data.organization.fetch();\n            if (entity.data.hr_department) {\n                const hr_ids = entity.data.hr_department.map(f =\u003e f.id);\n                Context.fields.responsible_reception_staff.data.setFilter((appFields, context, globalFilters) =\u003e globalFilters.and(appFields.__id.in(hr_ids)));\n            }\n        }\n        return {\n            onInit\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      }
    ]
  },
  "__createdAt": "2024-04-23T10:16:29.101762843Z",
  "__createdBy": "099fd2a1-8125-406b-aaff-0db06d81aa40",
  "__updatedAt": "2024-04-23T10:16:29.101762843Z",
  "__updatedBy": "099fd2a1-8125-406b-aaff-0db06d81aa40",
  "__deletedAt": null
}
