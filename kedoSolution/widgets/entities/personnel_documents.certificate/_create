{"__id":"018e89f9-49b5-7ea6-b933-f0491b353768","namespace":"personnel_documents.certificate","code":"_create","__name":"Форма создания","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":2,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"6d019ff7-5805-4c4d-bcdb-063a77ecfb97","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["item"]},"systemFunctions":{"validate":{"kind":"Function","name":"validationFunction","type":"client"}},"sidebarAvailable":true,"__renderContentAsync":false},"content":{"[footer]":[{"id":"d65ae78b-f967-4120-a34c-3513694bf0b5","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}],"[content]":[{"id":"7d7bd35a-d521-4c08-9d55-d7c3a74932cc","descriptor":"modal-body","content":{"":[{"id":"452b1f86-b7dd-471c-8511-b913d6a160f3","descriptor":"elma-info-block","values":{"__hidden":{"path":["show_error"],"modifier":"not"},"typeEnum":[{"code":"danger","name":"Ошибка (красный)"}],"__isConstValues":[],"__renderContentAsync":false,"text":{"path":["error_message"]}},"content":{"":[]}},{"id":"deb8d658-2f7e-4062-a4b4-c2e76ccbea72","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"hideEmpty":false,"__readOnly":true,"bindingMode":false,"showCreateItem":false,"showDisplayName":true,"control":{"path":["item","staff"]},"tooltip":null,"required":false}},{"id":"71373671-5f56-4d9f-9453-bf3fa0fdf153","descriptor":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@staff_position_list_widget","descriptorVersion":1,"values":{"__styles":"width: 100%","__baseURL":"","show_type":[{"code":"simple","name":"Простое"}],"__relativeURL":"","__isConstValues":[],"employment_placement":{"path":["item","employment_place"]},"staff":{"path":["item","staff"]},"__outlet":""}},{"id":"e1555749-67a3-4586-bfba-2334e068f0db","descriptor":"dynamic-form-row","values":{"control":{"path":["item","certificate_type"]},"showCreateItem":false,"tooltip":null,"required":true,"hideEmpty":false,"__readOnly":false,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"onChangeType","type":"client"},"__isConstValues":[],"showDisplayName":true}},{"id":"03168101-5d9f-4515-bdfd-0ce5d53859ce","descriptor":"dynamic-form-row","values":{"tooltip":null,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":{},"type":"client"},"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","method_providing_certificate"]},"required":true,"hideEmpty":false}},{"id":"ed3fa953-c01f-4a38-abef-155266c3da86","descriptor":"dynamic-form-row","values":{"control":{"path":["item","requested_issuance_date"]},"required":true,"hideEmpty":false,"__readOnly":false,"bindingMode":false,"displayName":"Желаемая дата выдачи","__isConstValues":[],"tooltip":"К какому крайнему сроку требуется выдать справку","onChangeValue":{"kind":"Function","name":"checkDate","type":"client"},"showDisplayName":true}},{"id":"5f207fae-b2a4-4b7a-8096-b395138c878c","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"__isConstValues":[],"control":{"path":["item","date_from"]},"required":{"path":["show_dates"]},"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"checkDate","type":"client"},"showDisplayName":true,"tooltip":null,"__hidden":{"path":["show_dates"],"modifier":"not"}}},{"id":"97ac53ac-bd36-4fdb-8bce-1ee9caaa29ff","descriptor":"dynamic-form-row","values":{"control":{"path":["item","date_to"]},"hideEmpty":false,"showDisplayName":true,"tooltip":null,"__hidden":{"path":["show_dates"],"modifier":"not"},"required":{"path":["show_dates"]},"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"check_date_to","type":"client"},"__isConstValues":[]}},{"id":"ebe6f2af-a92d-4100-8efb-a3502b69eead","descriptor":"dynamic-form-row","values":{"control":{"path":["item","requester_comment"]},"tooltip":null,"required":false,"__readOnly":false,"bindingMode":false,"showDisplayName":true}},{"id":"0d101f8a-f0b8-4c99-8f58-8178dc736e6d","descriptor":"dynamic-form-row","values":{"control":{"path":["required_files"]},"__hidden":{"path":["are_files_required"],"modifier":"not"},"bindingMode":false,"showDisplayName":true,"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":true,"displayName":"Список требуемых файлов","__isConstValues":[]}},{"id":"5c11696f-a665-4481-984b-a80a27b9b2e5","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"__readOnly":null,"bindingMode":false,"displayName":"Файлы","required":{"path":["are_files_required"]},"tooltip":null,"__hidden":{"path":["are_files_required"],"modifier":"not"},"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","supplementary_files"]}}}]}}],"[sidebar]":[{"id":"d66aba74-334f-4f04-b5d9-b0dc06e96ac0","descriptor":"sidebar-widget","values":{"title":"Инструкция","__renderContentAsync":false},"content":{"":[{"id":"25338d9a-6aff-4416-ac5d-e60964b05414","descriptor":"html","descriptorVersion":3,"values":{"html":"\u003cp\u003eВнимательно заполните данные для получения справки.  \u003cbr/\u003e\u003cbr/\u003eОтдел кадров подготовит для вас необходимую справку, после чего Вам придет задача на ознакомление, откуда Вы сможете скачать нужный документ.\u003c/p\u003e"}}]}},{"id":"b8e51b0f-99fa-4c7d-a757-1cccf3b21c88","descriptor":"sidebar-widget","content":{"":[{"id":"1e00d3ec-0b52-4912-98da-3c146f7d0c8f","descriptor":"document-reserve-widget","values":{"application":{"path":["application"]}}}]}}],"[headerControls]":[],"[headerCustomization]":[]}},"fields":[{"code":"required_files","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":"","calcByFormula":false,"formula":"","data":{},"view":{"name":"Требуемые файлы","data":{"additionalType":"text"}}},{"code":"are_files_required","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Файлы требуются","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"show_error","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"show_error","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"show_dates","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"show_dates","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"show_error_dates_from","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"show_error_dates_from","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"error_message","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Текст ошибки","data":{"additionalType":"string"}}}],"fieldVisibilityConditions":{"show_dates":{"enabled":false,"conditions":[]},"show_error":{"enabled":false,"conditions":[]},"error_message":{"enabled":false,"conditions":[]},"tekst_oshibki":{"enabled":false,"conditions":[]},"required_files":{"enabled":false,"conditions":[]},"are_files_required":{"enabled":false,"conditions":[]},"show_error_dates_from":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"\n//Ищем текущего сотрудника и ставим фильтр на желаемую дату выдачи\nasync function onInit(): Promise\u003cvoid\u003e {\n    let user = await System.users.getCurrentUser();\n    Context.data.staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.ext_user.eq(user)\n    )).first();\n    if (!Context.data.staff) {\n        throw new Error('Отсутствует карточка сотрудника');\n    }\n    const now = new TDate()\n    Context.fields.requested_issuance_date.data.setFilter((f, g) =\u003e f.gte(now));\n}\n\n//Скрипт на изменение вида справки\nasync function onChangeType(): Promise\u003cvoid\u003e {\n    const certificate_type = await Context.data.certificate_type!.fetch();\n    if (certificate_type.data.form_is_required === true) {\n        ViewContext.data.are_files_required = true;\n        ViewContext.data.required_files = certificate_type.data.list_of_required_documents;\n    } else {\n        ViewContext.data.are_files_required = false;\n        ViewContext.data.required_files = '';\n    }\n    if (certificate_type.data.period_is_required === true) {\n        ViewContext.data.show_dates = true;\n    } else {\n        ViewContext.data.show_dates = false;\n    }\n}\n\n//Проверка дат\nasync function checkDate(): Promise\u003cvoid\u003e {\n    await check_date_to();\n\n    const certificate_type = await Context.data.certificate_type!.fetch();\n    if (certificate_type \u0026\u0026 certificate_type.data.__name == '2-НДФЛ') {\n        if (Context.data.date_from) {\n            Context.fields.date_to.data.setFilter((f, g) =\u003e g.and(f.lte(new TDate((Context.data.date_from!.year), 12, 31)),f.gte(new TDate((Context.data.date_from!.year), 1,1).addDate(0,0,-1))))\n            if(Context.data.date_to){\n                Context.data.date_to = undefined;\n            }\n        }\n    }\n    else {\n        Context.fields.date_from.data.clearFilter();\n        Context.fields.date_to.data.clearFilter();\n    }\n\n}\n\n//Валидация формы\nasync function validationFunction(): Promise\u003cValidationResult\u003e {\n    const result = new ValidationResult();\n    if (ViewContext.data.show_error_dates_from === true) {\n        result.addContextError('date_to', `Дата окончания периода не может быть раньше даты начала периода`);\n    }\n    return result\n}\n\n//Проверка даты окончания\nasync function check_date_to(): Promise\u003cvoid\u003e {\n    let check_date_to = 0;\n\n    if (Context.data.date_from \u0026\u0026 Context.data.date_to \u0026\u0026 Context.data.date_to.before(Context.data.date_from)) {\n        check_date_to++;\n        ViewContext.data.error_message += 'Дата окончания периода не может быть раньше даты начала периода';\n    }\n    ViewContext.data.show_error_dates_from = check_date_to \u003e 0 ? true : false;\n\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"personnel_documents","dataCode":"certificate","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            let user = await System.users.getCurrentUser();\n            Context.data.staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(user))).first();\n            if (!Context.data.staff) {\n                throw new Error('Отсутствует карточка сотрудника');\n            }\n            const now = new TDate();\n            Context.fields.requested_issuance_date.data.setFilter((f, g) =\u003e f.gte(now));\n        }\n        async function onChangeType() {\n            const certificate_type = await Context.data.certificate_type.fetch();\n            if (certificate_type.data.form_is_required === true) {\n                ViewContext.data.are_files_required = true;\n                ViewContext.data.required_files = certificate_type.data.list_of_required_documents;\n            }\n            else {\n                ViewContext.data.are_files_required = false;\n                ViewContext.data.required_files = '';\n            }\n            if (certificate_type.data.period_is_required === true) {\n                ViewContext.data.show_dates = true;\n            }\n            else {\n                ViewContext.data.show_dates = false;\n            }\n        }\n        async function checkDate() {\n            await check_date_to();\n            const certificate_type = await Context.data.certificate_type.fetch();\n            if (certificate_type \u0026\u0026 certificate_type.data.__name == '2-НДФЛ') {\n                if (Context.data.date_from) {\n                    Context.fields.date_to.data.setFilter((f, g) =\u003e g.and(f.lte(new TDate((Context.data.date_from.year), 12, 31)), f.gte(new TDate((Context.data.date_from.year), 1, 1).addDate(0, 0, -1))));\n                    if (Context.data.date_to) {\n                        Context.data.date_to = undefined;\n                    }\n                }\n            }\n            else {\n                Context.fields.date_from.data.clearFilter();\n                Context.fields.date_to.data.clearFilter();\n            }\n        }\n        async function validationFunction() {\n            const result = new ValidationResult();\n            if (ViewContext.data.show_error_dates_from === true) {\n                result.addContextError('date_to', `Дата окончания периода не может быть раньше даты начала периода`);\n            }\n            return result;\n        }\n        async function check_date_to() {\n            let check_date_to = 0;\n            if (Context.data.date_from \u0026\u0026 Context.data.date_to \u0026\u0026 Context.data.date_to.before(Context.data.date_from)) {\n                check_date_to++;\n                ViewContext.data.error_message += 'Дата окончания периода не может быть раньше даты начала периода';\n            }\n            ViewContext.data.show_error_dates_from = check_date_to \u003e 0 ? true : false;\n        }\n        return {\n            onInit,\n            onChangeType,\n            checkDate,\n            validationFunction,\n            check_date_to\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"onChangeType","parameters":[],"type":"[object Object]"},{"name":"checkDate","parameters":[],"type":"[object Object]"},{"name":"validationFunction","parameters":[],"type":"[object Object]"},{"name":"check_date_to","parameters":[],"type":"[object Object]"}],"clientDependencies":{"applications":[],"collections":[{"namespace":"kedo","code":"staff"}],"pages":[]}},"__createdAt":"2024-03-29T11:29:59.730493098Z","__createdBy":"d78f4b2f-13a2-4903-aeeb-fdb72d5b9d0c","__updatedAt":"2024-04-16T11:09:05.607003364Z","__updatedBy":"54584d91-0741-4200-a803-b00376614edb","__deletedAt":null}
