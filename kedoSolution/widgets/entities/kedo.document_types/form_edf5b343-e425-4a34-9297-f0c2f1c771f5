{
  "__id": "018e83e8-2de6-7d6e-b7ec-9513459e9b26",
  "namespace": "kedo.document_types",
  "code": "form_edf5b343-e425-4a34-9297-f0c2f1c771f5",
  "__name": "Определение видов неизвестных печатных форм",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 1,
  "hidden": true,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "b4f8a378-4ff3-45cd-bf8c-fdb8da92c373",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "__isConstValues": [],
        "sidebarAvailable": false,
        "__renderContentAsync": false,
        "formType": "task-form",
        "formGroup": {
          "path": ["context"]
        },
        "__relativeURL": "",
        "systemFunctions": {
          "validate": {
            "kind": "Function",
            "name": "validation",
            "type": "client"
          }
        },
        "__outlet": "",
        "__baseURL": ""
      },
      "content": {
        "[headerControls]": [
          {
            "id": "475aa008-aaff-402f-8de2-408bae1f1928",
            "descriptor": "task-percent-widget",
            "values": {
              "task": {
                "path": ["task"]
              }
            }
          },
          {
            "id": "702d9c59-77ae-4dd5-b71a-a5fe7b58858f",
            "descriptor": "extension-zone-toolbar-widget",
            "values": {
              "item": {
                "path": ["__itemRef"]
              }
            }
          },
          {
            "id": "f7b11c79-4267-4f5b-a002-dd629d549682",
            "descriptor": "process-item-map",
            "values": {
              "task": {
                "path": ["task"]
              },
              "skipRulesCheck": true
            }
          },
          {
            "id": "ff2500ee-6573-49cd-a9e8-2d5c93350f26",
            "descriptor": "button",
            "values": {
              "view": "icon",
              "label": "bpm.tasks.item@menu",
              "action": {
                "path": ["menuAction"]
              },
              "runProcessSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              },
              "createAppItemSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              },
              "icon": "menu_vertical"
            }
          }
        ],
        "[headerCustomization]": [],
        "[footer]": [
          {
            "id": "31979bac-00bd-4123-a901-9d14190c8dde",
            "descriptor": "buttons-panel",
            "values": {
              "buttons": {
                "path": ["actionButtons"]
              }
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "0d2428f0-bc12-406b-b0a9-411e5101e9d3",
                  "descriptor": "button",
                  "values": {
                    "__styles": "",
                    "__baseURL": "",
                    "processPopoverSize": [
                      {
                        "code": "default",
                        "name": "shared.common.button@widget-process-popover-size-default",
                        "translate": true
                      }
                    ],
                    "__hidden": true,
                    "__outlet": "",
                    "__relativeURL": "",
                    "runActionEnum": [
                      {
                        "code": "undefined",
                        "name": "shared.common.button@widget-runAction-none",
                        "translate": true
                      }
                    ],
                    "runProcessSettings": {
                      "kind": "",
                      "settings": {
                        "code": "",
                        "field": "",
                        "binding": null,
                        "namespace": ""
                      }
                    },
                    "label": "update_button (hidden)",
                    "onClick": {
                      "kind": "Function",
                      "name": "updateTable",
                      "type": "client"
                    },
                    "__classes": "update-button-trigger",
                    "runInPopover": null,
                    "createAppItemSettings": {
                      "kind": "",
                      "settings": {
                        "code": "",
                        "field": "",
                        "binding": null,
                        "namespace": ""
                      }
                    },
                    "view": "default",
                    "action": null,
                    "__isConstValues": []
                  }
                },
                {
                  "id": "1e0fd460-d9f8-4246-9e5b-b5ce71ba19fa",
                  "descriptor": "row",
                  "values": {
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__outlet": "",
                    "__styles": "margin: 0; border: 1px solid #D9D9D9; background-color: #f8f8f8; display: flex; flex-wrap: nowrap;",
                    "__baseURL": "",
                    "__relativeURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "3e352efb-0e54-4ccd-8394-889bec8985e0",
                        "descriptor": "column",
                        "values": {
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__styles": "padding: 10px; border-right: 1px solid #D9D9D9;",
                          "__baseURL": "",
                          "__classes": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "0ae90a41-ed41-43c6-9f4c-8e689e95d138",
                              "descriptor": "html",
                              "descriptorVersion": 3,
                              "values": {
                                "html": "\u003cp\u003e\u003cstrong\u003eНазвание печатной формы\u003c/strong\u003e \u003cspan style=\"color: rgb(224, 62, 45);\"\u003e*\u003c/span\u003e\u003c/p\u003e"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "8843a5c0-1597-4896-a828-e2fc23999ae7",
                        "descriptor": "column",
                        "values": {
                          "__outlet": "",
                          "__styles": "padding: 10px; border-right: 1px solid #D9D9D9;",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "de2cdb27-012f-4271-9b5e-1313cfad5c49",
                              "descriptor": "html",
                              "descriptorVersion": 3,
                              "values": {
                                "html": "\u003cp\u003e\u003cstrong\u003eДокумент в ELMA\u003c/strong\u003e \u003cspan style=\"color: rgb(224, 62, 45);\"\u003e*\u003c/span\u003e\u003c/p\u003e"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "53aad7e8-6302-4f9b-addd-7e92fbe477cc",
                        "descriptor": "column",
                        "values": {
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__styles": "padding: 10px; border-right: 1px solid #D9D9D9;",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "bd176aa3-3968-4a44-9950-d5bee1147547",
                              "descriptor": "label",
                              "values": {
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "text": "Печатная форма",
                                "__outlet": "",
                                "__styles": "font-weight: bold;",
                                "__baseURL": ""
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "f7e89b53-1181-4a6e-b2c5-500b54efb669",
                        "descriptor": "column",
                        "values": {
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__styles": "padding: 10px; border-right: 1px solid #D9D9D9;",
                          "__baseURL": ""
                        },
                        "content": {
                          "": [
                            {
                              "id": "8ccfde57-e21a-452c-9b48-268ff7c3846a",
                              "descriptor": "label",
                              "values": {
                                "__outlet": "",
                                "__styles": "font-weight: bold;",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "text": "Идентификатор печатной формы"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "14c07e14-9510-41b1-875c-6e7eeb6506a7",
                        "descriptor": "column",
                        "values": {
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__styles": "padding: 10px;"
                        },
                        "content": {
                          "": [
                            {
                              "id": "3ef9a61d-b7f5-4f84-88c0-646241cc5090",
                              "descriptor": "label",
                              "values": {
                                "text": "Не учитывать печатную форму?",
                                "__outlet": "",
                                "__styles": "font-weight: bold;",
                                "__baseURL": "",
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentOnDemand": false
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "8498eb29-7083-4c1c-929c-7ff18a99866f",
                  "descriptor": "dynamic-list",
                  "values": {
                    "__styles": "width: 100%;",
                    "iterable": {
                      "path": ["context", "unknown_doc_types"]
                    },
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__outlet": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "f8142234-573c-49cc-bb2b-80f407fac168",
                        "descriptor": "kedo.document_types@print_form_row_widget",
                        "descriptorVersion": 30,
                        "values": {
                          "cache_guid": {
                            "path": ["cache_guid"]
                          },
                          "__relativeURL": "",
                          "doc_type_name": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "doc_type_name"
                            ]
                          },
                          "print_form_id": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "print_form_id"
                            ]
                          },
                          "skip_print_form": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "skip_print_form"
                            ]
                          },
                          "app_code": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "app_code"
                            ]
                          },
                          "app_name": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "app_name"
                            ]
                          },
                          "__baseURL": "",
                          "print_form": {
                            "path": [
                              "8498eb29-7083-4c1c-929c-7ff18a99866f",
                              "print_form"
                            ]
                          },
                          "__isConstValues": [],
                          "__renderContentOnDemand": false,
                          "__outlet": ""
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "39d7757a-529f-4526-98f3-fddc66becf85",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "abe4b782-6e2d-49cc-a57e-81b636422ee5",
                  "descriptor": "target-widget",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "231b371a-64ae-4b61-8014-cba6da318ac9",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "5e39b91d-aea4-467e-862f-0f8766eb44df",
                  "descriptor": "linked-item",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "a4469de0-d7f3-11ec-9d64-0242ac120002",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "3ead7c41-6dfa-4144-80da-2bfb5f0ccf59",
                  "descriptor": "item-reminder",
                  "values": {
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "56d1d0e8-aa83-4cdd-ae43-294b26ad4d04",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e1525e34-14ba-456b-b703-f407945c01e0",
                  "descriptor": "item-tasks",
                  "descriptorVersion": 4,
                  "values": {
                    "formGroup": {
                      "path": ["context"]
                    },
                    "itemModel": {
                      "path": ["itemModel"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "eef018f2-1d3a-4600-a19d-791733b28b5e",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e0a17dec-603a-461a-becf-861637630584",
                  "descriptor": "messages-target",
                  "values": {
                    "target": {
                      "path": ["target"]
                    }
                  }
                }
              ]
            }
          }
        ],
        "[formInfoPanel]": [
          {
            "id": "37a69ba5-cdf1-42bd-a69b-9ee7ee923c02",
            "descriptor": "validation-info-block",
            "values": {
              "__validateResult": {
                "path": ["context", "__validateResult"]
              }
            }
          }
        ]
      }
    },
    "fields": [
      {
        "code": "cache_guid",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "ID для кэша",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      }
    ],
    "fieldVisibilityConditions": {
      "cache_guid": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\n\ninterface ILineDetail {\n    docTypeName?: string,\n    appCode?: string,\n    appName?: string,\n    printFormID: string,\n    skipPrintForm: boolean,\n}\n\nasync function onInit(): Promise\u003cvoid\u003e {\n\n    /**\n     * Формируем GUID для корректного обмена данными с виджетом через кэш.\n     * Нужен чтобы не было коллизий при одновременном обмене на разных задачах.\n     */\n    ViewContext.data.cache_guid = uuidv4();\n}\n\n/** Генерация GUID */\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n        .replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : (r \u0026 0x3 | 0x8);\n            return v.toString(16);\n        });\n}\n\n/** Функция привязанная к скрытой кнопке (update_button (hidden)) на форме задачи.\n * Из виджета мы вызываем событие нажатия по кнопке на форме текущей задачи.\n */\nasync function updateTable(): Promise\u003cvoid\u003e {\n    const cache = await System.cache.getItem(`update_line_${ViewContext.data.cache_guid}`);\n\n    /**\n     * Получаем данные из виджета через кэш и заполняем таблицу.\n     * В качестве ключа для поиска используем ID печатной формы (уникален для каждой строки в рамках таблицы).\n     */\n    if (cache) {\n        const line_detail: ILineDetail = JSON.parse(cache);\n\n        const row = Context.data.unknown_doc_types?.find(f =\u003e f.print_form_id == line_detail.printFormID);\n\n        if (!row) {\n            return;\n        }\n\n        if (line_detail.appCode) row.app_code = line_detail.appCode;\n        if (line_detail.docTypeName) row.doc_type_name = line_detail.docTypeName;\n        if (line_detail.appName) row.app_name = line_detail.appName;\n        if (line_detail.skipPrintForm) row.skip_print_form = line_detail.skipPrintForm;\n    }\n}\n\nasync function validation(): Promise\u003cValidationResult\u003e {\n    const result: ValidationResult = new ValidationResult();\n\n    /**\n     * Вызываем обновление таблицы на форме только в момент нажития на кнопку перехода.\n     * Нужно чтобы избавиться от постоянных подергиваний таблицы во время редактирования её полей.\n     */\n    Context.data.unknown_doc_types = Context.data.unknown_doc_types;\n    const table = Context.data.unknown_doc_types;\n    const active_rows = table?.filter(f =\u003e f.skip_print_form == false);\n\n    if (active_rows?.some(f =\u003e !f.app_code)) {\n        result.addMessage(\"Для каждой печатной формы должен быть выбран документ ELMA\");\n    }\n\n    if (active_rows?.some(f =\u003e !f.doc_type_name)) {\n        result.addMessage(\"Для каждой печатной формы необходимо указать название\");\n    }\n\n    return result;\n}",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "dataFieldCode": "context"
  },
  "dataNamespace": "kedo.document_types",
  "dataCode": "_process_determine_unknown_type_print_forms",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            ViewContext.data.cache_guid = uuidv4();\n        }\n        function uuidv4() {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n                .replace(/[xy]/g, function (c) {\n                const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r \u0026 0x3 | 0x8);\n                return v.toString(16);\n            });\n        }\n        async function updateTable() {\n            var _a;\n            const cache = await System.cache.getItem(`update_line_${ViewContext.data.cache_guid}`);\n            if (cache) {\n                const line_detail = JSON.parse(cache);\n                const row = (_a = Context.data.unknown_doc_types) === null || _a === void 0 ? void 0 : _a.find(f =\u003e f.print_form_id == line_detail.printFormID);\n                if (!row) {\n                    return;\n                }\n                if (line_detail.appCode)\n                    row.app_code = line_detail.appCode;\n                if (line_detail.docTypeName)\n                    row.doc_type_name = line_detail.docTypeName;\n                if (line_detail.appName)\n                    row.app_name = line_detail.appName;\n                if (line_detail.skipPrintForm)\n                    row.skip_print_form = line_detail.skipPrintForm;\n            }\n        }\n        async function validation() {\n            const result = new ValidationResult();\n            Context.data.unknown_doc_types = Context.data.unknown_doc_types;\n            const table = Context.data.unknown_doc_types;\n            const active_rows = table === null || table === void 0 ? void 0 : table.filter(f =\u003e f.skip_print_form == false);\n            if (active_rows === null || active_rows === void 0 ? void 0 : active_rows.some(f =\u003e !f.app_code)) {\n                result.addMessage(\"Для каждой печатной формы должен быть выбран документ ELMA\");\n            }\n            if (active_rows === null || active_rows === void 0 ? void 0 : active_rows.some(f =\u003e !f.doc_type_name)) {\n                result.addMessage(\"Для каждой печатной формы необходимо указать название\");\n            }\n            return result;\n        }\n        return {\n            onInit,\n            uuidv4,\n            updateTable,\n            validation\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "uuidv4",
        "parameters": [],
        "type": ""
      },
      {
        "name": "updateTable",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "validation",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [],
      "pages": []
    }
  },
  "__createdAt": "2024-03-28T07:13:35.204794994Z",
  "__createdBy": "cd06151e-bd48-4554-bb3b-34ae2f4e4eb3",
  "__updatedAt": "2024-03-28T07:13:35.204794994Z",
  "__updatedBy": "cd06151e-bd48-4554-bb3b-34ae2f4e4eb3",
  "__deletedAt": null
}
