{"__id":"018c8757-f9c9-7a2a-b0b9-7fbde4e54524","namespace":"kedo.document_types","code":"form_9547e88f-e0d4-444b-9859-ceccf04d5044","__name":"Определить вид неизвестных печатных форм","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":4,"hidden":true,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"815327e4-6c5e-4d40-a97e-eca36ccd2f1c","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"systemFunctions":{"validate":{"kind":"Function","name":"validation","type":"client"}},"sidebarAvailable":false,"__renderContentAsync":false,"formType":"task-form","formGroup":{"path":["context"]},"__isConstValues":[]},"content":{"[footer]":[{"id":"31979bac-00bd-4123-a901-9d14190c8dde","descriptor":"buttons-panel","values":{"buttons":{"path":["actionButtons"]}}}],"[content]":[{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"159c1948-3dd6-4f11-9fce-6b8d38cc1381","descriptor":"kedo@custom_info","descriptorVersion":1,"values":{"__isConstValues":[],"__hidden":{"path":["show_infoblock"],"modifier":"not"},"__styles":"width: 100%;","info_type":[{"code":"info","name":"Информация"}],"info_string":"По полученным печатным формам уже были определены виды в другом процессе. Вы можете закрыть данную задачу, выполнив операцию \"Готово\"."}},{"id":"ec0db88f-c474-438c-a1d3-a2693aee5c76","descriptor":"code","values":{"html":"\u003c% if (ViewContext.data.table.length \u003e 0) { %\u003e\n\u003ctable class=\"table doc-types-table\"\u003e\n    \u003cthead\u003e\n        \u003cth\u003eПечатная форма\u003c/th\u003e\n        \u003cth\u003eID печатной формы\u003c/th\u003e\n        \u003cth\u003eНазвание печатной формы\u003c/th\u003e\n        \u003cth\u003eВид документа ELMA\u003c/th\u003e\n        \u003cth\u003e\u003c/th\u003e\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n        \u003c% for (const row of ViewContext.data.table) { %\u003e\n            \u003ctr\u003e\n                \u003ctd\u003e\u003ca href=\"\u003c%=row.printFormURL%\u003e\"\u003e\n                        \u003c%=row.fileName%\u003e\n                    \u003c/a\u003e\u003c/td\u003e\n                \u003ctd class=\"document-id\"\u003e\n                    \u003c%= row.printFormID%\u003e\n                \u003c/td\u003e\n                \u003ctd class=\"document-name\"\u003e\u003cinput/\u003e\u003c/td\u003e\n                \u003ctd class=\"document-code\"\u003e\u003c/td\u003e\n                \u003ctd class=\"select-wrapper\"\u003e\n                    \u003cbutton onclick=\"\u003c%-Scripts%\u003e.set_document_type(this)\"\u003eВыбрать вид документа\u003c/button\u003e\n                \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003c% } %\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c% } %\u003e\n\n\u003cstyle\u003e\n    .info-block {\n        background-color: green;\n        border: 1px solid black;\n        border-radius: 2%;\n    }\n\n    .select-wrapper {\n        display: flex;\n    }\n\n    .doc-types-table {\n        width: 100%;\n        border: none;\n        margin-bottom: 20px;\n    }\n    .doc-types-table thead th {\n        font-weight: bold;\n        text-align: left;\n        border: none;\n        padding: 10px 15px;\n        background: #d8d8d8;\n        border-left: 1px solid #ddd;\n        border-right: 1px solid #ddd;\n    }\n    .doc-types-table tbody td {\n        text-align: left;\n        border-left: 1px solid #ddd;\n        border-right: 1px solid #ddd;\n        padding: 10px 15px;\n        vertical-align: top;\n    }\n    .doc-types-table thead tr th:first-child, .table tbody tr td:first-child {\n        border-left: none;\n    }\n    .doc-types-table thead tr th:last-child, .table tbody tr td:last-child {\n        border-right: none;\n    }\n    .doc-types-table tbody tr:nth-child(even){\n        background: #f3f3f3;\n    }\n\u003c/style\u003e","hideContent":false,"contentPlaceholder":""}},{"id":"fbeeb3ad-6049-45c3-922e-797a7c997c6a","descriptor":"complex-popup","values":{"title":"Выбор вида документа","__hidden":false,"__styles":"","__classes":"","modalSize":[{"code":"modal-md","name":"Средний"}],"__relativeURL":"","__isConstValues":[],"onClose":{"kind":"Function","name":"close_modal","type":"client"},"visible":{"path":["show_modal"]},"__outlet":"","__baseURL":"","sidebarAvailable":false,"__renderContentAsync":false},"content":{"[popup-footer]":[{"id":"e76f5c6b-f2aa-4655-9683-02d36176a466","descriptor":"row-layout","content":{"":[{"id":"4d8abc30-1e72-408a-a6dc-ad6fa08906a3","descriptor":"button","values":{"__isConstValues":[],"action":null,"onClick":{"kind":"Function","name":"set_choice","type":"client"},"runInPopover":null,"processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"view":"primary","label":"Выбрать","runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}]}},{"id":"6c915089-2310-4823-82fa-c83456c0f18a","descriptor":"button","values":{"action":null,"runInPopover":null,"__isConstValues":[],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"view":"danger","label":"Отмена","processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"onClick":{"kind":"Function","name":"close_modal","type":"client"},"runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}]}}]}}],"[popup-header]":[],"[popup-content]":[{"id":"0c1974c2-c82d-475c-86d3-b58597c22203","descriptor":"modal-body","values":{"__isConstValues":[],"__renderContentAsync":true},"content":{"":[{"id":"df7b61c3-81e6-42bf-bb2f-e14f4e2e54e0","descriptor":"row-layout","values":{"__hidden":{"path":["show_error"],"modifier":"not"},"__isConstValues":[],"elementsAlignEnum":[{"code":"left","name":"shared.common.row-layout@widget-elements-align-left"}],"__renderContentAsync":false},"content":{"":[{"id":"d3e3f0b3-e20a-41d2-943c-8aa0b8959c75","descriptor":"label","values":{"text":"Необходимо выбрать приложение","__styles":"color: red; font-size: 14pt","__isConstValues":[]}}]}},{"id":"3c260b8d-cfe8-440b-975d-d027e8b07c7e","descriptor":"kedo.document_types@solution_structure","descriptorVersion":20,"values":{"__isConstValues":[],"selected_element":{"path":["selected_element"]}}}]}}],"[popup-sidebar]":[],"[popup-controls]":[],"[popup-upper-header]":[]}}]}}],"[sidebar]":[{"id":"39d7757a-529f-4526-98f3-fddc66becf85","descriptor":"sidebar-widget","content":{"":[{"id":"abe4b782-6e2d-49cc-a57e-81b636422ee5","descriptor":"target-widget","values":{"context":{"path":["context"]}}}]}},{"id":"231b371a-64ae-4b61-8014-cba6da318ac9","descriptor":"sidebar-widget","content":{"":[{"id":"5e39b91d-aea4-467e-862f-0f8766eb44df","descriptor":"linked-item","values":{"context":{"path":["context"]}}}]}},{"id":"a4469de0-d7f3-11ec-9d64-0242ac120002","descriptor":"sidebar-widget","content":{"":[{"id":"3ead7c41-6dfa-4144-80da-2bfb5f0ccf59","descriptor":"item-reminder","values":{"formGroup":{"path":["context"]}}}]}},{"id":"56d1d0e8-aa83-4cdd-ae43-294b26ad4d04","descriptor":"sidebar-widget","content":{"":[{"id":"e1525e34-14ba-456b-b703-f407945c01e0","descriptor":"item-tasks","descriptorVersion":4,"values":{"formGroup":{"path":["context"]},"itemModel":{"path":["itemModel"]}}}]}},{"id":"eef018f2-1d3a-4600-a19d-791733b28b5e","descriptor":"sidebar-widget","content":{"":[{"id":"e0a17dec-603a-461a-becf-861637630584","descriptor":"messages-target","values":{"target":{"path":["target"]}}}]}}],"[formInfoPanel]":[{"id":"a0b6b0c1-4f23-4c81-9cb6-3108cccaee5d","descriptor":"validation-info-block","values":{"__validateResult":{"path":["context","__validateResult"]}}}],"[headerControls]":[{"id":"475aa008-aaff-402f-8de2-408bae1f1928","descriptor":"task-percent-widget","values":{"task":{"path":["task"]}}},{"id":"702d9c59-77ae-4dd5-b71a-a5fe7b58858f","descriptor":"extension-zone-toolbar-widget","values":{"item":{"path":["__itemRef"]}}},{"id":"f7b11c79-4267-4f5b-a002-dd629d549682","descriptor":"process-item-map","values":{"task":{"path":["task"]},"skipRulesCheck":true}},{"id":"ff2500ee-6573-49cd-a9e8-2d5c93350f26","descriptor":"button","values":{"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"icon":"menu_vertical","view":"icon","label":"bpm.tasks.item@menu","action":{"path":["menuAction"]}}}],"[headerCustomization]":[]}},"fields":[{"code":"show_modal","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать модальное окно?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"selected_element","type":"JSON","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Выбранный элемент","data":{}}},{"code":"row_index","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Номер выбранной строки","data":{"additionalType":"integer","showRowSeparator":true}}},{"code":"show_error","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать ошибку?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"table","type":"JSON","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Кастомная таблица","data":{}}},{"code":"show_infoblock","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать инфоблок?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"table":{"enabled":false,"conditions":[]},"row_index":{"enabled":false,"conditions":[]},"show_error":{"enabled":false,"conditions":[]},"show_modal":{"enabled":false,"conditions":[]},"show_infoblock":{"enabled":false,"conditions":[]},"selected_element":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const document: any;\ndeclare const window: any;\ndeclare const console: any;\n\nlet selectNodeButton: any;\n\ninterface ITable {\n    printFormURL?: string,\n    fileName?: string,\n    printFormID?: string,\n    printFormName?: string,\n    documentCode?: string,\n}\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    await fill_table();\n\n    if (ViewContext.data.table \u0026\u0026 ViewContext.data.table.length == 0) {\n        ViewContext.data.show_infoblock = true;\n        return;\n    }\n\n    searchButtons();\n}\n\nfunction searchButtons(): void {\n    const buttons = document.querySelector(\".custom-buttons\");\n\n    if (!buttons) {\n        window.setTimeout(searchButtons, 500);\n        return;\n    }\n\n    selectNodeButton = buttons.querySelector(\".custom_select_node\").querySelector(\"button\");\n}\n\nfunction set_document_type(td: any): void {\n    ViewContext.data.row_index = td.parentNode.parentNode.rowIndex;\n\n    const td_app = [...document.querySelectorAll('.document-code')].find(f =\u003e f.parentNode.rowIndex == ViewContext.data.row_index!);\n\n    ViewContext.data.selected_element = undefined;\n\n    if (td_app.getAttribute(\"code\")) {\n        ViewContext.data.selected_element = {\n            name: td_app.innerHTML,\n            code: td_app.getAttribute(\"code\"),\n            namespace: td_app.getAttribute(\"namespace\"),\n        }\n    }\n\n    selectNodeButton?.click();\n\n    ViewContext.data.show_modal = true;\n}\n\nasync function close_modal(): Promise\u003cvoid\u003e {\n    ViewContext.data.selected_element = undefined;\n    ViewContext.data.show_modal = false;\n}\n\nasync function set_choice(): Promise\u003cvoid\u003e {\n    ViewContext.data.show_error = false;\n\n    if (!ViewContext.data.selected_element) {\n        ViewContext.data.show_error = true;\n    }\n\n    const td = [...document.querySelectorAll('.document-code')].find(f =\u003e f.parentNode.rowIndex == ViewContext.data.row_index!);\n    td.innerHTML = ViewContext.data.selected_element.name;\n    td.setAttribute('code', ViewContext.data.selected_element.code);\n    td.setAttribute('namespace', ViewContext.data.selected_element.namespace);\n\n    ViewContext.data.show_modal = false;\n}\n\nasync function fill_table(): Promise\u003cvoid\u003e {\n    const table = Context.data.unknown_print_forms_table!;\n\n    const customTable: ITable[] = [];\n\n    const doc_types = await Context.fields.document_types.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(1000).all();\n\n    for (const row of table) {\n        const doc_type_1c = doc_types.find(f =\u003e f.data.doc_type_id_1c == row.print_form_id);\n\n        if (doc_type_1c) {\n            continue;\n        }\n\n        const file = await row.print_form.fetch();\n\n        const customRow: ITable = {\n            printFormURL: `./(p:preview/${file.id}/readonly)`,\n            fileName: file.data.__name,\n            printFormID: row.print_form_id,\n            printFormName: \"\",\n            documentCode: \"\",\n        }\n\n        customTable.push(customRow);\n    }\n\n    ViewContext.data.table = customTable;\n}\n\nfunction validate_table(): boolean {\n    const table_data: ITable[] = ViewContext.data.table;\n\n    if (table_data.length == 0) {\n        return true;\n    }\n\n    const rows = [...document.querySelector('.doc-types-table').querySelector('tbody').querySelectorAll('tr')];\n\n    for (let i = 0; i \u003c table_data.length; i++) {\n        const row = rows[i];\n        const code = row.querySelector('.document-code').getAttribute('code');\n        const name = row.querySelector('.document-name').querySelector('input').value;\n\n        table_data[i].documentCode = code;\n        table_data[i].printFormName = name;\n    }\n\n    for (const row of table_data) {\n        if (!row.documentCode || !row.printFormName) {\n            return false;\n        }\n    }\n\n    const table = Context.data.unknown_print_forms_table!;\n\n    for (let i = 0; i \u003c table_data.length; i++) {\n        const row = table.find(f =\u003e f.print_form_id == table_data[i].printFormID)!;\n\n        row.app_code = table_data[i].documentCode!;\n        row.doc_type_name = table_data[i].printFormName!;\n    }\n\n    Context.data.unknown_print_forms_table = Context.data.unknown_print_forms_table;\n\n    return true;\n}\n\nasync function validation(): Promise\u003cValidationResult\u003e {\n    const result = new ValidationResult();\n\n    if (!validate_table()) {\n        result.addMessage('Заполните все доступные поля в таблице: введите названия вида документа и выберите его тип.');\n    }\n\n    return result;\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"dataFieldCode":"context"},"dataNamespace":"kedo.document_types","dataCode":"_process_determine_unknown_type_print_forms","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        let selectNodeButton;\n        async function onInit() {\n            await fill_table();\n            if (ViewContext.data.table \u0026\u0026 ViewContext.data.table.length == 0) {\n                ViewContext.data.show_infoblock = true;\n                return;\n            }\n            searchButtons();\n        }\n        function searchButtons() {\n            const buttons = document.querySelector(\".custom-buttons\");\n            if (!buttons) {\n                window.setTimeout(searchButtons, 500);\n                return;\n            }\n            selectNodeButton = buttons.querySelector(\".custom_select_node\").querySelector(\"button\");\n        }\n        function set_document_type(td) {\n            ViewContext.data.row_index = td.parentNode.parentNode.rowIndex;\n            const td_app = [...document.querySelectorAll('.document-code')].find(f =\u003e f.parentNode.rowIndex == ViewContext.data.row_index);\n            ViewContext.data.selected_element = undefined;\n            if (td_app.getAttribute(\"code\")) {\n                ViewContext.data.selected_element = {\n                    name: td_app.innerHTML,\n                    code: td_app.getAttribute(\"code\"),\n                    namespace: td_app.getAttribute(\"namespace\"),\n                };\n            }\n            selectNodeButton === null || selectNodeButton === void 0 ? void 0 : selectNodeButton.click();\n            ViewContext.data.show_modal = true;\n        }\n        async function close_modal() {\n            ViewContext.data.selected_element = undefined;\n            ViewContext.data.show_modal = false;\n        }\n        async function set_choice() {\n            ViewContext.data.show_error = false;\n            if (!ViewContext.data.selected_element) {\n                ViewContext.data.show_error = true;\n            }\n            const td = [...document.querySelectorAll('.document-code')].find(f =\u003e f.parentNode.rowIndex == ViewContext.data.row_index);\n            td.innerHTML = ViewContext.data.selected_element.name;\n            td.setAttribute('code', ViewContext.data.selected_element.code);\n            td.setAttribute('namespace', ViewContext.data.selected_element.namespace);\n            ViewContext.data.show_modal = false;\n        }\n        async function fill_table() {\n            const table = Context.data.unknown_print_forms_table;\n            const customTable = [];\n            const doc_types = await Context.fields.document_types.app.search().where(f =\u003e f.__deletedAt.eq(null)).size(1000).all();\n            for (const row of table) {\n                const doc_type_1c = doc_types.find(f =\u003e f.data.doc_type_id_1c == row.print_form_id);\n                if (doc_type_1c) {\n                    continue;\n                }\n                const file = await row.print_form.fetch();\n                const customRow = {\n                    printFormURL: `./(p:preview/${file.id}/readonly)`,\n                    fileName: file.data.__name,\n                    printFormID: row.print_form_id,\n                    printFormName: \"\",\n                    documentCode: \"\",\n                };\n                customTable.push(customRow);\n            }\n            ViewContext.data.table = customTable;\n        }\n        function validate_table() {\n            const table_data = ViewContext.data.table;\n            if (table_data.length == 0) {\n                return true;\n            }\n            const rows = [...document.querySelector('.doc-types-table').querySelector('tbody').querySelectorAll('tr')];\n            for (let i = 0; i \u003c table_data.length; i++) {\n                const row = rows[i];\n                const code = row.querySelector('.document-code').getAttribute('code');\n                const name = row.querySelector('.document-name').querySelector('input').value;\n                table_data[i].documentCode = code;\n                table_data[i].printFormName = name;\n            }\n            for (const row of table_data) {\n                if (!row.documentCode || !row.printFormName) {\n                    return false;\n                }\n            }\n            const table = Context.data.unknown_print_forms_table;\n            for (let i = 0; i \u003c table_data.length; i++) {\n                const row = table.find(f =\u003e f.print_form_id == table_data[i].printFormID);\n                row.app_code = table_data[i].documentCode;\n                row.doc_type_name = table_data[i].printFormName;\n            }\n            Context.data.unknown_print_forms_table = Context.data.unknown_print_forms_table;\n            return true;\n        }\n        async function validation() {\n            const result = new ValidationResult();\n            if (!validate_table()) {\n                result.addMessage('Заполните все доступные поля в таблице: введите названия вида документа и выберите его тип.');\n            }\n            return result;\n        }\n        return {\n            onInit,\n            searchButtons,\n            set_document_type,\n            close_modal,\n            set_choice,\n            fill_table,\n            validate_table,\n            validation\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"searchButtons","parameters":[],"type":"[object Object]"},{"name":"set_document_type","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":"[object Object]"},{"name":"close_modal","parameters":[],"type":"[object Object]"},{"name":"set_choice","parameters":[],"type":"[object Object]"},{"name":"fill_table","parameters":[],"type":"[object Object]"},{"name":"validate_table","parameters":[],"type":"[object Object]"},{"name":"validation","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:08:58.95079423Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:08:49.218490724Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
