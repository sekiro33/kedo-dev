{
  "__id": "018f9fc9-4ee6-74e2-8936-c7646dbdf61e",
  "namespace": "kedo.employees_personal_data",
  "code": "form_dd7b2908-30fa-43e0-b808-552c2cc78023",
  "__name": "Создать заявку на изменение персональных данных",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 21,
  "hidden": true,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "c5eb5656-67c8-4e13-b3b8-929a7d922667",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "systemFunctions": {},
        "formType": "task-form",
        "formGroup": {
          "path": ["context"]
        }
      },
      "content": {
        "[footer]": [
          {
            "id": "31979bac-00bd-4123-a901-9d14190c8dde",
            "descriptor": "buttons-panel",
            "values": {
              "buttons": {
                "path": ["actionButtons"]
              }
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "3a5c2efe-7be6-472f-8797-3e5d73f67090",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Основная информация",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__isConstValues": [],
                    "__outlet": "",
                    "expanded": true,
                    "__baseURL": "",
                    "collapsible": false,
                    "__relativeURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "0dca82b1-2535-4a2e-bcb6-29c76b184dcd",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__outlet": "",
                          "__readOnly": true,
                          "bindingMode": false,
                          "__baseURL": "",
                          "hideEmpty": false,
                          "showCreateItem": false,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["context", "staff"]
                          },
                          "tooltip": null,
                          "required": false
                        }
                      },
                      {
                        "id": "1a394c3d-6bb6-4652-81df-ce21ccfd51b8",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__baseURL": "",
                          "__readOnly": false,
                          "tooltip": "Выберите тип персональных данных, которые требуется изменить",
                          "__outlet": "",
                          "showCreateItem": false,
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "type_personal_data"]
                          },
                          "hideEmpty": false,
                          "__relativeURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkingTypePersonalData",
                            "type": "client"
                          },
                          "required": true,
                          "bindingMode": false,
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "323c540f-b427-4134-98aa-41b1ea3753ea",
                  "descriptor": "groupbox",
                  "values": {
                    "__outlet": "",
                    "expanded": true,
                    "__renderContentAsync": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "title": "Сведения о браке",
                    "__hidden": {
                      "path": ["view_form_marriage_information"],
                      "modifier": "not"
                    },
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "8312c7b3-383a-4b5b-993d-01e8966e2cd6",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "control": {
                            "path": ["context", "marriage_certificate"]
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_marriage_information"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "e0f14bf2-c6d6-413b-91de-bf360dc2bf6f",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": null,
                          "required": false,
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changePassport",
                            "type": "client"
                          },
                          "control": {
                            "path": ["context", "passport_data_changed"]
                          },
                          "__renderContentOnDemand": false,
                          "__readOnly": null,
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__outlet": ""
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "b7f0ab4c-a256-4237-987a-e1c3eec70308",
                  "descriptor": "groupbox",
                  "values": {
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__outlet": "",
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false,
                    "__renderContentOnDemand": false,
                    "title": "Паспортные данные",
                    "__hidden": {
                      "path": ["view_form_passport"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "__relativeURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "34e5fdc4-fcf1-43c6-8413-12276e150207",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "control": {
                            "path": ["update_fullname"]
                          },
                          "__renderContentOnDemand": false,
                          "__readOnly": false,
                          "__isConstValues": [],
                          "tooltip": null
                        }
                      },
                      {
                        "id": "a8c8bbe9-fa6d-4230-9272-fcd923b47bca",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__readOnly": null,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "control": {
                            "path": ["context", "staff_full_name"]
                          },
                          "tooltip": null,
                          "__hidden": {
                            "path": ["update_fullname"],
                            "modifier": "not"
                          },
                          "__outlet": ""
                        }
                      },
                      {
                        "id": "5072b4e1-5814-4862-90dc-0cf9a4728ee0",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__baseURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkSeries",
                            "type": "client"
                          },
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "staff_passport_series"]
                          },
                          "__outlet": "",
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__renderContentOnDemand": false,
                          "tooltip": null,
                          "hideEmpty": false
                        }
                      },
                      {
                        "id": "d84b8898-ddb7-4f77-85e7-35fb8eeb00d3",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": null,
                          "__baseURL": "",
                          "__isConstValues": [],
                          "__renderContentOnDemand": false,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkNumber",
                            "type": "client"
                          },
                          "control": {
                            "path": ["context", "staff_passport_number"]
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true
                        }
                      },
                      {
                        "id": "951dfecd-e4d8-4fc0-81a7-6848db3cd781",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__isConstValues": [],
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["context", "staff_passport_date"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true
                        }
                      },
                      {
                        "id": "72512ca1-6011-484d-b97a-6e3c82f8694a",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__outlet": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentOnDemand": false,
                          "tooltip": null,
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "staff_passport_issued_by"]
                          }
                        }
                      },
                      {
                        "id": "9a94a2bc-0be6-4601-9bc5-cebd77aeef9e",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "hideEmpty": false,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changePassDepCode",
                            "type": "client"
                          },
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["context", "staff_passport_code"]
                          },
                          "__baseURL": "",
                          "__readOnly": null,
                          "bindingMode": false
                        }
                      },
                      {
                        "id": "4011fff2-7b98-4f0c-b163-cb6885339a21",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__readOnly": null,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_passport"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "control": {
                            "path": ["context", "staff_passport_file"]
                          },
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "435ecd24-ae6e-494e-b0c4-09ba9352fd36",
                  "descriptor": "groupbox",
                  "values": {
                    "__hidden": {
                      "path": ["view_form_adress"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "collapsible": false,
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "title": "Фактическое место жительства",
                    "__outlet": "",
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__relativeURL": "",
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "0d6e4335-c5a6-4689-ac70-1b23347894f0",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "staff_address"]
                          },
                          "required": {
                            "path": ["view_form_adress"]
                          },
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "tooltip": null,
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "eaf4fc64-bdf2-494c-afd2-a9d42e4b98bc",
                  "descriptor": "groupbox",
                  "values": {
                    "__hidden": {
                      "path": ["view_form_phone"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "__isConstValues": [],
                    "__relativeURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "title": "Номер телефона",
                    "expanded": true,
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "b82e93ce-693e-41df-a93a-bad2e932bcc9",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": null,
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__isConstValues": [],
                          "control": {
                            "path": ["context", "staff_phone"]
                          },
                          "required": {
                            "path": ["view_form_phone"]
                          },
                          "__readOnly": null,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "45081f1d-e94b-4710-bd24-45b0bb3bd0a4",
                  "descriptor": "groupbox",
                  "values": {
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__renderContentAsync": false,
                    "title": "СНИЛС",
                    "__hidden": {
                      "path": ["view_form_snils"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "__outlet": "",
                    "__baseURL": "",
                    "collapsible": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "175fc46d-0e8b-4fad-90ff-a4b70ef80f5a",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "staff_snils"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "__readOnly": null,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkSnils",
                            "type": "client"
                          },
                          "__renderContentOnDemand": false,
                          "required": {
                            "path": ["view_form_snils"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "10fd8648-59f4-4183-b6bc-99e62d002925",
                  "descriptor": "groupbox",
                  "values": {
                    "__relativeURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "title": "Адрес регистрации",
                    "__hidden": {
                      "path": ["view_form_address_registration"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__outlet": "",
                    "collapsible": false,
                    "__isConstValues": []
                  },
                  "content": {
                    "": [
                      {
                        "id": "ff5accc4-f2a9-4f4f-898d-1ea1fda8811c",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "change_registration_address"]
                          },
                          "required": {
                            "path": ["view_form_address_registration"]
                          },
                          "__renderContentOnDemand": false,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeTypeAddress",
                            "type": "client"
                          },
                          "__isConstValues": [],
                          "tooltip": null,
                          "__outlet": ""
                        }
                      },
                      {
                        "id": "11363e18-e37c-4f9e-b5c2-7ea5a57ee58b",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__readOnly": null,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__baseURL": "",
                          "tooltip": null,
                          "__hidden": {
                            "path": ["view_label_current_registration"],
                            "modifier": "not"
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["view_label_current_registration"]
                          },
                          "hideEmpty": false,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "address_registration"]
                          },
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "4cd89b7c-0e2b-4400-a65c-89cfdf3c490d",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": [
                              "context",
                              "staff_passport_current_registration"
                            ]
                          },
                          "__baseURL": "",
                          "bindingMode": false,
                          "__isConstValues": [],
                          "hideEmpty": false,
                          "__readOnly": null,
                          "__relativeURL": "",
                          "tooltip": null,
                          "__hidden": {
                            "path": ["view_label_current_registration"],
                            "modifier": "not"
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["view_label_current_registration"]
                          }
                        }
                      },
                      {
                        "id": "15707243-d357-44fb-a47f-313ab7ad9827",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "staff_temporary_registration"]
                          },
                          "__hidden": {
                            "path": ["view_label_temporary_registration"],
                            "modifier": "not"
                          },
                          "required": {
                            "path": ["view_label_temporary_registration"]
                          },
                          "__readOnly": null,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "tooltip": null,
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__relativeURL": "",
                          "__isConstValues": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "abd3a72a-8b89-406a-adc3-bc63c37a3ba2",
                  "descriptor": "groupbox",
                  "values": {
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__relativeURL": "",
                    "collapsible": false,
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "title": "Сведения о воинском учете",
                    "__hidden": {
                      "path": ["view_form_military_record_document"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "expanded": true
                  },
                  "content": {
                    "": [
                      {
                        "id": "ade25ebd-150b-4a49-bb85-48da355b0663",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "bindingMode": false,
                          "__isConstValues": [],
                          "__readOnly": null,
                          "__relativeURL": "",
                          "control": {
                            "path": ["context", "military_record_document"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_military_record_document"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "192d28b5-cb52-4dcf-9828-4457d19813d8",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Данные водительского удостоверения",
                    "__outlet": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__hidden": {
                      "path": ["view_form_diver_license"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "__baseURL": "",
                    "collapsible": false,
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "b4f9c94d-c7c1-454c-bc5d-cea9abb61404",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__renderContentOnDemand": false,
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "diver_license"]
                          },
                          "tooltip": null,
                          "required": {
                            "path": ["view_form_diver_license"]
                          },
                          "__readOnly": null
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "00b32128-a41e-4d8a-b837-e0ac9904f78d",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Данные о владении иностранным языком",
                    "__hidden": {
                      "path": ["view_form_foreign_language"],
                      "modifier": "not"
                    },
                    "__renderContentOnDemand": false,
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__outlet": "",
                    "expanded": true,
                    "__baseURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "bcb9f584-6326-477d-a2ed-aeac5e5c633e",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__baseURL": "",
                          "control": {
                            "path": ["context", "staff_foreign_language"]
                          },
                          "required": {
                            "path": ["view_form_foreign_language"]
                          },
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "tooltip": null,
                          "__outlet": "",
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "f59b7e37-bbd8-43fe-9889-b8d788585794",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "proficience_level"]
                          },
                          "__outlet": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "tooltip": null,
                          "required": {
                            "path": ["view_form_foreign_language"]
                          },
                          "__baseURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "25419c07-9788-4c93-98ff-980eeb3e4c9c",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Сведения об образовании",
                    "__outlet": "",
                    "__baseURL": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__hidden": {
                      "path": ["view_form_education_information"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "8f3f96a9-6ca8-47af-a5ac-fd191c0d8109",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "tooltip": null,
                          "required": {
                            "path": ["view_form_education_information"]
                          },
                          "__readOnly": null,
                          "__renderContentOnDemand": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "education_level"]
                          },
                          "__outlet": "",
                          "__baseURL": "",
                          "hideEmpty": false,
                          "bindingMode": false
                        }
                      },
                      {
                        "id": "4cf7db33-43da-4183-b99d-1a13b09d4c68",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "showDisplayName": true,
                          "hideEmpty": false,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__baseURL": "",
                          "__readOnly": null,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["context", "completion_certificate"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": ["view_form_education_information"]
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "7444c1c6-8e47-48aa-8243-afe361977c85",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Сведения о составе семьи",
                    "__baseURL": "",
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__isConstValues": [],
                    "__hidden": {
                      "path": ["view_form_composition_family_information"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "expanded": true,
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false,
                    "__relativeURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "1f1c5b52-7f7f-4db3-b409-1ba92ba1c86a",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeRelationDegree",
                            "type": "client"
                          },
                          "__renderContentOnDemand": false,
                          "required": {
                            "path": [
                              "view_form_composition_family_information"
                            ]
                          },
                          "__baseURL": "",
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "control": {
                            "path": ["context", "relation_degree"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "hideEmpty": false,
                          "__isConstValues": []
                        }
                      },
                      {
                        "id": "da3f6635-d8dd-45d1-b894-628186fbc711",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__readOnly": null,
                          "bindingMode": false,
                          "__isConstValues": [],
                          "control": {
                            "path": ["context", "relative_full_name"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": [
                              "view_form_composition_family_information"
                            ]
                          },
                          "__baseURL": "",
                          "__renderContentOnDemand": false,
                          "hideEmpty": false,
                          "__relativeURL": "",
                          "showDisplayName": true
                        }
                      },
                      {
                        "id": "c4adb3f9-d73f-4a17-ac96-f21a9b42bf2b",
                        "descriptor": "row",
                        "values": {
                          "__hidden": {
                            "path": ["view_sex_error"],
                            "modifier": "not"
                          },
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "7b4abe91-5f79-4f70-980d-da50ef8469d6",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "62819db9-ba84-4ce4-a929-4a2ce408e4b8",
                                    "descriptor": "elma-info-block",
                                    "values": {
                                      "typeEnum": [
                                        {
                                          "code": "danger",
                                          "name": "Ошибка (красный)"
                                        }
                                      ],
                                      "__baseURL": "",
                                      "__relativeURL": "",
                                      "__isConstValues": [],
                                      "__renderContentAsync": false,
                                      "__renderContentOnDemand": false,
                                      "text": {
                                        "path": ["sex_error"]
                                      },
                                      "__outlet": ""
                                    },
                                    "content": {
                                      "": []
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "12a456aa-889b-4170-8c0b-2474b7d4f6ad",
                              "descriptor": "column",
                              "content": {
                                "": []
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "b129ff53-d9de-46a7-8aff-acf80b206d81",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "tooltip": null,
                          "__outlet": "",
                          "required": false,
                          "__baseURL": "",
                          "__relativeURL": "",
                          "control": {
                            "path": ["context", "relative_sex"]
                          },
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkSex",
                            "type": "client"
                          }
                        }
                      },
                      {
                        "id": "af3b0e39-65a0-45ca-89eb-c2eedb6548db",
                        "descriptor": "row",
                        "values": {
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false,
                          "__hidden": {
                            "path": ["view_error_child_date"],
                            "modifier": "not"
                          }
                        },
                        "content": {
                          "": [
                            {
                              "id": "621e390e-61f7-4115-879e-a8cc176e5683",
                              "descriptor": "column",
                              "content": {
                                "": [
                                  {
                                    "id": "7d9dc5ca-e5e5-427b-8966-22e454b6d752",
                                    "descriptor": "elma-info-block",
                                    "values": {
                                      "text": {
                                        "path": ["error_child_date"]
                                      },
                                      "__outlet": "",
                                      "typeEnum": [
                                        {
                                          "code": "danger",
                                          "name": "Ошибка (красный)"
                                        }
                                      ],
                                      "__baseURL": "",
                                      "__relativeURL": "",
                                      "__isConstValues": [],
                                      "__renderContentAsync": false,
                                      "__renderContentOnDemand": false
                                    },
                                    "content": {
                                      "": []
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "e0d3f213-32c3-4851-a966-4d95ddee6ea9",
                              "descriptor": "column",
                              "content": {
                                "": []
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "7a655467-71f7-44df-8b48-d31d4bc6e3c7",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "relative_birth_date"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": [
                              "view_form_composition_family_information"
                            ]
                          },
                          "__baseURL": "",
                          "bindingMode": false,
                          "__relativeURL": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeChildDate",
                            "type": "client"
                          },
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "502e4b0e-1515-44aa-99cf-43419d76a3ec",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "hideEmpty": false,
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "control": {
                            "path": ["context", "relative_phone"]
                          },
                          "__outlet": "",
                          "required": false,
                          "showDisplayName": true,
                          "tooltip": null,
                          "__baseURL": "",
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "1a5ea044-6a9b-4d0f-86ff-be12e2e5794d",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__readOnly": null,
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": [
                              "context",
                              "relative_marriage_certificate"
                            ]
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["relation_degree_is_husband_wife"]
                          },
                          "hideEmpty": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "tooltip": null,
                          "__hidden": {
                            "path": ["relation_degree_is_husband_wife"],
                            "modifier": "not"
                          },
                          "__baseURL": "",
                          "bindingMode": false
                        }
                      },
                      {
                        "id": "fa9b10e7-c62a-4e5f-9cee-386de1dcc04c",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "control": {
                            "path": ["context", "relative_birth_certificate"]
                          },
                          "tooltip": null,
                          "hideEmpty": false,
                          "__isConstValues": [],
                          "__hidden": {
                            "path": ["relation_degree_is_child"],
                            "modifier": "not"
                          },
                          "__outlet": "",
                          "required": {
                            "path": ["relation_degree_is_child"]
                          },
                          "__baseURL": "",
                          "__readOnly": null,
                          "bindingMode": false,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "__renderContentOnDemand": false
                        }
                      },
                      {
                        "id": "7484bae8-6977-44b3-bc5a-800e2abadc50",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "bindingMode": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": ["context", "relative_other_documents"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "hideEmpty": false,
                          "__readOnly": null,
                          "__hidden": {
                            "path": ["relation_degree_is_other"],
                            "modifier": "not"
                          },
                          "required": false,
                          "__baseURL": ""
                        }
                      },
                      {
                        "id": "e18c8d35-9362-423a-9e23-36fa802f9842",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "__outlet": "",
                          "required": false,
                          "__baseURL": "",
                          "__readOnly": null,
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "checkRelativeSnils",
                            "type": "client"
                          },
                          "__isConstValues": [],
                          "control": {
                            "path": ["context", "relative_snils"]
                          },
                          "tooltip": null,
                          "__renderContentOnDemand": false,
                          "__relativeURL": "",
                          "showDisplayName": true,
                          "hideEmpty": false,
                          "bindingMode": false
                        }
                      },
                      {
                        "id": "87e34fd8-265c-43e6-930b-9e6851c27207",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "required": false,
                          "hideEmpty": false,
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "control": {
                            "path": ["current_family_info_table"]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "__baseURL": "",
                          "__readOnly": false,
                          "bindingMode": false,
                          "showDisplayName": true,
                          "widgetCustomSettings": {
                            "kind": "BlobObject",
                            "settings": {
                              "columnsView": {
                                "status": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": true,
                                  "required": false,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                },
                                "birth_date": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": true,
                                  "required": false,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                },
                                "relation_degree": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": true,
                                  "required": false,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                },
                                "family_conposition": {
                                  "font": {
                                    "bold": false,
                                    "color": "",
                                    "italic": false,
                                    "underline": false
                                  },
                                  "align": "left",
                                  "width": 175,
                                  "hidden": false,
                                  "tensile": false,
                                  "readonly": true,
                                  "required": false,
                                  "compression": false,
                                  "verticalAlign": "middle"
                                }
                              },
                              "allowDeleteRows": false
                            }
                          },
                          "__renderContentOnDemand": false
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "a1b4c3e0-8116-4d76-abc5-6662572cf8ca",
                  "descriptor": "groupbox",
                  "values": {
                    "__hidden": {
                      "path": ["not_null_type_personal_data"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "title": "Согласие на обработку персональных данных",
                    "expanded": true,
                    "__baseURL": "",
                    "collapsible": false,
                    "__relativeURL": "",
                    "__isConstValues": []
                  },
                  "content": {
                    "": [
                      {
                        "id": "eff7d0f1-04c6-4dca-9226-ebe5a1266e35",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "bindingMode": false,
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "tooltip": null,
                          "hideEmpty": false,
                          "required": {
                            "path": ["not_null_type_personal_data"]
                          },
                          "__baseURL": "",
                          "__readOnly": null,
                          "__relativeURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeAccepting",
                            "type": "client"
                          },
                          "__renderContentOnDemand": false,
                          "control": {
                            "path": [
                              "context",
                              "staff_personal_data_accepting"
                            ]
                          },
                          "__outlet": ""
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "fe13827f-e1bf-4bbc-a538-19e2edd294d8",
                  "descriptor": "groupbox",
                  "values": {
                    "title": "Согласие на обработку персональных данных родственника",
                    "__hidden": {
                      "path": ["view_form_composition_family_information"],
                      "modifier": "not"
                    },
                    "expanded": true,
                    "styleEnum": [
                      {
                        "code": "default",
                        "name": "Default"
                      }
                    ],
                    "collapsible": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__outlet": "",
                    "__baseURL": "",
                    "__renderContentOnDemand": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "e9fc9a59-b2b9-43d5-a458-a6be58508235",
                        "descriptor": "dynamic-form-row",
                        "values": {
                          "bindingMode": false,
                          "__relativeURL": "",
                          "onChangeValue": {
                            "kind": "Function",
                            "name": "changeAccepting",
                            "type": "client"
                          },
                          "control": {
                            "path": [
                              "context",
                              "relative_personal_data_accepting"
                            ]
                          },
                          "tooltip": null,
                          "__outlet": "",
                          "required": {
                            "path": [
                              "view_form_composition_family_information"
                            ]
                          },
                          "__readOnly": null,
                          "__isConstValues": [],
                          "showDisplayName": true,
                          "__renderContentOnDemand": false,
                          "__baseURL": "",
                          "hideEmpty": false
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "39d7757a-529f-4526-98f3-fddc66becf85",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "abe4b782-6e2d-49cc-a57e-81b636422ee5",
                  "descriptor": "target-widget",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "231b371a-64ae-4b61-8014-cba6da318ac9",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "5e39b91d-aea4-467e-862f-0f8766eb44df",
                  "descriptor": "linked-item",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "a4469de0-d7f3-11ec-9d64-0242ac120002",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "3ead7c41-6dfa-4144-80da-2bfb5f0ccf59",
                  "descriptor": "item-reminder",
                  "values": {
                    "task": {
                      "path": ["task"]
                    },
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "56d1d0e8-aa83-4cdd-ae43-294b26ad4d04",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e1525e34-14ba-456b-b703-f407945c01e0",
                  "descriptor": "item-tasks",
                  "descriptorVersion": 4,
                  "values": {
                    "formGroup": {
                      "path": ["context"]
                    },
                    "itemModel": {
                      "path": ["itemModel"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "eef018f2-1d3a-4600-a19d-791733b28b5e",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e0a17dec-603a-461a-becf-861637630584",
                  "descriptor": "messages-target",
                  "values": {
                    "target": {
                      "path": ["target"]
                    }
                  }
                }
              ]
            }
          }
        ],
        "[formInfoPanel]": [
          {
            "id": "d7c36d94-d1a1-4428-93ed-35f28c2ca78d",
            "descriptor": "validation-info-block",
            "values": {
              "__validateResult": {
                "path": ["context", "__validateResult"]
              }
            }
          }
        ],
        "[headerControls]": [
          {
            "id": "475aa008-aaff-402f-8de2-408bae1f1928",
            "descriptor": "task-percent-widget",
            "values": {
              "task": {
                "path": ["task"]
              }
            }
          },
          {
            "id": "702d9c59-77ae-4dd5-b71a-a5fe7b58858f",
            "descriptor": "extension-zone-toolbar-widget",
            "values": {
              "item": {
                "path": ["__itemRef"]
              }
            }
          },
          {
            "id": "f7b11c79-4267-4f5b-a002-dd629d549682",
            "descriptor": "process-item-map",
            "values": {
              "task": {
                "path": ["task"]
              },
              "skipRulesCheck": true
            }
          },
          {
            "id": "ff2500ee-6573-49cd-a9e8-2d5c93350f26",
            "descriptor": "button",
            "values": {
              "icon": "menu_vertical",
              "view": "icon",
              "label": "bpm.tasks.item@menu",
              "action": {
                "path": ["menuAction"]
              },
              "runProcessSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              },
              "createAppItemSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              }
            }
          }
        ],
        "[headerCustomization]": []
      }
    },
    "fields": [
      {
        "code": "not_null_type_personal_data",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Тип персональных данных не пустое значение",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_passport",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с паспортными данными",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_marriage_information",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму со сведением о браке",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_adress",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с фактическим местом жительства",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_phone",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с номером телефона",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_snils",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с СНИЛС",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_address_registration",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с адресом регистрации",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_label_current_registration",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать поле с постоянной регистрацией",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_label_temporary_registration",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать поле с временной регистрацией",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_military_record_document",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму со сведением о воинском учете",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_diver_license",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с водительским удостоверением",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_foreign_language",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму с иностранным языком",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_education_information",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму со сведениями об образовании",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_form_composition_family_information",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать форму со сведениями о семье",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "staff",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "staff",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "bindings": null,
          "namespace": "kedo",
          "isDependent": false,
          "linkedFieldCode": ""
        },
        "view": {
          "name": "Сотрудник",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "family_composition",
        "type": "SYS_COLLECTION",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": true,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "code": "family_composition_app",
          "filter": {
            "value": {
              "tf": {}
            },
            "enabled": false
          },
          "bindings": null,
          "namespace": "kedo",
          "isDependent": false,
          "linkedFieldCode": ""
        },
        "view": {
          "name": "Состав семьи",
          "data": {},
          "input": true,
          "output": true
        }
      },
      {
        "code": "current_family_info_table",
        "type": "TABLE",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {
          "fields": [
            {
              "code": "__count",
              "data": null,
              "type": "FLOAT",
              "view": {
                "data": {
                  "additionalType": "integer"
                },
                "name": "Количество элементов",
                "system": true
              },
              "array": false,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": false,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            },
            {
              "code": "__index",
              "data": {
                "result": {}
              },
              "type": "FLOAT",
              "view": {
                "data": {
                  "additionalType": "integer"
                },
                "name": "№",
                "disabled": true
              },
              "array": false,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": true,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            },
            {
              "code": "family_conposition",
              "data": {
                "code": "family_composition_app",
                "filter": {
                  "value": {
                    "tf": {}
                  },
                  "enabled": false
                },
                "bindings": null,
                "namespace": "kedo",
                "isDependent": false,
                "linkedFieldCode": ""
              },
              "type": "SYS_COLLECTION",
              "view": {
                "data": {
                  "showCreateItem": false
                },
                "name": "Состав семьи"
              },
              "array": true,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": false,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            },
            {
              "code": "relation_degree",
              "data": {
                "enumItems": [
                  {
                    "code": "husband_wife",
                    "name": "Муж/Жена",
                    "checked": false
                  },
                  {
                    "code": "child",
                    "name": "Ребенок",
                    "checked": false
                  },
                  {
                    "code": "mother",
                    "name": "Мать",
                    "checked": false
                  },
                  {
                    "code": "father",
                    "name": "Отец",
                    "checked": false
                  },
                  {
                    "code": "brother",
                    "name": "Брат",
                    "checked": false
                  },
                  {
                    "code": "sister",
                    "name": "Сестра",
                    "checked": false
                  },
                  {
                    "code": "other_degree",
                    "name": "Другая степень родства",
                    "checked": false
                  }
                ]
              },
              "type": "ENUM",
              "view": {
                "data": {},
                "name": "Степень родства"
              },
              "array": true,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": false,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            },
            {
              "code": "birth_date",
              "data": {},
              "type": "DATETIME",
              "view": {
                "data": {
                  "timeOptional": false,
                  "additionalType": "date",
                  "defaultTimeType": "startOfDay"
                },
                "name": "Дата рождения"
              },
              "array": false,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": false,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            },
            {
              "code": "status",
              "data": {},
              "type": "STRING",
              "view": {
                "data": {
                  "additionalType": "string"
                },
                "name": "Статус"
              },
              "array": false,
              "single": true,
              "deleted": false,
              "formula": "",
              "indexed": false,
              "required": false,
              "searchable": false,
              "defaultValue": null,
              "calcByFormula": false
            }
          ],
          "result": {
            "status": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            },
            "__count": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            },
            "__index": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            },
            "birth_date": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            },
            "relation_degree": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            },
            "family_conposition": {
              "kind": "none",
              "label": "",
              "formula": "sum"
            }
          }
        },
        "view": {
          "name": "Текущие сведения о семье",
          "data": {
            "allowDeleteRows": false,
            "collapseNestedHeaders": false,
            "columnsView": {
              "birth_date": {
                "align": "left",
                "compression": false,
                "font": {
                  "bold": false,
                  "color": "",
                  "italic": false,
                  "underline": false
                },
                "hidden": false,
                "readonly": false,
                "required": false,
                "tensile": false,
                "verticalAlign": "middle",
                "width": 175
              },
              "family_conposition": {
                "align": "left",
                "compression": false,
                "font": {
                  "bold": false,
                  "color": "",
                  "italic": false,
                  "underline": false
                },
                "hidden": false,
                "readonly": false,
                "required": false,
                "tensile": false,
                "verticalAlign": "middle",
                "width": 175
              },
              "relation_degree": {
                "align": "left",
                "compression": false,
                "font": {
                  "bold": false,
                  "color": "",
                  "italic": false,
                  "underline": false
                },
                "hidden": false,
                "readonly": false,
                "required": false,
                "tensile": false,
                "verticalAlign": "middle",
                "width": 175
              },
              "status": {
                "align": "left",
                "compression": false,
                "font": {
                  "bold": false,
                  "color": "",
                  "italic": false,
                  "underline": false
                },
                "hidden": false,
                "readonly": false,
                "required": false,
                "tensile": false,
                "verticalAlign": "middle",
                "width": 175
              }
            },
            "footerHidden": false,
            "groupingSettings": {
              "code": "",
              "kind": "None",
              "sort": "asc"
            },
            "headerHidden": false,
            "maxRowCount": 0,
            "relativeWidth": true,
            "rowMinHeight": 35,
            "showOrderNumbers": false,
            "viewTemplate": "Элементов: {$__count}",
            "viewVariant": "table"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "relation_degree_is_husband_wife",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Степень родства = Муж/Жена",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "relation_degree_is_child",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Степень родства = Ребенок",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "relation_degree_is_other",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Степень родства = Прочее",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "update_fullname",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Изменилось ФИО?",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_child_date",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_child_date",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "error_child_date",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "error_child_date",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "sex_error",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "sex_error",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_sex_error",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_sex_error",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      }
    ],
    "fieldVisibilityConditions": {
      "staff": {
        "enabled": false,
        "conditions": []
      },
      "sex_error": {
        "enabled": false,
        "conditions": []
      },
      "view_sex_error": {
        "enabled": false,
        "conditions": []
      },
      "update_fullname": {
        "enabled": false,
        "conditions": []
      },
      "view_form_phone": {
        "enabled": false,
        "conditions": []
      },
      "view_form_snils": {
        "enabled": false,
        "conditions": []
      },
      "error_child_date": {
        "enabled": false,
        "conditions": []
      },
      "view_form_adress": {
        "enabled": false,
        "conditions": []
      },
      "family_composition": {
        "enabled": false,
        "conditions": []
      },
      "view_form_passport": {
        "enabled": false,
        "conditions": []
      },
      "view_error_child_date": {
        "enabled": false,
        "conditions": []
      },
      "view_form_diver_license": {
        "enabled": false,
        "conditions": []
      },
      "relation_degree_is_child": {
        "enabled": false,
        "conditions": []
      },
      "relation_degree_is_other": {
        "enabled": false,
        "conditions": []
      },
      "current_family_info_table": {
        "enabled": false,
        "conditions": []
      },
      "view_form_foreign_language": {
        "enabled": false,
        "conditions": []
      },
      "not_null_type_personal_data": {
        "enabled": false,
        "conditions": []
      },
      "view_form_address_registration": {
        "enabled": false,
        "conditions": []
      },
      "view_form_marriage_information": {
        "enabled": false,
        "conditions": []
      },
      "relation_degree_is_husband_wife": {
        "enabled": false,
        "conditions": []
      },
      "view_form_education_information": {
        "enabled": false,
        "conditions": []
      },
      "view_label_current_registration": {
        "enabled": false,
        "conditions": []
      },
      "view_label_temporary_registration": {
        "enabled": false,
        "conditions": []
      },
      "view_form_military_record_document": {
        "enabled": false,
        "conditions": []
      },
      "pokazat_pole_s_vremennoi_registraciei": {
        "enabled": false,
        "conditions": []
      },
      "view_form_composition_family_information": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\n\ndeclare const document: any;\n\nasync function checkingTypePersonalData(): Promise\u003cvoid\u003e {\n    if (Context.data.type_personal_data \u0026\u0026 Context.data.staff) {\n        ViewContext.data.not_null_type_personal_data = true;\n        const type_personal_data = await Context.data.type_personal_data.fetch();\n        const staff = await Context.data.staff.fetch();\n\n        if (type_personal_data.data.code == 'passport_data') {\n            ViewContext.data.view_form_passport = true;\n            Context.data.staff_passport_series = staff.data.passport_series;\n            Context.data.staff_passport_number = staff.data.passport_number;\n            Context.data.staff_passport_code = staff.data.passport_department_code;\n            if (ViewContext.data.pass_file) {\n                Context.data.staff_passport_file = ViewContext.data.pass_file;\n            }\n            Context.data.staff_passport_date = staff.data.date_of_issue;\n            Context.data.staff_passport_issued_by = staff.data.issued_by;\n            Context.data.staff_full_name = staff.data.full_name;\n        } else {\n            ViewContext.data.view_form_passport = false;\n            Context.data.staff_passport_series = undefined;\n            Context.data.staff_passport_number = undefined;\n            Context.data.staff_passport_code = undefined;\n            ViewContext.data.pass_file = Context.data.staff_passport_file;\n            Context.data.staff_passport_file = undefined;\n            Context.data.staff_passport_date = undefined;\n            Context.data.staff_passport_issued_by = undefined;\n            Context.data.staff_full_name = undefined;\n        }\n\n        if (type_personal_data.data.code == 'marriage_information') {\n            ViewContext.data.view_form_marriage_information = true;\n        } else {\n            ViewContext.data.view_form_marriage_information = false;\n            Context.data.marriage_certificate = undefined;\n            Context.data.passport_data_changed = false;\n        }\n\n        if (type_personal_data.data.code == 'change_residence') {\n            ViewContext.data.view_form_adress = true;\n        } else {\n            ViewContext.data.view_form_adress = false;\n            Context.data.staff_address = undefined;\n        }\n\n        if (type_personal_data.data.code == 'change_phone_number') {\n            ViewContext.data.view_form_phone = true;\n        } else {\n            ViewContext.data.view_form_phone = false;\n            Context.data.staff_phone = undefined;\n        }\n\n        if (type_personal_data.data.code == 'changt_snils') {\n            ViewContext.data.view_form_snils = true;\n        } else {\n            ViewContext.data.view_form_snils = false;\n            Context.data.staff_snils = undefined;\n        }\n\n        if (type_personal_data.data.code == 'change_address_registration') {\n            Context.data.change_registration_address = true;\n            ViewContext.data.view_form_address_registration = true;\n        } else {\n            ViewContext.data.view_form_address_registration = false;\n            ViewContext.data.view_label_temporary_registration = false;\n            ViewContext.data.view_label_current_registration = false;\n            Context.data.change_registration_address = undefined;\n            Context.data.staff_passport_current_registration = undefined;\n            Context.data.staff_temporary_registration = undefined;\n        }\n\n        if (type_personal_data.data.code == 'military_registration') {\n            ViewContext.data.view_form_military_record_document = true;\n        } else {\n            ViewContext.data.view_form_military_record_document = false;\n            Context.data.military_record_document = undefined;\n        }\n\n        if (type_personal_data.data.code == 'data_driver') {\n            ViewContext.data.view_form_diver_license = true;\n        } else {\n            ViewContext.data.view_form_diver_license = false;\n            Context.data.diver_license = undefined;\n        }\n\n        if (type_personal_data.data.code == 'data_language') {\n            ViewContext.data.view_form_foreign_language = true;\n        } else {\n            ViewContext.data.view_form_foreign_language = false;\n            Context.data.staff_foreign_language = undefined;\n            Context.data.proficience_level = undefined;\n        }\n\n        if (type_personal_data.data.code == 'data_education') {\n            ViewContext.data.view_form_education_information = true;\n        } else {\n            ViewContext.data.view_form_education_information = false;\n            Context.data.education_level = undefined;\n            Context.data.completion_certificate = undefined;\n        }\n\n        if (type_personal_data.data.code == 'composition_family_information') {\n            table_fill();\n            ViewContext.data.not_null_type_personal_data = false;\n            ViewContext.data.view_form_composition_family_information = true;\n        } else {\n            ViewContext.data.view_form_composition_family_information = false;\n            ViewContext.data.current_family_info = undefined;\n            Context.data.relation_degree = undefined;\n            Context.data.relative_full_name = undefined;\n            Context.data.relative_sex = undefined;\n            Context.data.relative_birth_date = undefined;\n            Context.data.relative_phone = undefined;\n            Context.data.relative_marriage_certificate = undefined;\n            Context.data.relative_birth_certificate = undefined;\n            Context.data.relative_other_documents = undefined;\n            Context.data.relative_snils = undefined;\n        }\n\n\n    } else {\n        ViewContext.data.not_null_type_personal_data = false;\n    }\n}\n\nasync function changeTypeAddress(): Promise\u003cvoid\u003e {\n    if (Context.data.change_registration_address == true) {\n        ViewContext.data.view_label_current_registration = true;\n        ViewContext.data.view_label_temporary_registration = false;\n    }\n    if (Context.data.change_registration_address == false) {\n        ViewContext.data.view_label_current_registration = false;\n        ViewContext.data.view_label_temporary_registration = true;\n    }\n}\n\nasync function changeRelationDegree(): Promise\u003cvoid\u003e {\n    if (Context.data.relation_degree) {\n        if (Context.data.relation_degree.code == 'husband_wife') {\n            ViewContext.data.relation_degree_is_husband_wife = true;\n        } else {\n            ViewContext.data.relation_degree_is_husband_wife = false;\n        }\n\n        if (Context.data.relation_degree.code == 'child') {\n            ViewContext.data.relation_degree_is_child = true;\n        } else {\n            ViewContext.data.relation_degree_is_child = false;\n        }\n\n        if (Context.data.relation_degree.code != 'child' \u0026\u0026 Context.data.relation_degree.code != 'husband_wife') {\n            ViewContext.data.relation_degree_is_other = true;\n        } else {\n            ViewContext.data.relation_degree_is_other = false;\n        }\n\n        if (Context.data.relation_degree.code == \"mother\") {\n            Context.data.relative_sex = Context.fields.relative_sex.variants.female;\n        }\n\n        if (Context.data.relation_degree.code == \"father\") {\n            Context.data.relative_sex = Context.fields.relative_sex.variants.male;\n        }\n\n        if (Context.data.relation_degree.code == \"sister\") {\n            Context.data.relative_sex = Context.fields.relative_sex.variants.female;\n        }\n\n        if (Context.data.relation_degree.code == \"brother\") {\n            Context.data.relative_sex = Context.fields.relative_sex.variants.male;\n        }\n    }\n\n    await checkSex();\n}\n\nasync function changePassport(): Promise\u003cvoid\u003e {\n    if (Context.data.type_personal_data) {\n        const type_personal_data = await Context.data.type_personal_data.fetch();\n\n        if (Context.data.passport_data_changed == true) {\n            ViewContext.data.view_form_passport = true;\n        }\n        if (type_personal_data.data.code != 'passport_data' \u0026\u0026 Context.data.passport_data_changed == false) {\n            ViewContext.data.view_form_passport = false;\n        }\n    }\n}\n\nasync function table_fill(): Promise\u003cvoid\u003e {\n    if (!Context.data.staff) {\n        throw new Error('staff is undefined');\n    }\n    let family_members = await ViewContext.fields.family_composition.app.search().where((f, q) =\u003e q.and(\n        f.staff.link(Context.data.staff!),\n        f.__deletedAt.eq(null)\n    )).size(10000).all();\n    if (family_members \u0026\u0026 family_members.length \u003e 0) {\n        for (let member of family_members) {\n            let row = ViewContext.data.current_family_info_table!.insert();\n            row.family_conposition = member;\n            row.birth_date = member.data.birth_date!;\n            row.relation_degree = member.data.relation_degree!;\n            row.status = member.data.__status!.name\n        }\n    }\n    ViewContext.data.current_family_info_table = ViewContext.data.current_family_info_table;\n}\n\n// async function validation(): Promise\u003cValidationResult\u003e {\n//     const result = new ValidationResult();\n//     if (Context.data.type_personal_data) {\n//         const type_personal_data = await Context.data.type_personal_data.fetch();\n//         if ((type_personal_data.data.code == 'composition_family_information' \u0026\u0026 !Context.data.relative_personal_data_accepting)\n//             || (type_personal_data.data.code != 'composition_family_information' \u0026\u0026 !Context.data.staff_personal_data_accepting)) {\n//             result.addMessage('Должны быть проставлены все флажки на форме');\n//         }\n//     }\n//     return result;\n// }\n\nasync function changeAccepting(): Promise\u003cvoid\u003e {\n    if (Context.data.relative_personal_data_accepting == false) {\n        Context.data.relative_personal_data_accepting = undefined;\n    }\n    if (Context.data.staff_personal_data_accepting == false) {\n        Context.data.staff_personal_data_accepting = undefined;\n    }\n}\n\nasync function changePassDepCode(): Promise\u003cvoid\u003e {\n    if (Context.data.staff_passport_code) {\n        let split_str = Context.data.staff_passport_code.match(/(\\d{1,3})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n            Context.data.staff_passport_code = split_str[0] + '-' + split_str[1];\n        }\n    }\n}\n\nasync function checkNumber(): Promise\u003cvoid\u003e {\n    if (Context.data.staff_passport_number) {\n        let split_str = Context.data.staff_passport_number.match(/(\\d{1,6})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 6 \u0026\u0026 (split_str[1])) {\n            Context.data.staff_passport_number = split_str[0];\n        }\n    }\n}\n\nasync function checkSeries(): Promise\u003cvoid\u003e {\n    if (Context.data.staff_passport_series) {\n        let split_str = Context.data.staff_passport_series.match(/(\\d{1,4})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 4 \u0026\u0026 (split_str[1])) {\n            Context.data.staff_passport_series = split_str[0];\n        }\n    }\n}\n\nasync function checkSnils(): Promise\u003cvoid\u003e {\n    if (Context.data.staff_snils) {\n        let split_str = Context.data.staff_snils.match(/(\\d{1,3})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n            Context.data.staff_snils = split_str[0] + '-' + split_str[1];\n        }\n        if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n            Context.data.staff_snils += '-' + split_str[2];\n        }\n\n        if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n            Context.data.staff_snils += ' ' + split_str![3];\n        }\n    }\n}\n\nasync function checkRelativeSnils(): Promise\u003cvoid\u003e {\n    if (Context.data.relative_snils) {\n        let split_str = Context.data.relative_snils.match(/(\\d{1,3})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n            Context.data.relative_snils = split_str[0] + '-' + split_str[1];\n        }\n        if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n            Context.data.relative_snils += '-' + split_str[2];\n        }\n\n        if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n            Context.data.relative_snils += ' ' + split_str![3];\n        }\n    }\n}\n\nasync function changeChildDate(): Promise\u003cvoid\u003e {\n    if (Context.data.relative_birth_date) {\n        const current_date = new TDate();\n        if (Context.data.relative_birth_date.after(current_date)) {\n            ViewContext.data.error_child_date = \"Дата рождения не может быть позднее текущей даты.\"\n            ViewContext.data.view_error_child_date = true;\n        } else {\n            ViewContext.data.error_child_date = \"\";\n            ViewContext.data.view_error_child_date = false;\n        }\n    }\n\n    checkLabels();\n}\n\nfunction checkLabels() {\n    const button_save = document.querySelectorAll('.btn-primary');\n    for (let button of button_save) {\n        if (button.innerText.includes('Сформировать заявку')) {\n            if (ViewContext.data.view_error_child_date === true || ViewContext.data.view_sex_error === true) {\n                button.disabled = true;\n            } else {\n                button.disabled = false;\n            }\n        }\n    }\n}\n\nasync function checkSex(): Promise\u003cvoid\u003e {\n    if (Context.data.relation_degree \u0026\u0026 Context.data.relative_sex) {\n        if ((Context.data.relation_degree.code == \"mother\" || Context.data.relation_degree.code == \"sister\") \u0026\u0026 Context.data.relative_sex.code == \"male\") {\n            ViewContext.data.view_sex_error = true;\n            ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n\n            checkLabels();\n            return;\n        } else {\n            ViewContext.data.view_sex_error = false;\n            ViewContext.data.sex_error = '';\n        }\n\n        if ((Context.data.relation_degree.code == \"father\" || Context.data.relation_degree.code == \"brother\") \u0026\u0026 Context.data.relative_sex.code == \"female\") {\n            ViewContext.data.view_sex_error = true;\n            ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n\n            checkLabels();\n            return;\n        } else {\n            ViewContext.data.view_sex_error = false;\n            ViewContext.data.sex_error = '';\n        }\n    }\n\n    checkLabels();\n}\n\n",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "dataFieldCode": "context"
  },
  "dataNamespace": "kedo.employees_personal_data",
  "dataCode": "_process_processing_application_personal_data",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function checkingTypePersonalData() {\n            if (Context.data.type_personal_data \u0026\u0026 Context.data.staff) {\n                ViewContext.data.not_null_type_personal_data = true;\n                const type_personal_data = await Context.data.type_personal_data.fetch();\n                const staff = await Context.data.staff.fetch();\n                if (type_personal_data.data.code == 'passport_data') {\n                    ViewContext.data.view_form_passport = true;\n                    Context.data.staff_passport_series = staff.data.passport_series;\n                    Context.data.staff_passport_number = staff.data.passport_number;\n                    Context.data.staff_passport_code = staff.data.passport_department_code;\n                    if (ViewContext.data.pass_file) {\n                        Context.data.staff_passport_file = ViewContext.data.pass_file;\n                    }\n                    Context.data.staff_passport_date = staff.data.date_of_issue;\n                    Context.data.staff_passport_issued_by = staff.data.issued_by;\n                    Context.data.staff_full_name = staff.data.full_name;\n                }\n                else {\n                    ViewContext.data.view_form_passport = false;\n                    Context.data.staff_passport_series = undefined;\n                    Context.data.staff_passport_number = undefined;\n                    Context.data.staff_passport_code = undefined;\n                    ViewContext.data.pass_file = Context.data.staff_passport_file;\n                    Context.data.staff_passport_file = undefined;\n                    Context.data.staff_passport_date = undefined;\n                    Context.data.staff_passport_issued_by = undefined;\n                    Context.data.staff_full_name = undefined;\n                }\n                if (type_personal_data.data.code == 'marriage_information') {\n                    ViewContext.data.view_form_marriage_information = true;\n                }\n                else {\n                    ViewContext.data.view_form_marriage_information = false;\n                    Context.data.marriage_certificate = undefined;\n                    Context.data.passport_data_changed = false;\n                }\n                if (type_personal_data.data.code == 'change_residence') {\n                    ViewContext.data.view_form_adress = true;\n                }\n                else {\n                    ViewContext.data.view_form_adress = false;\n                    Context.data.staff_address = undefined;\n                }\n                if (type_personal_data.data.code == 'change_phone_number') {\n                    ViewContext.data.view_form_phone = true;\n                }\n                else {\n                    ViewContext.data.view_form_phone = false;\n                    Context.data.staff_phone = undefined;\n                }\n                if (type_personal_data.data.code == 'changt_snils') {\n                    ViewContext.data.view_form_snils = true;\n                }\n                else {\n                    ViewContext.data.view_form_snils = false;\n                    Context.data.staff_snils = undefined;\n                }\n                if (type_personal_data.data.code == 'change_address_registration') {\n                    Context.data.change_registration_address = true;\n                    ViewContext.data.view_form_address_registration = true;\n                }\n                else {\n                    ViewContext.data.view_form_address_registration = false;\n                    ViewContext.data.view_label_temporary_registration = false;\n                    ViewContext.data.view_label_current_registration = false;\n                    Context.data.change_registration_address = undefined;\n                    Context.data.staff_passport_current_registration = undefined;\n                    Context.data.staff_temporary_registration = undefined;\n                }\n                if (type_personal_data.data.code == 'military_registration') {\n                    ViewContext.data.view_form_military_record_document = true;\n                }\n                else {\n                    ViewContext.data.view_form_military_record_document = false;\n                    Context.data.military_record_document = undefined;\n                }\n                if (type_personal_data.data.code == 'data_driver') {\n                    ViewContext.data.view_form_diver_license = true;\n                }\n                else {\n                    ViewContext.data.view_form_diver_license = false;\n                    Context.data.diver_license = undefined;\n                }\n                if (type_personal_data.data.code == 'data_language') {\n                    ViewContext.data.view_form_foreign_language = true;\n                }\n                else {\n                    ViewContext.data.view_form_foreign_language = false;\n                    Context.data.staff_foreign_language = undefined;\n                    Context.data.proficience_level = undefined;\n                }\n                if (type_personal_data.data.code == 'data_education') {\n                    ViewContext.data.view_form_education_information = true;\n                }\n                else {\n                    ViewContext.data.view_form_education_information = false;\n                    Context.data.education_level = undefined;\n                    Context.data.completion_certificate = undefined;\n                }\n                if (type_personal_data.data.code == 'composition_family_information') {\n                    table_fill();\n                    ViewContext.data.not_null_type_personal_data = false;\n                    ViewContext.data.view_form_composition_family_information = true;\n                }\n                else {\n                    ViewContext.data.view_form_composition_family_information = false;\n                    ViewContext.data.current_family_info = undefined;\n                    Context.data.relation_degree = undefined;\n                    Context.data.relative_full_name = undefined;\n                    Context.data.relative_sex = undefined;\n                    Context.data.relative_birth_date = undefined;\n                    Context.data.relative_phone = undefined;\n                    Context.data.relative_marriage_certificate = undefined;\n                    Context.data.relative_birth_certificate = undefined;\n                    Context.data.relative_other_documents = undefined;\n                    Context.data.relative_snils = undefined;\n                }\n            }\n            else {\n                ViewContext.data.not_null_type_personal_data = false;\n            }\n        }\n        async function changeTypeAddress() {\n            if (Context.data.change_registration_address == true) {\n                ViewContext.data.view_label_current_registration = true;\n                ViewContext.data.view_label_temporary_registration = false;\n            }\n            if (Context.data.change_registration_address == false) {\n                ViewContext.data.view_label_current_registration = false;\n                ViewContext.data.view_label_temporary_registration = true;\n            }\n        }\n        async function changeRelationDegree() {\n            if (Context.data.relation_degree) {\n                if (Context.data.relation_degree.code == 'husband_wife') {\n                    ViewContext.data.relation_degree_is_husband_wife = true;\n                }\n                else {\n                    ViewContext.data.relation_degree_is_husband_wife = false;\n                }\n                if (Context.data.relation_degree.code == 'child') {\n                    ViewContext.data.relation_degree_is_child = true;\n                }\n                else {\n                    ViewContext.data.relation_degree_is_child = false;\n                }\n                if (Context.data.relation_degree.code != 'child' \u0026\u0026 Context.data.relation_degree.code != 'husband_wife') {\n                    ViewContext.data.relation_degree_is_other = true;\n                }\n                else {\n                    ViewContext.data.relation_degree_is_other = false;\n                }\n                if (Context.data.relation_degree.code == \"mother\") {\n                    Context.data.relative_sex = Context.fields.relative_sex.variants.female;\n                }\n                if (Context.data.relation_degree.code == \"father\") {\n                    Context.data.relative_sex = Context.fields.relative_sex.variants.male;\n                }\n                if (Context.data.relation_degree.code == \"sister\") {\n                    Context.data.relative_sex = Context.fields.relative_sex.variants.female;\n                }\n                if (Context.data.relation_degree.code == \"brother\") {\n                    Context.data.relative_sex = Context.fields.relative_sex.variants.male;\n                }\n            }\n            await checkSex();\n        }\n        async function changePassport() {\n            if (Context.data.type_personal_data) {\n                const type_personal_data = await Context.data.type_personal_data.fetch();\n                if (Context.data.passport_data_changed == true) {\n                    ViewContext.data.view_form_passport = true;\n                }\n                if (type_personal_data.data.code != 'passport_data' \u0026\u0026 Context.data.passport_data_changed == false) {\n                    ViewContext.data.view_form_passport = false;\n                }\n            }\n        }\n        async function table_fill() {\n            if (!Context.data.staff) {\n                throw new Error('staff is undefined');\n            }\n            let family_members = await ViewContext.fields.family_composition.app.search().where((f, q) =\u003e q.and(f.staff.link(Context.data.staff), f.__deletedAt.eq(null))).size(10000).all();\n            if (family_members \u0026\u0026 family_members.length \u003e 0) {\n                for (let member of family_members) {\n                    let row = ViewContext.data.current_family_info_table.insert();\n                    row.family_conposition = member;\n                    row.birth_date = member.data.birth_date;\n                    row.relation_degree = member.data.relation_degree;\n                    row.status = member.data.__status.name;\n                }\n            }\n            ViewContext.data.current_family_info_table = ViewContext.data.current_family_info_table;\n        }\n        async function changeAccepting() {\n            if (Context.data.relative_personal_data_accepting == false) {\n                Context.data.relative_personal_data_accepting = undefined;\n            }\n            if (Context.data.staff_personal_data_accepting == false) {\n                Context.data.staff_personal_data_accepting = undefined;\n            }\n        }\n        async function changePassDepCode() {\n            if (Context.data.staff_passport_code) {\n                let split_str = Context.data.staff_passport_code.match(/(\\d{1,3})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n                    Context.data.staff_passport_code = split_str[0] + '-' + split_str[1];\n                }\n            }\n        }\n        async function checkNumber() {\n            if (Context.data.staff_passport_number) {\n                let split_str = Context.data.staff_passport_number.match(/(\\d{1,6})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 6 \u0026\u0026 (split_str[1])) {\n                    Context.data.staff_passport_number = split_str[0];\n                }\n            }\n        }\n        async function checkSeries() {\n            if (Context.data.staff_passport_series) {\n                let split_str = Context.data.staff_passport_series.match(/(\\d{1,4})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 4 \u0026\u0026 (split_str[1])) {\n                    Context.data.staff_passport_series = split_str[0];\n                }\n            }\n        }\n        async function checkSnils() {\n            if (Context.data.staff_snils) {\n                let split_str = Context.data.staff_snils.match(/(\\d{1,3})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n                    Context.data.staff_snils = split_str[0] + '-' + split_str[1];\n                }\n                if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n                    Context.data.staff_snils += '-' + split_str[2];\n                }\n                if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n                    Context.data.staff_snils += ' ' + split_str[3];\n                }\n            }\n        }\n        async function checkRelativeSnils() {\n            if (Context.data.relative_snils) {\n                let split_str = Context.data.relative_snils.match(/(\\d{1,3})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n                    Context.data.relative_snils = split_str[0] + '-' + split_str[1];\n                }\n                if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n                    Context.data.relative_snils += '-' + split_str[2];\n                }\n                if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n                    Context.data.relative_snils += ' ' + split_str[3];\n                }\n            }\n        }\n        async function changeChildDate() {\n            if (Context.data.relative_birth_date) {\n                const current_date = new TDate();\n                if (Context.data.relative_birth_date.after(current_date)) {\n                    ViewContext.data.error_child_date = \"Дата рождения не может быть позднее текущей даты.\";\n                    ViewContext.data.view_error_child_date = true;\n                }\n                else {\n                    ViewContext.data.error_child_date = \"\";\n                    ViewContext.data.view_error_child_date = false;\n                }\n            }\n            checkLabels();\n        }\n        function checkLabels() {\n            const button_save = document.querySelectorAll('.btn-primary');\n            for (let button of button_save) {\n                if (button.innerText.includes('Сформировать заявку')) {\n                    if (ViewContext.data.view_error_child_date === true || ViewContext.data.view_sex_error === true) {\n                        button.disabled = true;\n                    }\n                    else {\n                        button.disabled = false;\n                    }\n                }\n            }\n        }\n        async function checkSex() {\n            if (Context.data.relation_degree \u0026\u0026 Context.data.relative_sex) {\n                if ((Context.data.relation_degree.code == \"mother\" || Context.data.relation_degree.code == \"sister\") \u0026\u0026 Context.data.relative_sex.code == \"male\") {\n                    ViewContext.data.view_sex_error = true;\n                    ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n                    checkLabels();\n                    return;\n                }\n                else {\n                    ViewContext.data.view_sex_error = false;\n                    ViewContext.data.sex_error = '';\n                }\n                if ((Context.data.relation_degree.code == \"father\" || Context.data.relation_degree.code == \"brother\") \u0026\u0026 Context.data.relative_sex.code == \"female\") {\n                    ViewContext.data.view_sex_error = true;\n                    ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n                    checkLabels();\n                    return;\n                }\n                else {\n                    ViewContext.data.view_sex_error = false;\n                    ViewContext.data.sex_error = '';\n                }\n            }\n            checkLabels();\n        }\n        return {\n            checkingTypePersonalData,\n            changeTypeAddress,\n            changeRelationDegree,\n            changePassport,\n            table_fill,\n            changeAccepting,\n            changePassDepCode,\n            checkNumber,\n            checkSeries,\n            checkSnils,\n            checkRelativeSnils,\n            changeChildDate,\n            checkLabels,\n            checkSex\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "checkingTypePersonalData",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeTypeAddress",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeRelationDegree",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changePassport",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "table_fill",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeAccepting",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changePassDepCode",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkNumber",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkSeries",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkSnils",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkRelativeSnils",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeChildDate",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkLabels",
        "parameters": [],
        "type": ""
      },
      {
        "name": "checkSex",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [
        {
          "namespace": "kedo",
          "code": "type_employees_personal_data"
        },
        {
          "namespace": "kedo",
          "code": "staff"
        },
        {
          "namespace": "kedo",
          "code": "family_composition_app"
        }
      ],
      "pages": []
    }
  },
  "__createdAt": "2024-05-22T10:12:01.374760601Z",
  "__createdBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__updatedAt": "2024-05-29T09:43:21.688709791Z",
  "__updatedBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__deletedAt": null
}
