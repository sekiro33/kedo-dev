{
  "__id": "018fbf74-e8f6-7fb0-8b80-422c307f4b4a",
  "namespace": "kedo.dismissal_app",
  "code": "form_create",
  "__name": "Форма создания",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 7,
  "hidden": false,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "dc97fd36-739a-4270-b5de-a2fdfdb878a1",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "formGroup": {
          "path": ["item"]
        }
      },
      "content": {
        "[content]": [
          {
            "id": "c8f75704-d57e-4af1-9c6d-b45fccde8a79",
            "descriptor": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@forget_me_not_widget",
            "descriptorVersion": 4,
            "values": {
              "__outlet": "",
              "__baseURL": "",
              "element_name": "заявки на увольнение",
              "__relativeURL": "",
              "__isConstValues": []
            }
          },
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "__outlet": "",
              "__baseURL": "",
              "__relativeURL": "",
              "__isConstValues": [],
              "__renderContentAsync": true,
              "__renderContentOnDemand": false
            },
            "content": {
              "": [
                {
                  "id": "3b48c1ba-c1c5-458c-b698-1d2228b0f2f9",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "control": {
                      "path": ["item", "staff"]
                    },
                    "tooltip": null,
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__readOnly": null,
                    "bindingMode": false,
                    "__outlet": "",
                    "required": true,
                    "showCreateItem": false,
                    "__isConstValues": []
                  }
                },
                {
                  "id": "56eede84-1637-4877-8e1a-48550018603c",
                  "descriptor": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@staff_position_list_widget",
                  "descriptorVersion": 4,
                  "values": {
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "employment_placement": {
                      "path": ["item", "employment_placement"]
                    },
                    "staff": {
                      "path": ["item", "staff"]
                    },
                    "__outlet": "",
                    "__styles": "width: 100%"
                  }
                },
                {
                  "id": "9ff1ca50-9269-456f-893c-44b9eb35293c",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["item", "date_of_dismissal"]
                    },
                    "__outlet": "",
                    "required": true,
                    "hideEmpty": false,
                    "__readOnly": null,
                    "tooltip": null,
                    "__baseURL": "",
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "showDisplayName": true
                  }
                },
                {
                  "id": "577eb9e4-bdb7-42cd-9d3e-d5e54bda840a",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__isConstValues": [],
                    "control": {
                      "path": ["item", "reason_for_leaving"]
                    },
                    "__outlet": "",
                    "required": true,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "__readOnly": null,
                    "bindingMode": false
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "662f08da-59da-4112-9ae1-763785ab8bf2",
            "descriptor": "sidebar-widget",
            "values": {
              "__relativeURL": "",
              "__isConstValues": [],
              "__renderContentAsync": false,
              "title": "Инструкция",
              "__outlet": "",
              "__baseURL": ""
            },
            "content": {
              "": [
                {
                  "id": "4c6c0db1-2d51-4cb1-b9bd-87ad55048db6",
                  "descriptor": "html",
                  "descriptorVersion": 3,
                  "values": {
                    "html": "\u003cp\u003eДанная заявка запускает процесс увольнения и создаёт печатный образ заявления по увольнение по собственному желанию. Заявление можно скачать для подписания или подписать в электронном виде (если есть согласие на КЭДО). На основании заявление будет сформирован приказ, который нужно подписать обязательно в бумажном виде - дождитесь соответствующей задачи. Помните, что вы имеете право отозвать заявление на увольнение вплоть до последнего рабочего дня.\u003c/p\u003e"
                  }
                }
              ]
            }
          }
        ],
        "[headerControls]": [],
        "[headerCustomization]": [],
        "[footer]": [
          {
            "id": "592474a4-5659-4807-95ea-d89e2f5bdef8",
            "descriptor": "zone-content",
            "values": {
              "zoneCode": "[footer]"
            }
          }
        ]
      }
    },
    "fieldVisibilityConditions": {},
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\nasync function onInit(): Promise\u003cvoid\u003e\n{\n    const current_user = await System.users.getCurrentUser();\n\n    Context.data.staff = await Context.fields.staff.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.ext_user.eq(current_user),\n            f.__status.eq(Context.fields.staff.app.fields.__status.variants.signed_documents)\n        ))\n        .first();\n}\n\nasync function validate(): Promise\u003cValidationResult\u003e {\n    const result = new ValidationResult();\n\n    if (new TDate().after(Context.data.date_of_dismissal!) \u0026\u0026 new TDate().format() !== Context.data.date_of_dismissal!.format()) {\n        result.addContextError('date_of_dismissal', \"Дата увольнения не может быть раньше текущей даты\")\n    }\n\n    if (!Context.data.employment_placement) {\n        result.addContextError(\"employment_placement\", \"Укажите место занятости, по которому требуется оформить заявку\");\n    }\n\n    return result;\n}\n",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "widgetZones": [
      {
        "code": "[footer]"
      }
    ],
    "dataFieldCode": "item"
  },
  "dataNamespace": "kedo",
  "dataCode": "dismissal_app",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            const current_user = await System.users.getCurrentUser();\n            Context.data.staff = await Context.fields.staff.app.search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(current_user), f.__status.eq(Context.fields.staff.app.fields.__status.variants.signed_documents)))\n                .first();\n        }\n        async function validate() {\n            const result = new ValidationResult();\n            if (new TDate().after(Context.data.date_of_dismissal) \u0026\u0026 new TDate().format() !== Context.data.date_of_dismissal.format()) {\n                result.addContextError('date_of_dismissal', \"Дата увольнения не может быть раньше текущей даты\");\n            }\n            if (!Context.data.employment_placement) {\n                result.addContextError(\"employment_placement\", \"Укажите место занятости, по которому требуется оформить заявку\");\n            }\n            return result;\n        }\n        return {\n            onInit,\n            validate\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "validate",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [
        {
          "namespace": "kedo",
          "code": "staff"
        }
      ],
      "collections": [
        {
          "namespace": "kedo",
          "code": "staff"
        }
      ],
      "pages": []
    }
  },
  "__createdAt": "2024-05-28T13:47:41.173668106Z",
  "__createdBy": "af06abd7-3dd9-4097-a87c-2cb69da9d9fb",
  "__updatedAt": "2024-06-06T10:49:47.336209223Z",
  "__updatedBy": "af06abd7-3dd9-4097-a87c-2cb69da9d9fb",
  "__deletedAt": null
}
