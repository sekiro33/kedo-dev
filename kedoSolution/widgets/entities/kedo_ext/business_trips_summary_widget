{"__id":"018fd3a5-9fda-7325-a67f-230688431126","namespace":"kedo_ext","code":"business_trips_summary_widget","__name":"Командировки - сводная","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":1,"hidden":false,"draft":false,"readonly":false,"descriptor":{"template":{"id":"d577f0bb-e987-4a15-9ae1-700c951a6a52","descriptor":"component","values":{"systemFunctions":{}},"content":{"":[{"id":"1eb8c3e2-fbaf-4ae3-90a9-a98911cf16d2","descriptor":"code","values":{"html":"\u003cdiv class=\"my-trips\"\u003e\n    \u003cdiv class=\"my-trips__title-container\"\u003e\n        \u003cp class=\"my-trips__title\"\u003eМои командировки\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"my-trips__card trips-card\"\u003e\n    \u003cdiv class=\"trips-card__title-container\"\u003e\n        \u003cdiv class=\"trips-card__icon-container\"\u003e\n            \u003cdiv class=\"trips-card__icon\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cp class=\"trips-card__title\"\u003eБлижайшие командировки\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"trips-card__info-container\"\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"trips-card__actions-container\"\u003e\n        \u003ca href=\"\" class=\"trips-card__button trips-card__button--main\"\u003eОформить командировку\u003c/a\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript\u003e\n    Array.from(document.querySelectorAll(\".my-trips .trips-card__button--main\")).forEach((el) =\u003e {\n        el.href = `${window.location.href}(p:item/business_trips/businesstrip_requests)`\n    })\n\u003c/script\u003e\n","hideContent":true,"contentPlaceholder":"HTML"}},{"id":"e1a0461f-184f-4596-b475-f8356b7f734a","descriptor":"code","values":{"html":"\u003cstyle\u003e\n    .my-trips {\n        padding: 24px 20px;\n    }\n    .my-trips--disabled {\n        display: none;\n    }\n    .my-trips__title-container {\n        margin-bottom: 17px;\n    }\n    .my-trips__title {\n        font-size: 24px;\n        line-height: 32px;\n        font-weight: 600;\n        margin: 0;\n    }\n    .trips-card {\n        max-width: 333px;\n        background: none;\n        border: 1px solid #5082E6;\n        padding: 24px 24px 32px 24px;\n        border-radius: 4px;\n    }\n    .trips-card__title-container {\n        margin-bottom: 18px;\n        display: flex;\n        align-items: center;\n    }\n    .trips-card__icon-container {\n        min-width: 42px;\n        height: 42px;\n        background: #e2ecf3;\n        margin-right: 16px;\n        border-radius: 10px;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .trips-card__icon {\n        width: 24px;\n        height: 24px;\n        background-repeat: no-repeat;\n        background-position: center;\n\t    background-image: url(\"data:image/svg+xml,%3Csvg width='22' height='19' viewBox='0 0 22 19' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.15016 1.78125L12.9914 8.3125H17.4166C18.4108 8.3125 19.8179 9.04467 20.1322 9.5C19.8179 9.95533 18.4108 10.6875 17.4166 10.6875H12.9914L9.15016 17.2188H7.73162L9.65242 10.6875H5.19435L3.81935 12.4688H2.24115L3.13185 9.5L2.24115 6.53125H3.81935L5.19435 8.3125H9.65242L7.73162 1.78125H9.15016ZM9.85943 0H6.1114C5.7054 0 5.41245 0.377402 5.52397 0.75666L7.22172 6.53125H6.11102L4.91935 4.9875C4.80401 4.83795 4.62258 4.75 4.43046 4.75H0.611393C0.213788 4.75 -0.0780181 5.11293 0.018614 5.48773L1.22212 9.5L0.018614 13.5123C-0.0780181 13.8871 0.213788 14.25 0.611393 14.25H4.43046C4.62296 14.25 4.80401 14.1621 4.91935 14.0125L6.11102 12.4688H7.22172L5.52359 18.243C5.41206 18.6222 5.70501 19 6.11102 19H9.85905C10.0783 19 10.2807 18.8857 10.3896 18.7009L14.0555 12.4688H17.4166C19.104 12.4688 21.9999 11.1395 21.9999 9.5C21.9999 7.86014 19.104 6.53125 17.4166 6.53125H14.0555L10.39 0.299102C10.3365 0.208237 10.2593 0.132715 10.1661 0.0801887C10.073 0.0276622 9.96715 -1.86968e-06 9.85943 0V0Z' fill='%235082E6'/%3E%3C/svg%3E\");\n    }\n    .trips-card__title {\n        color: #323232;\n        font-weight: 600;\n        font-size: 20px;\n        line-height: 130%;\n        margin: 0;\n    }\n    .trips-card__info-container {\n        margin-bottom: 24px;\n    }\n    .trips-card__actions-container {\n        display: flex;\n        gap: 16px;\n    }\n    .trips-card__info-item {\n        display: block;\n        font-size: 14px;\n        color: #5082E6;\n        cursor: pointer;\n    }\n\n    .trips-card__button {\n        border: 1px solid #5082E6;\n        border-radius: 4px;\n        color: #5082E6;\n        padding: 4px 11px;\n        font-weight: 400;\n        font-size: 15px;\n        line-height: 22px;\n        transition-duration: .3s;\n    } \n    \n    .trips-card__button--main {\n        background: #5082E6;\n        color: #fff;\n    }\n\n    .trips-card__button--main:hover {\n        background: #fff;\n        color: #5082E6;\n        text-decoration: none;\n    }\n\n    .trips-card__info-text {\n        margin: 0;\n        font-size: 16px;\n        line-height: 20px;\n        color: #323232;\n    }\n\u003c/style\u003e\n","hideContent":true,"contentPlaceholder":"CSS"}},{"id":"f6fd08e9-0090-4a73-8224-ee6b806888b5","descriptor":"code","values":{"html":"\u003c%\n    if (!!Context.data.employee_card \u0026\u0026 Context.data.is_trips_active) { \n        Scripts.init() \n    } \n%\u003e\n","hideContent":true,"contentPlaceholder":"RENDER WIDGET"}}]}},"fields":[{"code":"is_trips_active","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Командировки активны","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":false}},{"code":"hide_business_trips","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Скрыть командировки","data":{"additionalType":"string"},"input":true,"output":false}},{"code":"employee_card","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"staff","filter":{"value":{"tf":{}},"enabled":false},"namespace":"kedo"},"view":{"name":"Приложение пользователи","data":{},"input":true,"output":false}},{"code":"current_user","type":"SYS_USER","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"filter":{"value":{"tf":{}},"enabled":false}},"view":{"name":"Текущий пользователь","data":{},"input":true,"output":false}},{"code":"business_trips_contract","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"business_trips","filter":{"value":{"tf":{}},"enabled":false},"namespace":"kedo"},"view":{"name":"Командировки (контракт)","data":{},"input":false,"output":false}}],"fieldVisibilityConditions":{"current_user":{"enabled":false,"conditions":[]},"employee_card":{"enabled":false,"conditions":[]},"is_trips_active":{"enabled":false,"conditions":[]},"hide_business_trips":{"enabled":false,"conditions":[]},"business_trips_contract":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"declare const document:any, console: any, window: any;\n\nasync function init() {\n    let i = 0;\n    let waitForRoot = window.setInterval(async () =\u003e {\n        const root = document.querySelector(Context.data.__classes ? `.${Context.data.__classes} .my-trips` : \".my-trips\");\n        if (!root) {\n            i++;\n            if (i \u003e 50) {\n                window.clearInterval(waitForRoot)\n            }\n            return;\n        };\n        window.clearInterval(waitForRoot)\n        if (!Context.data.is_trips_active) {\n            root.classList.add(\"my-trips--disabled\");\n            return;\n        }\n        // root.classList.remove('my-trips--disabled');\n        const currentUserBusinessTrips = await getData()\n        const currentDate = new TDate();\n        const domList = document.querySelector(Context.data.__classes ? `.${Context.data.__classes} .trips-card__info-container` : \".trips-card__info-container\")\n        let currentTripsCounter = 0\n\n        for(let i = 0; i \u003c currentUserBusinessTrips.length; i++) {\n            const currentItem = currentUserBusinessTrips[i]\n            if (!currentItem.data.start_date || !currentItem.data.end_date) {\n                continue;\n            };\n\n            const startDate = currentItem.data.start_date_string;\n            const endDate = currentItem.data.end_date_string;\n\n            if (!endDate || !startDate || currentDate.after(currentItem.data.end_date)) continue;\n            \n            currentTripsCounter++\n            const element = document.createElement('a');\n            element.classList.add('trips-card__info-item');\n            element.href = `${window.location.href}(p:item/business_trips/businesstrip_requests/${currentItem.data.__id})`\n            //@ts-ignore\n            element.innerText = `${startDate} - ${endDate} (${currentItem.data.end_date.ts.diff(startDate.ts, 'days')} дней)`\n            domList.append(element)\n\n            if (currentDate.after(currentItem.data.start_date!) \u0026\u0026 currentDate.before(currentItem.data.end_date!.addDate(0, 0, 1))) {\n                const titleElement = root.querySelector(\".trips-card__title\");\n                titleElement.innerText = \"Вы в командировке\";\n            }\n        }\n        if (!currentUserBusinessTrips || currentTripsCounter === 0) {\n            const element = document.createElement('p');\n            element.classList.add('trips-card__info-text');\n            element.innerText = \"У вас нет запланированных командировок\";\n            domList.append(element);\n        }\n    }, 1000)\n}\n\nasync function getData() {\n    const currentDate = new Datetime()\n    let tripsData = await Context.fields.business_trips_contract.app\n        .search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            g.or(\n                f.traveling_users.has(Context.data.current_user!),\n                f.kedo_staff.link(Context.data.employee_card!)\n            ),\n            f.start_date.gt(currentDate.addDate(-1, 0, 0))\n        ))\n        .size(8000)\n        .all()\n    tripsData = tripsData.filter((trip) =\u003e {\n        let tripStatus = trip.data.status;\n        if (!!tripStatus) {\n            return !tripStatus.includes(\"completed\") || !tripStatus.includes(\"canceled\") || !tripStatus.includes(\"in-prepare\");\n        };\n    });\n\n    return tripsData\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function init() {\n            let i = 0;\n            let waitForRoot = window.setInterval(async () =\u003e {\n                const root = document.querySelector(Context.data.__classes ? `.${Context.data.__classes} .my-trips` : \".my-trips\");\n                if (!root) {\n                    i++;\n                    if (i \u003e 50) {\n                        window.clearInterval(waitForRoot);\n                    }\n                    return;\n                }\n                ;\n                window.clearInterval(waitForRoot);\n                if (!Context.data.is_trips_active) {\n                    root.classList.add(\"my-trips--disabled\");\n                    return;\n                }\n                const currentUserBusinessTrips = await getData();\n                const currentDate = new TDate();\n                const domList = document.querySelector(Context.data.__classes ? `.${Context.data.__classes} .trips-card__info-container` : \".trips-card__info-container\");\n                let currentTripsCounter = 0;\n                for (let i = 0; i \u003c currentUserBusinessTrips.length; i++) {\n                    const currentItem = currentUserBusinessTrips[i];\n                    if (!currentItem.data.start_date || !currentItem.data.end_date) {\n                        continue;\n                    }\n                    ;\n                    const startDate = currentItem.data.start_date_string;\n                    const endDate = currentItem.data.end_date_string;\n                    if (!endDate || !startDate || currentDate.after(currentItem.data.end_date))\n                        continue;\n                    currentTripsCounter++;\n                    const element = document.createElement('a');\n                    element.classList.add('trips-card__info-item');\n                    element.href = `${window.location.href}(p:item/business_trips/businesstrip_requests/${currentItem.data.__id})`;\n                    element.innerText = `${startDate} - ${endDate} (${currentItem.data.end_date.ts.diff(startDate.ts, 'days')} дней)`;\n                    domList.append(element);\n                    if (currentDate.after(currentItem.data.start_date) \u0026\u0026 currentDate.before(currentItem.data.end_date.addDate(0, 0, 1))) {\n                        const titleElement = root.querySelector(\".trips-card__title\");\n                        titleElement.innerText = \"Вы в командировке\";\n                    }\n                }\n                if (!currentUserBusinessTrips || currentTripsCounter === 0) {\n                    const element = document.createElement('p');\n                    element.classList.add('trips-card__info-text');\n                    element.innerText = \"У вас нет запланированных командировок\";\n                    domList.append(element);\n                }\n            }, 1000);\n        }\n        async function getData() {\n            const currentDate = new Datetime();\n            let tripsData = await Context.fields.business_trips_contract.app\n                .search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), g.or(f.traveling_users.has(Context.data.current_user), f.kedo_staff.link(Context.data.employee_card)), f.start_date.gt(currentDate.addDate(-1, 0, 0))))\n                .size(8000)\n                .all();\n            tripsData = tripsData.filter((trip) =\u003e {\n                let tripStatus = trip.data.status;\n                if (!!tripStatus) {\n                    return !tripStatus.includes(\"completed\") || !tripStatus.includes(\"canceled\") || !tripStatus.includes(\"in-prepare\");\n                }\n                ;\n            });\n            return tripsData;\n        }\n        return {\n            init,\n            getData\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"init","parameters":[],"type":""},{"name":"getData","parameters":[],"type":""}]},"__createdAt":"2024-06-01T11:53:18.042482876Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-06-01T11:55:12.067943975Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
