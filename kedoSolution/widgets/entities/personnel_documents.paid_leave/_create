{"__id":"018fb8c3-3293-730a-bed6-2d75a3519bdf","namespace":"personnel_documents.paid_leave","code":"_create","__name":"Форма создания","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":5,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"91f91c32-eb66-4a09-986b-f01a44ed4b84","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["item"]},"systemFunctions":{}},"content":{"[content]":[{"id":"7d7bd35a-d521-4c08-9d55-d7c3a74932cc","descriptor":"modal-body","content":{"":[{"id":"e4254972-7f99-4681-8f4c-75dc84aaa2d5","descriptor":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@converting_dates","descriptorVersion":4,"values":{"__relativeURL":"","date_2_string":{"path":["item","end_line"]},"__isConstValues":[],"__baseURL":"","date_1_string":{"path":["item","start_line"]},"__renderContentOnDemand":false,"date_1":{"path":["item","start_date"]},"date_2":{"path":["item","end_date"]},"__hidden":true,"__outlet":""}},{"id":"b481d43d-abf1-4c50-b86c-b0ab29739f0f","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"control":{"path":["item","staff"]},"tooltip":null,"__baseURL":"","hideEmpty":false,"showDisplayName":true,"__renderContentOnDemand":false,"__outlet":"","required":false,"__readOnly":true,"__relativeURL":""}},{"id":"32fc8213-1b03-4305-aa2b-07cf5eeec6b3","descriptor":"kedo.employment_directory@employments_list_widget","descriptorVersion":1,"values":{"staff":{"path":["item","staff"]},"__outlet":"","__baseURL":"","employment_placement_required":true,"__styles":"width: 100%","__relativeURL":"","__isConstValues":[],"employment_placement":{"path":["item","employment_place"]},"__renderContentOnDemand":false,"employment_placement_name_visible":true}},{"id":"137b9870-8295-4102-8d9b-257cffae7a6e","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["item","start_date"]},"tooltip":null,"required":true,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"duration_calculate","type":"client"}}},{"id":"66e92034-993f-4095-b375-fe3472f65127","descriptor":"dynamic-form-row","values":{"onChangeValue":{"kind":"Function","name":"duration_calculate","type":"client"},"showDisplayName":true,"control":{"path":["item","end_date"]},"tooltip":null,"required":true,"__readOnly":null,"bindingMode":false}},{"id":"a7dbbebf-7ccd-487f-90ce-40d00246a386","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["item","duration"]},"tooltip":null,"required":false,"__readOnly":true,"bindingMode":false}}]}}],"[sidebar]":[{"id":"d66aba74-334f-4f04-b5d9-b0dc06e96ac0","descriptor":"sidebar-widget","content":{"":[{"id":"d5e76f29-e820-414a-b254-a7cf0b2d951b","descriptor":"user-guide","values":{"userGuide":"Укажите даты планируемого отпуска. Помните, что завяление на отпуск необходимо оформлять заранее. Заявление будет автоматически сформировано и направлено на согласование вашему руководителю."}}]}}],"[headerControls]":[],"[headerCustomization]":[],"[footer]":[{"id":"c1749e93-6c6c-4e6a-b70f-cc5019f5524a","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}]}},"fields":[{"code":"staff_hide","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"staff_hide","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"staff_hide":{"enabled":false,"conditions":[]},"work_duration":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\nasync function onInit(): Promise\u003cvoid\u003e {\n    const user = await System.users.getCurrentUser();\n\n    const staff = await Context.fields.staff.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.ext_user.eq(user),\n            f.__status.eq(Context.fields.staff.app.fields.__status.variants.signed_documents)\n        ))\n        .first();\n\n    if (!staff) {\n        throw new Error(\"Для данного пользователя не найдена карточка сотрудника\");\n    }\n\n    Context.data.staff = staff;\n}\n\nasync function duration_calculate(): Promise\u003cvoid\u003e {\n    if (!Context.data.start_date || !Context.data.end_date) {\n        Context.data.duration = undefined;\n        return;\n    }\n\n    const start_date = Context.data.start_date.asDatetime(new TTime(0, 0, 0, 0));\n    const end_date = Context.data.end_date.asDatetime(new TTime(23, 59, 0, 0));\n\n    const duration = end_date.sub(start_date);\n    Context.data.duration = Math.floor(duration.days);\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"personnel_documents","dataCode":"paid_leave","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            const user = await System.users.getCurrentUser();\n            const staff = await Context.fields.staff.app.search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(user), f.__status.eq(Context.fields.staff.app.fields.__status.variants.signed_documents)))\n                .first();\n            if (!staff) {\n                throw new Error(\"Для данного пользователя не найдена карточка сотрудника\");\n            }\n            Context.data.staff = staff;\n        }\n        async function duration_calculate() {\n            if (!Context.data.start_date || !Context.data.end_date) {\n                Context.data.duration = undefined;\n                return;\n            }\n            const start_date = Context.data.start_date.asDatetime(new TTime(0, 0, 0, 0));\n            const end_date = Context.data.end_date.asDatetime(new TTime(23, 59, 0, 0));\n            const duration = end_date.sub(start_date);\n            Context.data.duration = Math.floor(duration.days);\n        }\n        return {\n            onInit,\n            duration_calculate\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"duration_calculate","parameters":[],"type":"[object Object]"}]},"__createdAt":"2024-05-27T06:35:51.314344936Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-06-05T06:50:54.53597188Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
