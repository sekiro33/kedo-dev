{
  "__id": "018f9fc9-2204-739e-be5e-1266c72e783d",
  "namespace": "kedo.family_composition_app",
  "code": "create",
  "__name": "Форма создания",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 14,
  "hidden": false,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "64b4cecc-9130-4612-a406-330434dcf640",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "formGroup": {
          "path": ["item"]
        }
      },
      "content": {
        "[footer]": [
          {
            "id": "61ce839b-b969-43c8-ae90-86cf80ea4990",
            "descriptor": "zone-content",
            "values": {
              "zoneCode": "[footer]"
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "7fe87b6f-803f-40af-ae04-2c46f1919292",
                  "descriptor": "app-navigation-crumbs-tree-widget",
                  "values": {
                    "form": {
                      "path": ["item"]
                    },
                    "item": {
                      "path": ["itemModel"]
                    },
                    "__readOnly": false,
                    "application": {
                      "path": ["application"]
                    }
                  }
                },
                {
                  "id": "44c28f1c-551d-4e28-85eb-9e848f38b16f",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["item", "staff"]
                    },
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__renderContentOnDemand": false,
                    "__isConstValues": [],
                    "tooltip": null,
                    "__outlet": "",
                    "required": true,
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__readOnly": false,
                    "showCreateItem": false,
                    "showDisplayName": true
                  }
                },
                {
                  "id": "bdbb63e9-8487-40e1-b968-4daec0aae48b",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__renderContentOnDemand": false,
                    "__outlet": "",
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__readOnly": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "control": {
                      "path": ["item", "relation_degree"]
                    },
                    "tooltip": null,
                    "required": true,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "changeType",
                      "type": "client"
                    }
                  }
                },
                {
                  "id": "ef891cad-ddad-4d71-887f-4222ebc86838",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["item", "full_name"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "required": true,
                    "__baseURL": "",
                    "__readOnly": false,
                    "__relativeURL": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false
                  }
                },
                {
                  "id": "007d47e6-c345-4bd5-9878-eee438a169ff",
                  "descriptor": "row",
                  "values": {
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__hidden": {
                      "path": ["view_sex_error"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": []
                  },
                  "content": {
                    "": [
                      {
                        "id": "7f18e2b1-0ed1-4287-8646-4f924b675654",
                        "descriptor": "column",
                        "content": {
                          "": [
                            {
                              "id": "81026c82-1253-4c83-941e-3fcda84bd077",
                              "descriptor": "elma-info-block",
                              "values": {
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false,
                                "text": {
                                  "path": ["sex_error"]
                                },
                                "__outlet": "",
                                "typeEnum": [
                                  {
                                    "code": "danger",
                                    "name": "Ошибка (красный)"
                                  }
                                ],
                                "__baseURL": "",
                                "__relativeURL": ""
                              },
                              "content": {
                                "": []
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "7a9a9dec-d702-49fd-89bd-c953835bb4d9",
                        "descriptor": "column",
                        "content": {
                          "": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "7fa083a0-b8c7-40c8-9531-b7d84ca7d205",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__baseURL": "",
                    "__relativeURL": "",
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkSex",
                      "type": "client"
                    },
                    "__renderContentOnDemand": false,
                    "required": true,
                    "tooltip": null,
                    "__outlet": "",
                    "hideEmpty": false,
                    "__readOnly": false,
                    "bindingMode": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "control": {
                      "path": ["item", "sex"]
                    }
                  }
                },
                {
                  "id": "46086b50-22d2-415f-9683-83def34d21d3",
                  "descriptor": "row",
                  "values": {
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false,
                    "__renderContentOnDemand": false,
                    "__hidden": {
                      "path": ["view_error_child_date"],
                      "modifier": "not"
                    },
                    "__outlet": "",
                    "__baseURL": ""
                  },
                  "content": {
                    "": [
                      {
                        "id": "527384a5-4099-44c9-af2b-e1d9d012b245",
                        "descriptor": "column",
                        "content": {
                          "": [
                            {
                              "id": "7f56ac3b-a035-4188-87dc-3dfa1209d9d3",
                              "descriptor": "elma-info-block",
                              "values": {
                                "__relativeURL": "",
                                "__isConstValues": [],
                                "__renderContentAsync": false,
                                "__renderContentOnDemand": false,
                                "text": {
                                  "path": ["error_child_date"]
                                },
                                "__outlet": "",
                                "typeEnum": [
                                  {
                                    "code": "danger",
                                    "name": "Ошибка (красный)"
                                  }
                                ],
                                "__baseURL": ""
                              },
                              "content": {
                                "": []
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "27cc743d-9142-4f02-b90c-cec84db056f3",
                        "descriptor": "column",
                        "content": {
                          "": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": "a8faef43-8252-4285-a90a-a4fe1ea0ac37",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "tooltip": null,
                    "__outlet": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "changeChildDate",
                      "type": "client"
                    },
                    "__isConstValues": [],
                    "control": {
                      "path": ["item", "birth_date"]
                    },
                    "required": true,
                    "__baseURL": "",
                    "__readOnly": false
                  }
                },
                {
                  "id": "978edc77-cb8a-431a-9e83-8e70f6492cb7",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "tooltip": null,
                    "__outlet": "",
                    "required": false,
                    "hideEmpty": false,
                    "bindingMode": false,
                    "onChangeValue": {
                      "kind": "Function",
                      "name": "checkSnils",
                      "type": "client"
                    },
                    "control": {
                      "path": ["item", "snils"]
                    },
                    "__readOnly": null,
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "__baseURL": ""
                  }
                },
                {
                  "id": "db40aacb-2f06-4c23-b298-955b9173bb7a",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["item", "birth_certificate"]
                    },
                    "__outlet": "",
                    "required": {
                      "path": ["view_birth_certificate"]
                    },
                    "__baseURL": "",
                    "__readOnly": false,
                    "bindingMode": false,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "__hidden": {
                      "path": ["view_birth_certificate"],
                      "modifier": "not"
                    },
                    "hideEmpty": false,
                    "__isConstValues": [],
                    "__renderContentOnDemand": false
                  }
                },
                {
                  "id": "38c9d9c9-9a35-40d2-8f8b-49b169f678c1",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "hideEmpty": false,
                    "__readOnly": false,
                    "__relativeURL": "",
                    "showDisplayName": true,
                    "tooltip": null,
                    "__outlet": "",
                    "required": {
                      "path": ["view_marriage_certificate"]
                    },
                    "__baseURL": "",
                    "bindingMode": false,
                    "__isConstValues": [],
                    "__renderContentOnDemand": false,
                    "control": {
                      "path": ["item", "marriage_certificate"]
                    },
                    "__hidden": {
                      "path": ["view_marriage_certificate"],
                      "modifier": "not"
                    }
                  }
                },
                {
                  "id": "72c79b93-d58e-4bc0-b2b0-ed759da2319e",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__renderContentOnDemand": false,
                    "control": {
                      "path": ["item", "other_documents"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "hideEmpty": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "required": false,
                    "__baseURL": "",
                    "__readOnly": null,
                    "bindingMode": false,
                    "__relativeURL": ""
                  }
                }
              ]
            }
          }
        ],
        "[sidebar]": [
          {
            "id": "662f08da-59da-4112-9ae1-763785ab8bf2",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "1556d7a7-eaa5-41a2-b262-82ec3b86e64d",
                  "descriptor": "user-guide"
                }
              ]
            }
          }
        ],
        "[headerControls]": [],
        "[headerCustomization]": []
      }
    },
    "fields": [
      {
        "code": "error_child_date",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "error_child_date",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_error_child_date",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_error_child_date",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_marriage_certificate",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_marriage_certificate",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_birth_certificate",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_birth_certificate",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "sex_error",
        "type": "STRING",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "sex_error",
          "data": {
            "additionalType": "string"
          },
          "input": true,
          "output": true
        }
      },
      {
        "code": "view_sex_error",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "view_sex_error",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          },
          "input": true,
          "output": true
        }
      }
    ],
    "fieldVisibilityConditions": {
      "sex_error": {
        "enabled": false,
        "conditions": []
      },
      "view_sex_error": {
        "enabled": false,
        "conditions": []
      },
      "error_child_date": {
        "enabled": false,
        "conditions": []
      },
      "view_error_child_date": {
        "enabled": false,
        "conditions": []
      },
      "view_birth_certificate": {
        "enabled": false,
        "conditions": []
      },
      "view_marriage_certificate": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\n\ndeclare const document: any;\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    const current_user = await System.users.getCurrentUser();\n    let staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.ext_user.eq(current_user)\n    )).first();\n\n    if (staff) {\n        Context.data.staff = staff;\n    }\n\n    Context.fields.staff.data.setFilter((f, c, g) =\u003e g.and(\n        f.ext_user.eq(current_user)\n    ));\n}\n\nasync function changeChildDate(): Promise\u003cvoid\u003e {\n    if (Context.data.birth_date) {\n        const current_date = new TDate();\n        if (Context.data.birth_date.after(current_date)) {\n            ViewContext.data.error_child_date = \"Дата рождения не может быть позднее текущей даты.\"\n            ViewContext.data.view_error_child_date = true;\n        } else {\n            ViewContext.data.error_child_date = \"\";\n            ViewContext.data.view_error_child_date = false;\n        }\n    }\n\n    checkLabels();\n}\n\nfunction checkLabels() {\n    const button_save = document.querySelectorAll('.btn-primary');\n    for (let button of button_save) {\n        if (button.innerText.includes('Сохранить')) {\n            if (ViewContext.data.view_error_child_date === true || ViewContext.data.view_sex_error === true) {\n                button.disabled = true;\n            } else {\n                button.disabled = false;\n            }\n        }\n    }\n}\nasync function changeType(): Promise\u003cvoid\u003e {\n    if (Context.data.relation_degree) {\n        if (Context.data.relation_degree.code == \"husband_wife\") {\n            ViewContext.data.view_marriage_certificate = true;\n        } else {\n            ViewContext.data.view_marriage_certificate = false;\n        }\n\n        if (Context.data.relation_degree.code == \"child\") {\n            ViewContext.data.view_birth_certificate = true;\n        } else {\n            ViewContext.data.view_birth_certificate = false;\n        }\n\n        if (Context.data.relation_degree.code == \"mother\") {\n            Context.data.sex = Context.fields.sex.variants.female;\n        }\n\n        if (Context.data.relation_degree.code == \"father\") {\n            Context.data.sex = Context.fields.sex.variants.male;\n        }\n\n        if (Context.data.relation_degree.code == \"sister\") {\n            Context.data.sex = Context.fields.sex.variants.female;\n        }\n\n        if (Context.data.relation_degree.code == \"brother\") {\n            Context.data.sex = Context.fields.sex.variants.male;\n        }\n    }\n\n    checkLabels();\n}\n\nasync function checkSex(): Promise\u003cvoid\u003e {\n    if (Context.data.relation_degree \u0026\u0026 Context.data.sex) {\n        if ((Context.data.relation_degree.code == \"mother\" || Context.data.relation_degree.code == \"sister\") \u0026\u0026 Context.data.sex.code == \"male\") {\n            ViewContext.data.view_sex_error = true;\n            ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n\n            checkLabels();\n            return;\n        } else {\n            ViewContext.data.view_sex_error = false;\n            ViewContext.data.sex_error = '';\n        }\n\n        if ((Context.data.relation_degree.code == \"father\" || Context.data.relation_degree.code == \"brother\") \u0026\u0026 Context.data.sex.code == \"female\") {\n            ViewContext.data.view_sex_error = true;\n            ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n\n            checkLabels();\n            return;\n        } else {\n            ViewContext.data.view_sex_error = false;\n            ViewContext.data.sex_error = '';\n        }\n    }\n\n    checkLabels();\n}\n\nasync function checkSnils(): Promise\u003cvoid\u003e {\n    if (Context.data.snils) {\n        let split_str = Context.data.snils.match(/(\\d{1,3})/g);\n        if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n            Context.data.snils = split_str[0] + '-' + split_str[1];\n        }\n        if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n            Context.data.snils += '-' + split_str[2];\n        }\n\n        if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n            Context.data.snils += ' ' + split_str![3];\n        }\n    }\n}\n",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "widgetZones": [
      {
        "code": "[footer]"
      }
    ],
    "dataFieldCode": "item"
  },
  "dataNamespace": "kedo",
  "dataCode": "family_composition_app",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            const current_user = await System.users.getCurrentUser();\n            let staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(current_user))).first();\n            if (staff) {\n                Context.data.staff = staff;\n            }\n            Context.fields.staff.data.setFilter((f, c, g) =\u003e g.and(f.ext_user.eq(current_user)));\n        }\n        async function changeChildDate() {\n            if (Context.data.birth_date) {\n                const current_date = new TDate();\n                if (Context.data.birth_date.after(current_date)) {\n                    ViewContext.data.error_child_date = \"Дата рождения не может быть позднее текущей даты.\";\n                    ViewContext.data.view_error_child_date = true;\n                }\n                else {\n                    ViewContext.data.error_child_date = \"\";\n                    ViewContext.data.view_error_child_date = false;\n                }\n            }\n            checkLabels();\n        }\n        function checkLabels() {\n            const button_save = document.querySelectorAll('.btn-primary');\n            for (let button of button_save) {\n                if (button.innerText.includes('Сохранить')) {\n                    if (ViewContext.data.view_error_child_date === true || ViewContext.data.view_sex_error === true) {\n                        button.disabled = true;\n                    }\n                    else {\n                        button.disabled = false;\n                    }\n                }\n            }\n        }\n        async function changeType() {\n            if (Context.data.relation_degree) {\n                if (Context.data.relation_degree.code == \"husband_wife\") {\n                    ViewContext.data.view_marriage_certificate = true;\n                }\n                else {\n                    ViewContext.data.view_marriage_certificate = false;\n                }\n                if (Context.data.relation_degree.code == \"child\") {\n                    ViewContext.data.view_birth_certificate = true;\n                }\n                else {\n                    ViewContext.data.view_birth_certificate = false;\n                }\n                if (Context.data.relation_degree.code == \"mother\") {\n                    Context.data.sex = Context.fields.sex.variants.female;\n                }\n                if (Context.data.relation_degree.code == \"father\") {\n                    Context.data.sex = Context.fields.sex.variants.male;\n                }\n                if (Context.data.relation_degree.code == \"sister\") {\n                    Context.data.sex = Context.fields.sex.variants.female;\n                }\n                if (Context.data.relation_degree.code == \"brother\") {\n                    Context.data.sex = Context.fields.sex.variants.male;\n                }\n            }\n            checkLabels();\n        }\n        async function checkSex() {\n            if (Context.data.relation_degree \u0026\u0026 Context.data.sex) {\n                if ((Context.data.relation_degree.code == \"mother\" || Context.data.relation_degree.code == \"sister\") \u0026\u0026 Context.data.sex.code == \"male\") {\n                    ViewContext.data.view_sex_error = true;\n                    ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n                    checkLabels();\n                    return;\n                }\n                else {\n                    ViewContext.data.view_sex_error = false;\n                    ViewContext.data.sex_error = '';\n                }\n                if ((Context.data.relation_degree.code == \"father\" || Context.data.relation_degree.code == \"brother\") \u0026\u0026 Context.data.sex.code == \"female\") {\n                    ViewContext.data.view_sex_error = true;\n                    ViewContext.data.sex_error = 'Указан неккоректный пол родственника.';\n                    checkLabels();\n                    return;\n                }\n                else {\n                    ViewContext.data.view_sex_error = false;\n                    ViewContext.data.sex_error = '';\n                }\n            }\n            checkLabels();\n        }\n        async function checkSnils() {\n            if (Context.data.snils) {\n                let split_str = Context.data.snils.match(/(\\d{1,3})/g);\n                if (split_str \u0026\u0026 split_str[0].length == 3 \u0026\u0026 (split_str[1])) {\n                    Context.data.snils = split_str[0] + '-' + split_str[1];\n                }\n                if (split_str \u0026\u0026 split_str[1].length == 3 \u0026\u0026 (split_str[2])) {\n                    Context.data.snils += '-' + split_str[2];\n                }\n                if (split_str \u0026\u0026 split_str[2].length == 3 \u0026\u0026 (split_str[3])) {\n                    Context.data.snils += ' ' + split_str[3];\n                }\n            }\n        }\n        return {\n            onInit,\n            changeChildDate,\n            checkLabels,\n            changeType,\n            checkSex,\n            checkSnils\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "changeChildDate",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkLabels",
        "parameters": [],
        "type": ""
      },
      {
        "name": "changeType",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkSex",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "checkSnils",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [
        {
          "namespace": "kedo",
          "code": "staff"
        }
      ],
      "pages": []
    }
  },
  "__createdAt": "2024-05-22T10:11:49.891826542Z",
  "__createdBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__updatedAt": "2024-05-29T09:21:42.630470345Z",
  "__updatedBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__deletedAt": null
}
