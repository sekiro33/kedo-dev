{"__id":"018fb8c3-2dc3-71f7-9d85-713fd6093ddd","namespace":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed","code":"_config","__name":"Виджет пользовательских настроек","description":"Данный виджет будет отображаться на странице модуля","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":5,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"2b66ca0f-b8c3-45c8-9854-f9a488147128","descriptor":"component","values":{"systemFunctions":{}},"content":{"":[{"id":"7d7bd35a-d521-4c08-9d55-d7c3a74932cc","descriptor":"modal-body","content":{"":[{"id":"c6008c08-3127-4fc8-8604-424299f55a59","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","portal_logo_svg"]}}}]}}]}},"fields":[{"code":"pokazat_oshibku","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать ошибку","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"show_warning","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать предупреждение","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"show_warning":{"enabled":false,"conditions":[]},"pokazat_oshibku":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const document: any;\ndeclare const console: any;\ndeclare const window: any;\n\ninterface ConnectionInfo {\n    name: string;\n    url: string;\n    password: string;\n    login: string\n}\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    fillRelatedDocumentsTable();\n}\n\nasync function logRealatedDocumentsTable(): Promise\u003cvoid\u003e {\n    const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n\n    if (!related_documents_json) {\n        console.error(\"related_documents is undefined\");\n        return;\n    }\n\n    const related_documents: IRelatedDocuments[] = JSON.parse(related_documents_json);\n\n    console.log(\"Related Documents Table\", related_documents);\n}\n\nasync function fillRelatedDocumentsTable(): Promise\u003cvoid\u003e {\n    const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n\n    let related_documents: IRelatedDocuments[] = [];\n\n    if (related_documents_json) {\n        related_documents = JSON.parse(related_documents_json);\n    }\n\n    //@ts-ignore\n    Context.data.related_documents_table = Context.fields.related_documents_table.create();\n\n    for (const rel_doc of related_documents) {\n        const row = Context.data.related_documents_table.insert();\n\n        row.namespace = rel_doc.namespace;\n        row.code = rel_doc.code;\n\n        for (const doc of rel_doc.documents) {\n            const inner_row = row.documents.insert();\n\n            inner_row.code = doc.code;\n            inner_row.namespace = doc.namespace;\n            inner_row.related_field_code = doc.related_field_code;\n        }\n    }\n\n    Context.data.related_documents_table = Context.data.related_documents_table;\n}\n\nasync function saveNewConnection(): Promise\u003cvoid\u003e {\n    ViewContext.data.pokazat_oshibku = false;\n    ViewContext.data.show_warning = false;\n    const url = Context.data.url_1c_odata ? Context.data.url_1c_odata.trim() : \"\";\n    const password = Context.data.password;\n    const login = Context.data.login;\n\n    if (!url || !password || !login) {\n        ViewContext.data.pokazat_oshibku = true;\n        return;\n    }\n\n    const name = getName(url)\n\n    const newConnection: ConnectionInfo = {\n        name,\n        url,\n        password,\n        login\n    };\n\n    const existingConnections: ConnectionInfo[] = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n    const exists = existingConnections.find(item =\u003e {\n        return item.login === newConnection.login \u0026\u0026 item.password === newConnection.password \u0026\u0026 item.url === newConnection.url\n    })\n\n    if (!!exists) {\n        ViewContext.data.show_warning = true;\n        return;\n    }\n\n    existingConnections.push(newConnection);\n    console.log(existingConnections)\n    Context.data.list_of_connected_platforms = JSON.stringify(existingConnections);\n    renderList()\n}\n\nfunction renderList(): void {\n    const container = document.querySelector(\".kedo-module__connection-list-container\");\n    clearList(container)\n    const data = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n    console.log(data)\n\n    if (data.length === 0) {\n        return;\n    }\n\n    for (let i = 0; i \u003c data.length; i++) {\n        console.log('rendering item')\n        renderItem(data[i], container, data)\n    }\n}\n\nfunction getName(url: string): string {\n    const searchTerm = 'odata/standard.odata';\n    const indexOfFirst = url.indexOf(searchTerm);\n    const splitLink = url.slice(0, indexOfFirst - 1).split('/')\n\n    if (splitLink.length) {\n        return splitLink[splitLink.length - 1]\n    }\n\n    return url\n}\n\nfunction clearList(container: any) {\n    try {\n        container.innerHTML = \"\"\n    } catch (e) { }\n}\n\nfunction renderItem(itemData: ConnectionInfo, container: any, data: ConnectionInfo[]): void {\n    const itemElement = document.querySelector(\".kedo-module__connection-item-template\").content?.cloneNode(true);\n    console.log(itemElement)\n    const nameElement = itemElement.querySelector(\".kedo-module__item-name\");\n    nameElement.innerText = itemData.name;\n\n    const deleteElement = itemElement.querySelector(\".kedo-module__item-control-icons\");\n    deleteElement.addEventListener(\"click\", () =\u003e {\n        const newData = data.filter(item =\u003e {\n            return item.name != itemData.name \u0026\u0026 item.url != itemData.url\n        })\n\n        const stringData = JSON.stringify(newData)\n        Context.data.list_of_connected_platforms = stringData\n        renderList()\n    })\n    console.log(itemElement)\n    container.append(itemElement)\n\n}\n\ninterface IRelatedDocuments {\n    namespace: string,\n    code: string,\n    documents: IDocument[],\n}\n\ninterface IDocument {\n    namespace: string,\n    code: string,\n    related_field_code: string,\n}\n\nasync function saveRelatedDocuments(): Promise\u003cvoid\u003e {\n    const table = Context.data.related_documents_table!;\n\n    const relates: IRelatedDocuments[] = [];\n\n    for (const row of table) {\n        const reltate_row: IRelatedDocuments = {\n            namespace: row.namespace,\n            code: row.code,\n            documents: [],\n        }\n\n        row.documents.forEach((f: any) =\u003e reltate_row.documents.push({\n            namespace: f.namespace,\n            code: f.code,\n            related_field_code: f.related_field_code,\n        }));\n\n        relates.push(reltate_row);\n    }\n\n    await Namespace.storage.setItem(\"related_documents\", JSON.stringify(relates));\n\n    window.alert(\"Даннные успешно обновлены\");\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"dataFieldCode":"item"},"dataNamespace":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            fillRelatedDocumentsTable();\n        }\n        async function logRealatedDocumentsTable() {\n            const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n            if (!related_documents_json) {\n                console.error(\"related_documents is undefined\");\n                return;\n            }\n            const related_documents = JSON.parse(related_documents_json);\n            console.log(\"Related Documents Table\", related_documents);\n        }\n        async function fillRelatedDocumentsTable() {\n            const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n            let related_documents = [];\n            if (related_documents_json) {\n                related_documents = JSON.parse(related_documents_json);\n            }\n            Context.data.related_documents_table = Context.fields.related_documents_table.create();\n            for (const rel_doc of related_documents) {\n                const row = Context.data.related_documents_table.insert();\n                row.namespace = rel_doc.namespace;\n                row.code = rel_doc.code;\n                for (const doc of rel_doc.documents) {\n                    const inner_row = row.documents.insert();\n                    inner_row.code = doc.code;\n                    inner_row.namespace = doc.namespace;\n                    inner_row.related_field_code = doc.related_field_code;\n                }\n            }\n            Context.data.related_documents_table = Context.data.related_documents_table;\n        }\n        async function saveNewConnection() {\n            ViewContext.data.pokazat_oshibku = false;\n            ViewContext.data.show_warning = false;\n            const url = Context.data.url_1c_odata ? Context.data.url_1c_odata.trim() : \"\";\n            const password = Context.data.password;\n            const login = Context.data.login;\n            if (!url || !password || !login) {\n                ViewContext.data.pokazat_oshibku = true;\n                return;\n            }\n            const name = getName(url);\n            const newConnection = {\n                name,\n                url,\n                password,\n                login\n            };\n            const existingConnections = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n            const exists = existingConnections.find(item =\u003e {\n                return item.login === newConnection.login \u0026\u0026 item.password === newConnection.password \u0026\u0026 item.url === newConnection.url;\n            });\n            if (!!exists) {\n                ViewContext.data.show_warning = true;\n                return;\n            }\n            existingConnections.push(newConnection);\n            console.log(existingConnections);\n            Context.data.list_of_connected_platforms = JSON.stringify(existingConnections);\n            renderList();\n        }\n        function renderList() {\n            const container = document.querySelector(\".kedo-module__connection-list-container\");\n            clearList(container);\n            const data = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n            console.log(data);\n            if (data.length === 0) {\n                return;\n            }\n            for (let i = 0; i \u003c data.length; i++) {\n                console.log('rendering item');\n                renderItem(data[i], container, data);\n            }\n        }\n        function getName(url) {\n            const searchTerm = 'odata/standard.odata';\n            const indexOfFirst = url.indexOf(searchTerm);\n            const splitLink = url.slice(0, indexOfFirst - 1).split('/');\n            if (splitLink.length) {\n                return splitLink[splitLink.length - 1];\n            }\n            return url;\n        }\n        function clearList(container) {\n            try {\n                container.innerHTML = \"\";\n            }\n            catch (e) { }\n        }\n        function renderItem(itemData, container, data) {\n            var _a;\n            const itemElement = (_a = document.querySelector(\".kedo-module__connection-item-template\").content) === null || _a === void 0 ? void 0 : _a.cloneNode(true);\n            console.log(itemElement);\n            const nameElement = itemElement.querySelector(\".kedo-module__item-name\");\n            nameElement.innerText = itemData.name;\n            const deleteElement = itemElement.querySelector(\".kedo-module__item-control-icons\");\n            deleteElement.addEventListener(\"click\", () =\u003e {\n                const newData = data.filter(item =\u003e {\n                    return item.name != itemData.name \u0026\u0026 item.url != itemData.url;\n                });\n                const stringData = JSON.stringify(newData);\n                Context.data.list_of_connected_platforms = stringData;\n                renderList();\n            });\n            console.log(itemElement);\n            container.append(itemElement);\n        }\n        async function saveRelatedDocuments() {\n            const table = Context.data.related_documents_table;\n            const relates = [];\n            for (const row of table) {\n                const reltate_row = {\n                    namespace: row.namespace,\n                    code: row.code,\n                    documents: [],\n                };\n                row.documents.forEach((f) =\u003e reltate_row.documents.push({\n                    namespace: f.namespace,\n                    code: f.code,\n                    related_field_code: f.related_field_code,\n                }));\n                relates.push(reltate_row);\n            }\n            await Namespace.storage.setItem(\"related_documents\", JSON.stringify(relates));\n            window.alert(\"Даннные успешно обновлены\");\n        }\n        return {\n            onInit,\n            logRealatedDocumentsTable,\n            fillRelatedDocumentsTable,\n            saveNewConnection,\n            renderList,\n            getName,\n            clearList,\n            renderItem,\n            saveRelatedDocuments\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"logRealatedDocumentsTable","parameters":[],"type":"[object Object]"},{"name":"fillRelatedDocumentsTable","parameters":[],"type":"[object Object]"},{"name":"saveNewConnection","parameters":[],"type":"[object Object]"},{"name":"renderList","parameters":[],"type":"[object Object]"},{"name":"getName","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":"[object Object]"},{"name":"clearList","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""},{"name":"renderItem","parameters":[{"name":"[object Object]","type":"[object Object]"},{"name":"[object Object]","type":"[object Object]"},{"name":"[object Object]","type":"[object Object]"}],"type":"[object Object]"},{"name":"saveRelatedDocuments","parameters":[],"type":"[object Object]"}]},"__createdAt":"2024-05-27T06:35:50.079488015Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-05-31T20:56:13.764431402Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
