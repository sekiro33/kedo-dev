{
  "__id": "018f94d5-0df5-74e1-ba97-6dd099563503",
  "namespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "code": "_config",
  "__name": "Виджет пользовательских настроек",
  "description": "Данный виджет будет отображаться на странице модуля",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 6,
  "hidden": false,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "2b66ca0f-b8c3-45c8-9854-f9a488147128",
      "descriptor": "component",
      "content": {
        "": [
          {
            "id": "7d7bd35a-d521-4c08-9d55-d7c3a74932cc",
            "descriptor": "modal-body",
            "content": {
              "": [
                {
                  "id": "e1ee93dc-ffef-42a8-8e2a-56f3a0ab157f",
                  "descriptor": "tabset",
                  "values": {
                    "__outlet": "",
                    "__baseURL": "",
                    "__relativeURL": "",
                    "__isConstValues": [],
                    "__renderContentAsync": false
                  },
                  "content": {
                    "": [
                      {
                        "id": "6e28b51b-cf9a-4617-9e75-e4f45c0183f5",
                        "descriptor": "tab",
                        "values": {
                          "__renderContentOnDemand": false,
                          "title": "Основное",
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "6c79de69-5465-44fd-b063-56163153b5d9",
                              "descriptor": "modal-body",
                              "content": {
                                "": [
                                  {
                                    "id": "68611849-844f-4595-8244-67de0744b22f",
                                    "descriptor": "groupbox",
                                    "values": {
                                      "title": "Настройка интеграции с 1С ЗУП",
                                      "expanded": true,
                                      "styleEnum": [
                                        {
                                          "code": "default",
                                          "name": "Default"
                                        }
                                      ],
                                      "collapsible": false,
                                      "__isConstValues": [],
                                      "__renderContentAsync": false
                                    },
                                    "content": {
                                      "": [
                                        {
                                          "id": "4f53aad9-c32e-4e17-9815-6b08c555a11f",
                                          "descriptor": "elma-info-block",
                                          "values": {
                                            "text": "Введены неполные данные для нового подключения",
                                            "__hidden": {
                                              "path": ["pokazat_oshibku"],
                                              "modifier": "not"
                                            },
                                            "__styles": "margin-bottom: 12px;",
                                            "typeEnum": [
                                              {
                                                "code": "danger",
                                                "name": "Ошибка (красный)"
                                              }
                                            ],
                                            "__renderContentAsync": false
                                          },
                                          "content": {
                                            "": []
                                          }
                                        },
                                        {
                                          "id": "19ae5090-1a4d-48b8-a5b7-3c46b1cceafb",
                                          "descriptor": "elma-info-block",
                                          "values": {
                                            "__hidden": {
                                              "path": ["show_warning"],
                                              "modifier": "not"
                                            },
                                            "__styles": "margin-bottom: 12px;",
                                            "typeEnum": [
                                              {
                                                "code": "warning",
                                                "name": "Предупреждение (оранжевый)"
                                              }
                                            ],
                                            "__renderContentAsync": false,
                                            "text": "Данная база уже существует"
                                          },
                                          "content": {
                                            "": []
                                          }
                                        },
                                        {
                                          "id": "c6181bc6-4c23-4d1c-adea-7e289ecce86e",
                                          "descriptor": "dynamic-form-row",
                                          "values": {
                                            "__readOnly": null,
                                            "bindingMode": false,
                                            "onChangeValue": {
                                              "kind": "Function",
                                              "name": {},
                                              "type": "client"
                                            },
                                            "showDisplayName": true,
                                            "control": {
                                              "path": ["item", "url_1c_odata"]
                                            },
                                            "tooltip": null,
                                            "required": false,
                                            "hideEmpty": false
                                          }
                                        },
                                        {
                                          "id": "1a2dae4b-a1ac-40b8-87b7-f9c580a3c82d",
                                          "descriptor": "dynamic-form-row",
                                          "values": {
                                            "showDisplayName": true,
                                            "control": {
                                              "path": ["item", "login"]
                                            },
                                            "tooltip": null,
                                            "required": false,
                                            "hideEmpty": false,
                                            "__readOnly": null,
                                            "bindingMode": false
                                          }
                                        },
                                        {
                                          "id": "aa9e298b-315f-471c-87bb-ff671cb59588",
                                          "descriptor": "dynamic-form-row",
                                          "values": {
                                            "control": {
                                              "path": ["item", "password"]
                                            },
                                            "tooltip": null,
                                            "required": false,
                                            "hideEmpty": false,
                                            "__readOnly": null,
                                            "bindingMode": false,
                                            "showDisplayName": true
                                          }
                                        },
                                        {
                                          "id": "5194d3ca-f1e1-40de-af2c-ff6acbad3025",
                                          "descriptor": "button",
                                          "values": {
                                            "runActionEnum": [
                                              {
                                                "code": "undefined",
                                                "name": "shared.common.button@widget-runAction-none",
                                                "translate": true
                                              }
                                            ],
                                            "runProcessSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            },
                                            "createAppItemSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            },
                                            "onClick": {
                                              "kind": "Function",
                                              "name": "saveNewConnection",
                                              "type": "client"
                                            },
                                            "__styles": "margin-top: 12px;",
                                            "action": null,
                                            "runInPopover": null,
                                            "processPopoverSize": [
                                              {
                                                "code": "default",
                                                "name": "shared.common.button@widget-process-popover-size-default",
                                                "translate": true
                                              }
                                            ],
                                            "view": "primary",
                                            "label": "Добавить новую базу"
                                          }
                                        },
                                        {
                                          "id": "131bb5ab-f9ba-4ddc-b867-eee6b5b789ef",
                                          "descriptor": "code",
                                          "values": {
                                            "contentPlaceholder": "Connections list",
                                            "html": "\u003csection class=\"kedo-module__connection-list-container\"\u003e\n    \u003cul class=\"kedo-module__connection-list\"\u003e\n        \n    \u003c/ul\u003e\n\u003c/section\u003e\n\n\u003ctemplate class=\"kedo-module__connection-item-template\"\u003e\n    \u003cli class=\"kedo-module__connection-item\"\u003e\n            \u003cdiv class=\"kedo-module__name-container\"\u003e\n                \u003cp class=\"kedo-module__item-name\"\u003e\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"kedo-module__item-control-icons\"\u003e\n                \u003cdiv class=\"kedo-module__item-delete-icon\"\u003e\u003csvg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n              viewBox=\"0 0 512 512\" xml:space=\"preserve\"\u003e\n            \u003cg\u003e\n              \u003cpath d=\"M85.3,106.7V128h320v341.3H106.7l0-362.7H85.3V128V106.7H64V512h384V85.3H64v21.3H85.3z M21.3,128h469.3V85.3H21.3V128z\n                M192,21.3v21.3h106.7v42.7h-85.3l0-64H192v21.3V21.3h-21.3V128h170.7V0H170.7v21.3H192z M192,21.3v21.3h106.7v42.7h-85.3l0-64H192\n                v21.3V21.3h-21.3V128h170.7V0H170.7v21.3H192z M298.7,192v213.3h42.7V192H298.7z M170.7,192v213.3h42.7V192H170.7z\"/\u003e\n            \u003c/g\u003e\n            \u003c/svg\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/li\u003e\n\u003c/template\u003e\n\u003cstyle\u003e\n    .kedo-module__connection-list-container {\n        margin-top: 20px;\n    }\n    .kedo-module__connection-list-container p {\n        margin-bottom: 0px;\n    }\n    .kedo-module__connection-list {\n        list-style: none;\n        padding: 0;\n    }\n    .kedo-module__connection-item-template {\n    }\n    .kedo-module__connection-item {\n        padding: 8px 0;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        max-width: 500px;\n        border-top: 1px solid #D9D9D9;\n    }\n    .kedo-module__connection-item:last-child {\n        border-bottom: 1px solid #D9D9D9;\n    }\n    .kedo-module__name-container {\n    }\n    .kedo-module__item-name {\n    }\n    .kedo-module__item-control-icons {\n        height: 32px;\n        width: 32px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border-radius: 4px;\n        cursor: pointer;\n    }\n    .kedo-module__item-delete-icon {\n        width: 20px;\n        height: 20px;\n        margin-bottom: 5px;\n    }\n    .kedo-module__item-control-icons:hover, \n    .kedo-module__item-control-icons:focus,\n    .kedo-module__item-control-icons:active {\n        background-color: rgba(35, 49, 84, 0.2);\n    }\n    .kedo-module__item-delete-icon path {\n        color: #D4380D;\n    }\n\u003c/style\u003e",
                                            "hideContent": true
                                          }
                                        },
                                        {
                                          "id": "1fd3c04d-5693-48f4-92d3-a504a9e44839",
                                          "descriptor": "code",
                                          "values": {
                                            "html": "\u003c%= Scripts.renderList() %\u003e\n",
                                            "hideContent": false,
                                            "contentPlaceholder": ""
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "id": "33e3e19d-3990-4e0f-8248-a5bcc90a8376",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__baseURL": "",
                                      "__relativeURL": "",
                                      "__isConstValues": [],
                                      "__renderContentOnDemand": false,
                                      "control": {
                                        "path": ["item", "goskey_info_file"]
                                      },
                                      "tooltip": null,
                                      "__outlet": "",
                                      "bindingMode": false,
                                      "showDisplayName": true,
                                      "required": false,
                                      "hideEmpty": false,
                                      "__readOnly": null
                                    }
                                  },
                                  {
                                    "id": "ad9158ff-a4a8-4692-835f-2f192bd6a483",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "__isConstValues": [],
                                      "control": {
                                        "path": ["item", "kedo_license_file"]
                                      },
                                      "__outlet": "",
                                      "__readOnly": null,
                                      "bindingMode": false,
                                      "__relativeURL": "",
                                      "__renderContentOnDemand": false,
                                      "tooltip": null,
                                      "required": false,
                                      "__baseURL": "",
                                      "hideEmpty": false,
                                      "showDisplayName": true
                                    }
                                  },
                                  {
                                    "id": "c6008c08-3127-4fc8-8604-424299f55a59",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "hideEmpty": false,
                                      "__readOnly": null,
                                      "bindingMode": false,
                                      "__isConstValues": [],
                                      "showDisplayName": true,
                                      "control": {
                                        "path": ["item", "portal_logo_svg"]
                                      },
                                      "tooltip": null,
                                      "required": false
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": "213d704d-5f1d-48ab-9e01-b4715b23dc9a",
                        "descriptor": "tab",
                        "values": {
                          "title": "Таблица связанных документов",
                          "__outlet": "",
                          "__baseURL": "",
                          "__relativeURL": "",
                          "__isConstValues": [],
                          "__renderContentAsync": false,
                          "__renderContentOnDemand": false
                        },
                        "content": {
                          "": [
                            {
                              "id": "09b5cfd9-f0af-4e4d-b1cd-32587541299c",
                              "descriptor": "modal-body",
                              "content": {
                                "": [
                                  {
                                    "id": "dd3a3d9f-3fe4-4a3d-b1de-fe60d5ce48ca",
                                    "descriptor": "dynamic-form-row",
                                    "values": {
                                      "bindingMode": false,
                                      "__isConstValues": [],
                                      "control": {
                                        "path": [
                                          "item",
                                          "related_documents_table"
                                        ]
                                      },
                                      "tooltip": null,
                                      "__outlet": "",
                                      "required": false,
                                      "__baseURL": "",
                                      "hideEmpty": false,
                                      "__readOnly": null,
                                      "__relativeURL": "",
                                      "showDisplayName": true
                                    }
                                  },
                                  {
                                    "id": "196b7c35-22e5-46d6-a785-3ec10928e3f3",
                                    "descriptor": "row-layout",
                                    "values": {
                                      "__outlet": "",
                                      "__baseURL": "",
                                      "__relativeURL": "",
                                      "__isConstValues": [],
                                      "elementsAlignEnum": [
                                        {
                                          "code": "left",
                                          "name": "shared.common.row-layout@widget-elements-align-left"
                                        }
                                      ],
                                      "__renderContentAsync": false
                                    },
                                    "content": {
                                      "": [
                                        {
                                          "id": "34f96ffa-61ff-4032-9ea1-c6e95159873f",
                                          "descriptor": "button",
                                          "values": {
                                            "runInPopover": null,
                                            "__relativeURL": "",
                                            "runActionEnum": [
                                              {
                                                "code": "undefined",
                                                "name": "shared.common.button@widget-runAction-none",
                                                "translate": true
                                              }
                                            ],
                                            "processPopoverSize": [
                                              {
                                                "code": "default",
                                                "name": "shared.common.button@widget-process-popover-size-default",
                                                "translate": true
                                              }
                                            ],
                                            "label": "Сохранить данные",
                                            "onClick": {
                                              "kind": "Function",
                                              "name": "saveRelatedDocuments",
                                              "type": "client"
                                            },
                                            "__outlet": "",
                                            "__baseURL": "",
                                            "createAppItemSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            },
                                            "view": "default",
                                            "action": null,
                                            "__isConstValues": [],
                                            "runProcessSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": "4606fc85-91e5-4d8e-850e-b43ef3d8f31e",
                                          "descriptor": "button",
                                          "values": {
                                            "__relativeURL": "",
                                            "runProcessSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            },
                                            "label": "Вывод JSON в консоль",
                                            "action": null,
                                            "onClick": {
                                              "kind": "Function",
                                              "name": "logRealatedDocumentsTable",
                                              "type": "client"
                                            },
                                            "__outlet": "",
                                            "__baseURL": "",
                                            "runInPopover": null,
                                            "runActionEnum": [
                                              {
                                                "code": "undefined",
                                                "name": "shared.common.button@widget-runAction-none",
                                                "translate": true
                                              }
                                            ],
                                            "__isConstValues": [],
                                            "view": "default",
                                            "createAppItemSettings": {
                                              "kind": "",
                                              "settings": {
                                                "code": "",
                                                "field": "",
                                                "binding": null,
                                                "namespace": ""
                                              }
                                            },
                                            "processPopoverSize": [
                                              {
                                                "code": "default",
                                                "name": "shared.common.button@widget-process-popover-size-default",
                                                "translate": true
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "fields": [
      {
        "code": "pokazat_oshibku",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать ошибку",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          }
        }
      },
      {
        "code": "show_warning",
        "type": "BOOLEAN",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": false,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "Показать предупреждение",
          "data": {
            "additionalType": "radio",
            "noValue": "Нет",
            "yesValue": "Да"
          }
        }
      }
    ],
    "fieldVisibilityConditions": {
      "show_warning": {
        "enabled": false,
        "conditions": []
      },
      "pokazat_oshibku": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\n\ndeclare const document: any;\ndeclare const console: any;\ndeclare const window: any;\n\ninterface ConnectionInfo {\n    name: string;\n    url: string;\n    password: string;\n    login: string\n}\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    fillRelatedDocumentsTable();\n}\n\nasync function logRealatedDocumentsTable(): Promise\u003cvoid\u003e {\n    const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n\n    if (!related_documents_json) {\n        console.error(\"related_documents is undefined\");\n        return;\n    }\n\n    const related_documents: IRelatedDocuments[] = JSON.parse(related_documents_json);\n\n    console.log(\"Related Documents Table\", related_documents);\n}\n\nasync function fillRelatedDocumentsTable(): Promise\u003cvoid\u003e {\n    const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n\n    let related_documents: IRelatedDocuments[] = [];\n\n    if (related_documents_json) {\n        related_documents = JSON.parse(related_documents_json);\n    }\n\n    //@ts-ignore\n    Context.data.related_documents_table = Context.fields.related_documents_table.create();\n\n    for (const rel_doc of related_documents) {\n        const row = Context.data.related_documents_table.insert();\n\n        row.namespace = rel_doc.namespace;\n        row.code = rel_doc.code;\n\n        for (const doc of rel_doc.documents) {\n            const inner_row = row.documents.insert();\n\n            inner_row.code = doc.code;\n            inner_row.namespace = doc.namespace;\n            inner_row.related_field_code = doc.related_field_code;\n        }\n    }\n\n    Context.data.related_documents_table = Context.data.related_documents_table;\n}\n\nasync function saveNewConnection(): Promise\u003cvoid\u003e {\n    ViewContext.data.pokazat_oshibku = false;\n    ViewContext.data.show_warning = false;\n    const url = Context.data.url_1c_odata ? Context.data.url_1c_odata.trim() : \"\";\n    const password = Context.data.password;\n    const login = Context.data.login;\n\n    if (!url || !password || !login) {\n        ViewContext.data.pokazat_oshibku = true;\n        return;\n    }\n\n    const name = getName(url)\n\n    const newConnection: ConnectionInfo = {\n        name,\n        url,\n        password,\n        login\n    };\n\n    const existingConnections: ConnectionInfo[] = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n    const exists = existingConnections.find(item =\u003e {\n        return item.login === newConnection.login \u0026\u0026 item.password === newConnection.password \u0026\u0026 item.url === newConnection.url\n    })\n\n    if (!!exists) {\n        ViewContext.data.show_warning = true;\n        return;\n    }\n\n    existingConnections.push(newConnection);\n    console.log(existingConnections)\n    Context.data.list_of_connected_platforms = JSON.stringify(existingConnections);\n    renderList()\n}\n\nfunction renderList(): void {\n    const container = document.querySelector(\".kedo-module__connection-list-container\");\n    clearList(container)\n    const data = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n    console.log(data)\n\n    if (data.length === 0) {\n        return;\n    }\n\n    for (let i = 0; i \u003c data.length; i++) {\n        console.log('rendering item')\n        renderItem(data[i], container, data)\n    }\n}\n\nfunction getName(url: string): string {\n    const searchTerm = 'odata/standard.odata';\n    const indexOfFirst = url.indexOf(searchTerm);\n    const splitLink = url.slice(0, indexOfFirst - 1).split('/')\n\n    if (splitLink.length) {\n        return splitLink[splitLink.length - 1]\n    }\n\n    return url\n}\n\nfunction clearList(container: any) {\n    try {\n        container.innerHTML = \"\"\n    } catch (e) { }\n}\n\nfunction renderItem(itemData: ConnectionInfo, container: any, data: ConnectionInfo[]): void {\n    const itemElement = document.querySelector(\".kedo-module__connection-item-template\").content?.cloneNode(true);\n    console.log(itemElement)\n    const nameElement = itemElement.querySelector(\".kedo-module__item-name\");\n    nameElement.innerText = itemData.name;\n\n    const deleteElement = itemElement.querySelector(\".kedo-module__item-control-icons\");\n    deleteElement.addEventListener(\"click\", () =\u003e {\n        const newData = data.filter(item =\u003e {\n            return item.name != itemData.name \u0026\u0026 item.url != itemData.url\n        })\n\n        const stringData = JSON.stringify(newData)\n        Context.data.list_of_connected_platforms = stringData\n        renderList()\n    })\n    console.log(itemElement)\n    container.append(itemElement)\n\n}\n\ninterface IRelatedDocuments {\n    namespace: string,\n    code: string,\n    documents: IDocument[],\n}\n\ninterface IDocument {\n    namespace: string,\n    code: string,\n    related_field_code: string,\n}\n\nasync function saveRelatedDocuments(): Promise\u003cvoid\u003e {\n    const table = Context.data.related_documents_table!;\n\n    const relates: IRelatedDocuments[] = [];\n\n    for (const row of table) {\n        const reltate_row: IRelatedDocuments = {\n            namespace: row.namespace,\n            code: row.code,\n            documents: [],\n        }\n\n        row.documents.forEach((f: any) =\u003e reltate_row.documents.push({\n            namespace: f.namespace,\n            code: f.code,\n            related_field_code: f.related_field_code,\n        }));\n\n        relates.push(reltate_row);\n    }\n\n    await Namespace.storage.setItem(\"related_documents\", JSON.stringify(relates));\n\n    window.alert(\"Даннные успешно обновлены\");\n}\n",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "dataFieldCode": "item"
  },
  "dataNamespace": "ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed",
  "dataCode": "",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            fillRelatedDocumentsTable();\n        }\n        async function logRealatedDocumentsTable() {\n            const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n            if (!related_documents_json) {\n                console.error(\"related_documents is undefined\");\n                return;\n            }\n            const related_documents = JSON.parse(related_documents_json);\n            console.log(\"Related Documents Table\", related_documents);\n        }\n        async function fillRelatedDocumentsTable() {\n            const related_documents_json = await Namespace.storage.getItem(\"related_documents\");\n            let related_documents = [];\n            if (related_documents_json) {\n                related_documents = JSON.parse(related_documents_json);\n            }\n            Context.data.related_documents_table = Context.fields.related_documents_table.create();\n            for (const rel_doc of related_documents) {\n                const row = Context.data.related_documents_table.insert();\n                row.namespace = rel_doc.namespace;\n                row.code = rel_doc.code;\n                for (const doc of rel_doc.documents) {\n                    const inner_row = row.documents.insert();\n                    inner_row.code = doc.code;\n                    inner_row.namespace = doc.namespace;\n                    inner_row.related_field_code = doc.related_field_code;\n                }\n            }\n            Context.data.related_documents_table = Context.data.related_documents_table;\n        }\n        async function saveNewConnection() {\n            ViewContext.data.pokazat_oshibku = false;\n            ViewContext.data.show_warning = false;\n            const url = Context.data.url_1c_odata ? Context.data.url_1c_odata.trim() : \"\";\n            const password = Context.data.password;\n            const login = Context.data.login;\n            if (!url || !password || !login) {\n                ViewContext.data.pokazat_oshibku = true;\n                return;\n            }\n            const name = getName(url);\n            const newConnection = {\n                name,\n                url,\n                password,\n                login\n            };\n            const existingConnections = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n            const exists = existingConnections.find(item =\u003e {\n                return item.login === newConnection.login \u0026\u0026 item.password === newConnection.password \u0026\u0026 item.url === newConnection.url;\n            });\n            if (!!exists) {\n                ViewContext.data.show_warning = true;\n                return;\n            }\n            existingConnections.push(newConnection);\n            console.log(existingConnections);\n            Context.data.list_of_connected_platforms = JSON.stringify(existingConnections);\n            renderList();\n        }\n        function renderList() {\n            const container = document.querySelector(\".kedo-module__connection-list-container\");\n            clearList(container);\n            const data = Context.data.list_of_connected_platforms ? JSON.parse(Context.data.list_of_connected_platforms) : [];\n            console.log(data);\n            if (data.length === 0) {\n                return;\n            }\n            for (let i = 0; i \u003c data.length; i++) {\n                console.log('rendering item');\n                renderItem(data[i], container, data);\n            }\n        }\n        function getName(url) {\n            const searchTerm = 'odata/standard.odata';\n            const indexOfFirst = url.indexOf(searchTerm);\n            const splitLink = url.slice(0, indexOfFirst - 1).split('/');\n            if (splitLink.length) {\n                return splitLink[splitLink.length - 1];\n            }\n            return url;\n        }\n        function clearList(container) {\n            try {\n                container.innerHTML = \"\";\n            }\n            catch (e) { }\n        }\n        function renderItem(itemData, container, data) {\n            var _a;\n            const itemElement = (_a = document.querySelector(\".kedo-module__connection-item-template\").content) === null || _a === void 0 ? void 0 : _a.cloneNode(true);\n            console.log(itemElement);\n            const nameElement = itemElement.querySelector(\".kedo-module__item-name\");\n            nameElement.innerText = itemData.name;\n            const deleteElement = itemElement.querySelector(\".kedo-module__item-control-icons\");\n            deleteElement.addEventListener(\"click\", () =\u003e {\n                const newData = data.filter(item =\u003e {\n                    return item.name != itemData.name \u0026\u0026 item.url != itemData.url;\n                });\n                const stringData = JSON.stringify(newData);\n                Context.data.list_of_connected_platforms = stringData;\n                renderList();\n            });\n            console.log(itemElement);\n            container.append(itemElement);\n        }\n        async function saveRelatedDocuments() {\n            const table = Context.data.related_documents_table;\n            const relates = [];\n            for (const row of table) {\n                const reltate_row = {\n                    namespace: row.namespace,\n                    code: row.code,\n                    documents: [],\n                };\n                row.documents.forEach((f) =\u003e reltate_row.documents.push({\n                    namespace: f.namespace,\n                    code: f.code,\n                    related_field_code: f.related_field_code,\n                }));\n                relates.push(reltate_row);\n            }\n            await Namespace.storage.setItem(\"related_documents\", JSON.stringify(relates));\n            window.alert(\"Даннные успешно обновлены\");\n        }\n        return {\n            onInit,\n            logRealatedDocumentsTable,\n            fillRelatedDocumentsTable,\n            saveNewConnection,\n            renderList,\n            getName,\n            clearList,\n            renderItem,\n            saveRelatedDocuments\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "logRealatedDocumentsTable",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "fillRelatedDocumentsTable",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "saveNewConnection",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "renderList",
        "parameters": [],
        "type": "[object Object]"
      },
      {
        "name": "getName",
        "parameters": [
          {
            "name": "[object Object]",
            "type": "[object Object]"
          }
        ],
        "type": "[object Object]"
      },
      {
        "name": "clearList",
        "parameters": [
          {
            "name": "[object Object]",
            "type": "[object Object]"
          }
        ],
        "type": ""
      },
      {
        "name": "renderItem",
        "parameters": [
          {
            "name": "[object Object]",
            "type": "[object Object]"
          },
          {
            "name": "[object Object]",
            "type": "[object Object]"
          },
          {
            "name": "[object Object]",
            "type": "[object Object]"
          }
        ],
        "type": "[object Object]"
      },
      {
        "name": "saveRelatedDocuments",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [],
      "pages": []
    }
  },
  "__createdAt": "2024-05-20T07:09:01.811300272Z",
  "__createdBy": "15e86d51-328d-4620-a8d4-5551b25854ae",
  "__updatedAt": "2024-05-21T13:51:22.086966043Z",
  "__updatedBy": "15e86d51-328d-4620-a8d4-5551b25854ae",
  "__deletedAt": null
}
