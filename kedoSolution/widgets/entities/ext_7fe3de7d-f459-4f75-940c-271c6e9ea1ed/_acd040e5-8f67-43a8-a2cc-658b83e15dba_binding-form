{"__id":"018c8758-578b-7f0a-93f1-71f01ecf3dc0","namespace":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed","code":"_acd040e5-8f67-43a8-a2cc-658b83e15dba_binding-form","__name":"acd040e5-8f67-43a8-a2cc-658b83e15dba_binding-form","description":"app.modules.admin.integration.settings@binding-form-description","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form","custom-activity-binding-form"],"template":{"id":"2eef3995-df0d-4d1c-8d49-e2ad466c7d19","descriptor":"component","values":{"systemFunctions":{"validate":{"kind":"Function","name":"validation","type":"client"}}},"content":{"":[{"id":"7d7bd35a-d521-4c08-9d55-d7c3a74932cc","descriptor":"modal-body","content":{"":[{"id":"414025aa-42e0-48ae-8eea-9386c8d6edb1","descriptor":"groupbox","values":{"title":" ","expanded":true,"styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"75d030f4-ba72-4bc2-8d87-cf40ba170c74","descriptor":"dynamic-form-row","values":{"control":{"path":["execution_date"]},"tooltip":null,"required":true,"__readOnly":null,"bindingMode":false,"hideEmpty":false,"onChangeValue":{"kind":"Function","name":"execution_date_onchange","type":"client"},"__isConstValues":[],"showDisplayName":true}},{"id":"b492a063-e03e-487a-8c6c-99655ebd6077","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":true,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["item","execution_time"]}}},{"id":"d2469207-62cc-4c31-a090-fb93e92af1ce","descriptor":"dynamic-form-row","values":{"__readOnly":null,"bindingMode":false,"showDisplayName":true,"tooltip":null,"hideEmpty":false,"onChangeValue":{"kind":"Function","name":"change_correcting_variant","type":"client"},"__isConstValues":[],"control":{"path":["correct_date"]},"required":false}}]}},{"id":"dfbfe899-d680-4a03-b779-b48433af13af","descriptor":"groupbox","values":{"expanded":true,"styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"__isConstValues":[],"__renderContentAsync":false,"title":" "},"content":{"":[{"id":"d569bed0-292a-44fa-ab9e-9c9409e1fd55","descriptor":"row","values":{"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"409f592a-ed3b-4485-b55f-19971d244683","descriptor":"column","content":{"":[{"id":"e5a74676-aea3-4586-9b88-a1863728c7ac","descriptor":"dynamic-form-row","values":{"__readOnly":null,"onChangeValue":{"kind":"Function","name":"execution_date_onchange","type":"client"},"__isConstValues":[],"showDisplayName":true,"control":{"path":["days"]},"required":false,"hideEmpty":false,"bindingMode":false,"tooltip":null}}]}},{"id":"e888088d-5853-4170-a577-2c20998a50d7","descriptor":"column","content":{"":[{"id":"4ef2b628-92e9-456b-bfdd-8cfa52f838ed","descriptor":"dynamic-form-row","values":{"control":{"path":["hours"]},"tooltip":null,"hideEmpty":false,"onChangeValue":{"kind":"Function","name":"execution_date_onchange","type":"client"},"__isConstValues":[],"showDisplayName":true,"required":false,"__readOnly":null,"bindingMode":false}}]}},{"id":"7596843c-924d-4256-bf89-06a7dc73abc1","descriptor":"column","values":{"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"dcc1170c-40a4-4b0b-9273-e4753533f025","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"required":false,"hideEmpty":false,"__isConstValues":[],"bindingMode":false,"onChangeValue":{"kind":"Function","name":"execution_date_onchange","type":"client"},"control":{"path":["minutes"]},"tooltip":null,"__readOnly":null}}]}},{"id":"5a3de47a-e490-4cc7-8e97-f1efbc18731c","descriptor":"column","values":{"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"440e6fe6-bdb9-466d-b93e-92cc3cabd71d","descriptor":"dynamic-form-row","values":{"tooltip":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"execution_date_onchange","type":"client"},"showDisplayName":true,"control":{"path":["accounting_working_calendar"]},"hideEmpty":false,"__readOnly":null,"__isConstValues":[],"required":false}}]}}]}}]}}]}}]}},"fields":[{"code":"execution_date","type":"DATETIME","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Срок выполнения","data":{"additionalType":"datetime","defaultTimeType":"startOfDay"}}},{"code":"correct_date","type":"ENUM","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"enumItems":[{"code":"none","name":"Не корректировать","checked":true},{"code":"add","name":"Добавить","checked":false},{"code":"sub","name":"Вычесть","checked":false}]},"view":{"name":"Корректировать время","data":{}}},{"code":"days","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":0,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дни","data":{"additionalType":"integer","showRowSeparator":true}}},{"code":"hours","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":0,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Часы","data":{"additionalType":"integer","showRowSeparator":true}}},{"code":"minutes","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":0,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Минуты","data":{"additionalType":"integer","showRowSeparator":true}}},{"code":"accounting_working_calendar","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"С учётом рабочего календаря","data":{"additionalType":"checkbox","noValue":"Нет","yesValue":"Да"}}},{"code":"show_correct_settings","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Отобразить параметры корректировки","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"days":{"enabled":false,"conditions":[]},"hours":{"enabled":false,"conditions":[]},"minutes":{"enabled":false,"conditions":[]},"correct_date":{"enabled":false,"conditions":[]},"execution_date":{"enabled":false,"conditions":[]},"show_correct_settings":{"enabled":false,"conditions":[]},"accounting_working_calendar":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\nasync function change_correcting_variant(): Promise\u003cvoid\u003e {\n    if (ViewContext.data.correct_date) {\n        switch (ViewContext.data.correct_date.code) {\n            case ViewContext.fields.correct_date.variants.add.code:\n                ViewContext.data.show_correct_settings = true;\n                \n            case ViewContext.fields.correct_date.variants.sub.code:\n                ViewContext.data.show_correct_settings = true;\n\n            case ViewContext.fields.correct_date.variants.none.code:\n                ViewContext.data.show_correct_settings = false;\n\n            default:\n                ViewContext.data.show_correct_settings = false;\n        }\n    }\n}\n\nasync function execution_date_onchange(): Promise\u003cvoid\u003e {\n    const correct_variants = ViewContext.fields.correct_date.variants;\n\n    if (ViewContext.data.execution_date) {\n        if (ViewContext.data.correct_date?.code == correct_variants.add.code) {\n            await add_correct();\n        }\n\n        if (ViewContext.data.correct_date?.code == correct_variants.sub.code) {\n            await sub_correct();\n        }\n\n        if (ViewContext.data.correct_date?.code == correct_variants.none.code) {\n            await none_correct();\n        }\n    }\n}\n\nasync function add_correct(): Promise\u003cvoid\u003e {\n    const days = ViewContext.data.days ?? 0;\n    const hours = ViewContext.data.hours ?? 0;\n    const minutes = ViewContext.data.minutes ?? 0;\n\n    let result_date: TDatetime;\n\n    if (ViewContext.data.accounting_working_calendar == true) {\n        const sum_hours = days * 24 + hours + (minutes / 60);\n        result_date = await System.productionSchedule\n            .calcDate(ViewContext.data.execution_date!, new Duration(sum_hours, 'hours'));\n    } else {\n        result_date = ViewContext.data.execution_date!\n            .add(new Duration(days, 'days'))\n            .add(new Duration(hours, 'hours'))\n            .add(new Duration(minutes, 'minutes'));\n    }\n\n    Context.data.execution_time = result_date;\n}\n\nasync function sub_correct(): Promise\u003cvoid\u003e {\n\n}\n\nasync function none_correct(): Promise\u003cvoid\u003e {\n    Context.data.execution_time = ViewContext.data.execution_date;\n}\n\nasync function validation(): Promise\u003cValidationResult\u003e {\n    const validationResult = new ValidationResult();\n    return validationResult;\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"dataFieldCode":"item"},"dataNamespace":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server) {\n        async function change_correcting_variant() {\n            if (ViewContext.data.correct_date) {\n                switch (ViewContext.data.correct_date.code) {\n                    case ViewContext.fields.correct_date.variants.add.code:\n                        ViewContext.data.show_correct_settings = true;\n                    case ViewContext.fields.correct_date.variants.sub.code:\n                        ViewContext.data.show_correct_settings = true;\n                    case ViewContext.fields.correct_date.variants.none.code:\n                        ViewContext.data.show_correct_settings = false;\n                    default:\n                        ViewContext.data.show_correct_settings = false;\n                }\n            }\n        }\n        async function execution_date_onchange() {\n            var _a, _b, _c;\n            const correct_variants = ViewContext.fields.correct_date.variants;\n            if (ViewContext.data.execution_date) {\n                if (((_a = ViewContext.data.correct_date) === null || _a === void 0 ? void 0 : _a.code) == correct_variants.add.code) {\n                    await add_correct();\n                }\n                if (((_b = ViewContext.data.correct_date) === null || _b === void 0 ? void 0 : _b.code) == correct_variants.sub.code) {\n                    await sub_correct();\n                }\n                if (((_c = ViewContext.data.correct_date) === null || _c === void 0 ? void 0 : _c.code) == correct_variants.none.code) {\n                    await none_correct();\n                }\n            }\n        }\n        async function add_correct() {\n            var _a, _b, _c;\n            const days = (_a = ViewContext.data.days) !== null \u0026\u0026 _a !== void 0 ? _a : 0;\n            const hours = (_b = ViewContext.data.hours) !== null \u0026\u0026 _b !== void 0 ? _b : 0;\n            const minutes = (_c = ViewContext.data.minutes) !== null \u0026\u0026 _c !== void 0 ? _c : 0;\n            let result_date;\n            if (ViewContext.data.accounting_working_calendar == true) {\n                const sum_hours = days * 24 + hours + (minutes / 60);\n                result_date = await System.productionSchedule\n                    .calcDate(ViewContext.data.execution_date, new Duration(sum_hours, 'hours'));\n            }\n            else {\n                result_date = ViewContext.data.execution_date\n                    .add(new Duration(days, 'days'))\n                    .add(new Duration(hours, 'hours'))\n                    .add(new Duration(minutes, 'minutes'));\n            }\n            Context.data.execution_time = result_date;\n        }\n        async function sub_correct() {\n        }\n        async function none_correct() {\n            Context.data.execution_time = ViewContext.data.execution_date;\n        }\n        async function validation() {\n            const validationResult = new ValidationResult();\n            return validationResult;\n        }\n        return {\n            change_correcting_variant,\n            execution_date_onchange,\n            add_correct,\n            sub_correct,\n            none_correct,\n            validation\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"change_correcting_variant","parameters":[],"type":"[object Object]"},{"name":"execution_date_onchange","parameters":[],"type":"[object Object]"},{"name":"add_correct","parameters":[],"type":"[object Object]"},{"name":"sub_correct","parameters":[],"type":"[object Object]"},{"name":"none_correct","parameters":[],"type":"[object Object]"},{"name":"validation","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:09:22.953289573Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:09:35.846705045Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
