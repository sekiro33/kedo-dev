{"__id":"018c8758-5c0f-7f3b-9af0-a01b12a9aa3e","namespace":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed","code":"vacations_list","__name":"Отпуска - список","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":6,"hidden":false,"draft":false,"readonly":false,"descriptor":{"template":{"id":"92b18317-3ebf-4a02-8624-c2e14cc2f23d","descriptor":"component","content":{"":[{"id":"a966d7f1-256a-424e-98e4-53e9c5ea7e1b","descriptor":"code","values":{"html":"\u003cdiv class=\"kedo__vacation-docs-content\"\u003e\n  \u003ch3 class=\"kedo__vacation-docs-title\"\u003eОтпуска\u003c/h3\u003e\n\n  \u003cdiv class=\"kedo__vacation-docs-files-wrapper\"\u003e   \n    \u003cdiv class=\"kedo-loader-docs-vacation-wrapper\"\u003e\n      \u003cdiv class=\"kedo-loader-img-vacation\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n     \n    \u003cdiv class=\"kedo__vacation-docs-table-head \"\u003e\n      \u003cp class=\"kedo__vacation-docs-table-head-text\"\u003eНазвание\u003c/p\u003e\n      \u003cp class=\"kedo__vacation-docs-table-head-text\"\u003eДата начала\u003c/p\u003e\n      \u003cp class=\"kedo__vacation-docs-table-head-text\"\u003eДата окончания\u003c/p\u003e\n      \u003cdiv class=\"kedo__vacation-docs-table-head-status-wrapper\"\u003e\n        \u003cp class=\"kedo__vacation-docs-table-head-text\"\u003eСтатус\u003c/p\u003e\n        \u003cdiv class=\"kedo__vacation-docs-table-head-status-arrow\"\u003e\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"kedo__vacation-docs-table-section\"\u003e\n      \u003cul class=\"kedo__vacation-docs-table-section-list\"\u003e\n      \u003c/ul\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\n\u003ctemplate class=\"kedo__vacation-docs-table-section-list-item-template\"\u003e\n  \u003cli class=\"kedo__vacation-docs-table-section-list-item\"\u003e\n    \u003cdiv class=\"kedo__vacation-docs-table-string-file-name-wrapper\"\u003e\n      \u003cdiv class=\"kedo__vacation-docs-table-string-file-name-img doc-img\"\u003e\u003c/div\u003e\n      \u003ca href=\"\" class=\"kedo__vacation-docs-table-string-file-name\"\u003e\u003c/a\u003e\n    \u003c/div\u003e\n    \u003cp class=\"kedo__vacation-docs-table-string-date kedo__vacation-docs-table-string-date_begin\"\u003e\u003c/p\u003e\n    \u003cp class=\"kedo__vacation-docs-table-string-date kedo__vacation-docs-table-string-date_end\"\u003e\u003c/p\u003e\n    \u003cdiv class=\"kedo__vacation-docs-table-string-status-wrapper\"\u003e\n      \u003cp class=\"kedo__vacation-docs-table-string-status\"\u003e\u003c/p\u003e\n  \u003c/div\u003e\n  \u003c/li\u003e\n\u003c/template\u003e\n","hideContent":true,"contentPlaceholder":"HTML"}},{"id":"74eca664-a813-43d3-8ca1-3456af41b246","descriptor":"code","values":{"contentPlaceholder":"CSS","html":"\n\u003cstyle\u003e\n.kedo__vacation-docs-content {\n  width: 100%;\n  padding: 24px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n  -webkit-box-flex: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n  -ms-flex-item-align: end;\n      align-self: flex-end;\n  -webkit-transition: 0.5s;\n  -o-transition: 0.5s;\n  transition: 0.5s;\n}\n.kedo__vacation-docs-content_hidden{\n  opacity: 0;\n}\n.kedo__vacation-docs-title{\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 32px;\n  margin: 0 0 15px 0px;\n}\n.kedo__vacation-docs-files-wrapper {\n  border-radius: 4px;\n  padding: 10px 0px 30px;\n  min-height: 413px;\n  position: relative;\n}\n.kedo__vacation-docs-table-head {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 2fr 1fr 1fr 120px;\n  grid-template-columns: 2fr 1fr 1fr 120px;\n  gap: 1.2%;\n  border-bottom: 1px solid #CAD1D8;\n  padding: 9px 0;\n}\n.kedo__vacation-docs-table-head-text {\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 140%;\n  margin: 0;\n  padding: 0;\n  color: #8C8C8C;\n}\n.kedo__vacation-docs-table-head-status-wrapper{\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.kedo__vacation-docs-table-head-status-arrow{\n  width: 7px;\n  height: 4px;\n  margin-left: 5px;\n  background: url(data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%228%22%20height%3D%225%22%20viewBox%3D%220%200%208%205%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M0.5%201L4%204.5L7.5%201%22%20stroke%3D%22%238C8C8C%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%2F%3E%0A%3C%2Fsvg%3E%0A) no-repeat center / contain;\n}\n.kedo__vacation-docs-table-section {\n  padding-top: 15px;\n}\n.kedo__vacation-docs-table-section-list {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  -webkit-transition: 0.5s ease-out;\n  -o-transition: 0.5s ease-out;\n  transition: 0.5s ease-out;\n  overflow: hidden;\n}\n\n.kedo__vacation-docs-table-section-list-item {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 2fr 1fr 1fr 120px;\n  grid-template-columns: 2fr 1fr 1fr 120px;\n  gap: 1.2%;\n  padding: 16px 0;\n  border-bottom: 1px solid #CAD1D8;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.kedo__vacation-docs-table-string-file-name-wrapper {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  overflow: hidden;\n}\n.kedo__vacation-docs-table-string-file-name-img {\n  width: 14px;\n  height: 16px;\n  margin-right: 8px;\n}\n.kedo__vacation-docs-table-string-file-name {\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 140%;\n  color: #323232;\n  margin: 0;\n  padding: 0;\n  text-decoration: none;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.kedo__vacation-docs-table-string-file-name:hover {\n  text-decoration: underline;\n}\n.kedo__vacation-docs-table-string-date {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 140%;\n  color: #323232;\n  margin: 0;\n  padding: 0;\n}\n.kedo__vacation-docs-table-string-status-wrapper{\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n.kedo__vacation-docs-table-string-status {\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 14px;\n  margin: 0;\n  border-radius: 4px;\n  padding: 5px 10px;\n  text-align: center;\n}\n.kedo__vacation-docs-table-string-status_agrement {\n  color: #FABE00;\n  border: 1px solid #FABE00;\n  background: rgba(250, 190, 0, 0.1);\n}\n.kedo__vacation-docs-table-string-status_cancel {\n  color: #E62D31;\n  background: rgba(230, 45, 49, 0.1);\n  border: 1px solid #E62D31;\n}\n.kedo__vacation-docs-table-string-status_signed {\n  color: #56B461;\n  background: rgba(86, 180, 97, 0.1);\n  border: 1px solid #56B461;\n}\n.kedo__vacation-docs-table-string-status_default {\n  color: #8C8C8C;\n  background: rgba(140, 140, 140, 0.1);\n  border: 1px solid #8C8C8C;\n}\n.kedo__vacation-docs-table-string-status_on-sign {\n  color: #1E6599;\n  background: rgba(30, 101, 153, 0.1);\n  border: 1px solid #1E6599;\n}\n\n@media (max-width: 1365px){\n  .kedo__vacation-docs-content {\n    width: calc(100% - 40px);\n    max-width: calc(100% - 40px);\n    -ms-flex-item-align: center;\n        -ms-grid-row-align: center;\n        align-self: center;\n  }\n  .kedo__vacation-docs-title{\n    font-style: normal;\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 32px;\n  }\n}\n@media (max-width: 767px){\n  .kedo__vacation-docs-content {\n    margin: 0;\n    padding: 0;\n  }\n  .kedo__vacation-docs-files-wrapper {\n    background: none;\n  }\n  .kedo__vacation-docs-files-wrapper{\n    padding: 0;\n  }\n  .kedo__vacation-docs-table-head{\n    display: none;\n  }\n  .kedo__vacation-docs-table-section-list-item {\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 32% 1.3% 32% 1.3% 32%;\n    grid-template-columns: 32% 32% 32%;\n    -webkit-column-gap: 1.3%;\n       -moz-column-gap: 1.3%;\n            column-gap: 1.3%;\n    row-gap: 10px;\n    padding: 16px 0;\n    border-bottom: 1px solid #CAD1D8;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n  }\n  .kedo__vacation-docs-table-string-file-name-wrapper {\n    -ms-grid-column: 1;\n        grid-column-start: 1;\n    -ms-grid-column-span: 2;\n    grid-column-end: 3;\n    -ms-grid-row: 1;\n        grid-row-start: 1;\n    -ms-grid-row-span: 1;\n    grid-row-end: 2;\n  }\n  .kedo__vacation-docs-table-string-file-name-img {\n    width: 14px;\n    height: 16px;\n    margin-right: 8px;\n  }\n  .kedo__vacation-docs-table-string-file-name {\n    font-style: normal;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 140%;\n    color: #323232;\n    margin: 0;\n    padding: 0;\n    text-decoration: none;\n  }\n  .kedo__vacation-docs-table-string-file-name:hover {\n    text-decoration: underline;\n  }\n  .kedo__vacation-docs-table-string-date_begin {\n    -ms-grid-column: 1;\n        grid-column-start: 1;\n    -ms-grid-column-span: 1;\n    grid-column-end: 2;\n    -ms-grid-row: 2;\n        grid-row-start: 2;\n    -ms-grid-row-span: 1;\n    grid-row-end: 3;\n    color: #979797;\n  }\n  .kedo__vacation-docs-table-string-date_end {\n    -ms-grid-column: 3;\n        grid-column-start: 3;\n    -ms-grid-column-span: 3;\n    grid-column-end: 4;\n    -ms-grid-row: 2;\n        grid-row-start: 2;\n    -ms-grid-row-span: 1;\n    grid-row-end: 3;\n    color: #979797;\n  }\n  .kedo__vacation-docs-table-string-status {\n    -ms-grid-column: 3;\n        grid-column-start: 3;\n    -ms-grid-column-span: 1;\n    grid-column-end: 4;\n    -ms-grid-row: 1;\n        grid-row-start: 1;\n    -ms-grid-row-span: 1;\n    grid-row-end: 2;\n  }\n}\n\n\u003c/style\u003e\n\n\n\u003cstyle\u003e\n    \n.kedo-loader-docs-vacation-wrapper {\n  position: absolute;\n  top: 0;\n  left: -10px;\n  width: calc(100% + 20px);\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  opacity: 0;\n  visibility: hidden;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-transition: 0.5s;\n  -o-transition: 0.5s;\n  transition: 0.5s;\n}\n.kedo-loader-docs-vacation-wrapper_active{\n  opacity: 1;\n  visibility: visible;\n}\n.kedo-loader-img-vacation {\n  width: 200px;\n  height: 200px;\n  background: url(data:image/svg+xml;charset=utf-8,%3Csvg%20version%3D%221.1%22%20id%3D%22L9%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0A%20%20viewBox%3D%220%200%20100%20100%22%20enable-background%3D%22new%200%200%200%200%22%20xml%3Aspace%3D%22preserve%22%3E%0A%20%20%20%20%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M73%2C50c0-12.7-10.3-23-23-23S27%2C37.3%2C27%2C50%20M30.9%2C50c0-10.5%2C8.5-19.1%2C19.1-19.1S69.1%2C39.5%2C69.1%2C50%22%3E%0A%20%20%20%20%20%20%3CanimateTransform%20%0A%20%20%20%20%20%20%20%20%20attributeName%3D%22transform%22%20%0A%20%20%20%20%20%20%20%20%20attributeType%3D%22XML%22%20%0A%20%20%20%20%20%20%20%20%20type%3D%22rotate%22%0A%20%20%20%20%20%20%20%20%20dur%3D%221s%22%20%0A%20%20%20%20%20%20%20%20%20from%3D%220%2050%2050%22%0A%20%20%20%20%20%20%20%20%20to%3D%22360%2050%2050%22%20%0A%20%20%20%20%20%20%20%20%20repeatCount%3D%22indefinite%22%20%2F%3E%0A%20%20%3C%2Fpath%3E%0A%3C%2Fsvg%3E) no-repeat center / contain;\n}\n\n\u003c/style\u003e\n\n\n","hideContent":true}},{"id":"d1d0f098-65a6-491c-8df5-5b154f987ecd","descriptor":"code","values":{"html":"\u003c% \nif (!!Context.data.user_application \u0026\u0026 Context.data.hide_vacations === false) { \n    Scripts.renderVacationDocsWidget()\n}\nif (Context.data.hide_vacations === true) { \n    Scripts.offHandlersVacations()\n}\n%\u003e\n","hideContent":true,"contentPlaceholder":"RENDER WIDGET"}}]}},"fields":[{"code":"hide_vacations","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Скрыть отпуска","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"output":false}},{"code":"user_application","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"staff","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Приложение пользователя","data":{},"output":false}},{"code":"widget_launched","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Виджет заупщен","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"data_object_files","type":"JSON","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Объект данных файлов","data":{},"input":false,"output":false}},{"code":"error","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Ошибка","data":{"additionalType":"string"},"input":false,"output":false}},{"code":"handlers_running","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Обработчики запущены","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"token","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Токен","data":{"additionalType":"string"},"input":true,"output":false}},{"code":"request_url","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"request_url","data":{"additionalType":"string"},"input":false,"output":false}},{"code":"response","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"response","data":{"additionalType":"string"},"input":false,"output":false}},{"code":"current_user","type":"SYS_USER","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"filter":{"value":{"tf":{}},"enabled":false}},"view":{"name":"Текущий пользователь","data":{},"input":true,"output":false}},{"code":"vacation_contract","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"holidays","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Отпуска (контракт)","data":{},"input":false,"output":false}}],"fieldVisibilityConditions":{"error":{"enabled":false,"conditions":[]},"token":{"enabled":false,"conditions":[]},"response":{"enabled":false,"conditions":[]},"request_url":{"enabled":false,"conditions":[]},"current_user":{"enabled":false,"conditions":[]},"hide_vacations":{"enabled":false,"conditions":[]},"widget_launched":{"enabled":false,"conditions":[]},"handlers_running":{"enabled":false,"conditions":[]},"user_application":{"enabled":false,"conditions":[]},"data_object_files":{"enabled":false,"conditions":[]},"vacation_contract":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const console: any;\ndeclare const window: any;\ndeclare const document: any;\n\ninterface stringData{\n    fileName: string,\n    linkNamespace: string,\n    linkCode: string,\n    linkId: string,\n    fileType: string,\n    fileDateStart: string,\n    fileDateEnd: string,\n    statusText: string,\n    statusCode: string\n}\n\n// время обновления страницы, с\nconst pageRefreshTimeVacations = 60;\n\nconst host = window.location.host;\nconst currentDate = new Datetime();\n\nlet loaderDocsElVacations: any;\nlet stringOfDocsIdsVacations:string = '';\nlet wrapperDocsVacations:any;\nlet timerCheckFilesVacations:any;\nlet timerClosePopupVacations:any;\n\n\nlet isTaskPopupOpen = false;\n\n\nasync function renderVacationDocsWidget(){\n    if(Context.data.handlers_running) return;\n    onHandlersVacations();\n\n    if(Context.data.widget_launched) return;\n\n    await getAndRenderDocsVacations();    \n\n    Context.data.widget_launched = true;\n}\n\nasync function offHandlersVacations(){\n    window.clearInterval(timerClosePopupVacations);\n    window.clearInterval(timerCheckFilesVacations);\n\n    contentBody.removeEventListener('scroll', handleWindowScrollVacations);\n    Context.data.handlers_running = false;\n}\n\nasync function onHandlersVacations(){\n    timerClosePopupVacations = window.setInterval(async() =\u003e {\n        await checkTaskPopupVacations();\n    }, 2000);\n\n    timerCheckFilesVacations = window.setInterval(async() =\u003e {\n        await checkUpdateFilesVacations();\n    }, pageRefreshTimeVacations * 1000)\n\n    contentBody.addEventListener('scroll', handleWindowScrollVacations);\n    Context.data.handlers_running = true;\n}\n\nasync function getAndRenderDocsVacations(){\n    loaderDocsElVacations = document.querySelector('.kedo-loader-docs-vacation-wrapper');\n    \n    showLoaderDocsVacations();\n    await getFilesDataObjectVacations();\n\n    sortDataObjByDateVacations();\n    getIdsStringOfDocsVacations();\n    \n    await renderDocumentsVacations();\n    hideLoaderDocsVacations();\n}\n\n\nasync function getFilesDataObjectVacations(): Promise\u003cvoid\u003e {\n    Context.data.data_object_files = [];\n    if(!Context.data.user_application) return;\n\n    // personalDocsAppsArr = await getVacationsApi()\n\n    let personalDocsAppsArr = await Context.fields.vacation_contract.app\n        .search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.staff_user.eq(Context.data.current_user!)\n            // f.end.lte(new TDate()),\n        ))\n        .size(8000)\n        .all()\n\n    \n\n    personalDocsAppsArr.filter((doc) =\u003e {\n        let status = doc.data.status;\n\n        if (!!status) {\n            return !status!.includes(\"cancelled\");\n        };\n        return true;\n    })\n\n    console.log(\"vacations list: \", personalDocsAppsArr)\n\n    if(personalDocsAppsArr.length \u003e 0){\n        await Promise.all(personalDocsAppsArr.map(async(item) =\u003e {\n            Context.data.data_object_files.push(await getElementObjVacations(item));\n        }))\n    }\n}\n\nasync function renderDocumentsVacations() {\n    wrapperDocsVacations = document.querySelector('.kedo__vacation-docs-table-section-list');\n    wrapperDocsTopVacations = wrapperDocsVacations.getBoundingClientRect().top;\n\n    wrapperDocsVacations.textContent = '';\n    \n    // рисуем документы\n    if(Context.data.data_object_files){\n        if(Context.data.data_object_files.length \u003c= 10){\n            for(let i = 0; i \u003c Context.data.data_object_files.length; i++){\n                renderDocumentStringVacations(Context.data.data_object_files[i])\n            };\n            allVacationFilesRendered = true;\n        } else {\n            for(let i = 0; i \u003c 10; i++){\n                renderDocumentStringVacations(Context.data.data_object_files[i])\n            };\n        }\n    }\n}\n\n// lazy loading\nlet contentBody = document.querySelector('app-page-wrapper');\nlet timeOutScrollVacation: any;\nlet documentsBottomPoint: number;\nlet wrapperDocsTopVacations: number;\nlet allVacationFilesRendered = false;\n\nasync function handleWindowScrollVacations(){\n    window.clearTimeout(timeOutScrollVacation);\n\n    if(allVacationFilesRendered){\n        return\n    }\n\n    timeOutScrollVacation = window.setTimeout(async() =\u003e {\n        documentsBottomPoint = wrapperDocsTopVacations + wrapperDocsVacations.offsetHeight;\n        \n        if(documentsBottomPoint - contentBody.scrollTop - window.innerHeight \u003c 150){\n            contentBody.scrollBy(0, -100)\n            try {\n                await renderAllVacationFiles();                    \n            }\n            catch(err){\n                throw new Error(`renderStepItems error ${err}`);\n            }\n            contentBody.scrollBy(0, 100);\n        }\n    }, 200)\n    \n}\n\nasync function renderAllVacationFiles(){\n    if(Context.data.data_object_files){\n        for(let i = 10; i \u003c Context.data.data_object_files.length; i++){\n            renderDocumentStringVacations(Context.data.data_object_files[i])\n        };\n    }\n    allVacationFilesRendered = true;\n}\n\n\nasync function checkTaskPopupVacations(){\n    const taskPopup = document.querySelector('body \u003e elma-form \u003e form \u003e elma-complex-popup \u003e div');\n\n    if(taskPopup){\n        if(!isTaskPopupOpen){\n            isTaskPopupOpen = true;\n            tasksCount = await checkTasksCount();\n        }\n    } else {\n        if(isTaskPopupOpen){\n            isTaskPopupOpen = false;\n            await checkUpdateFilesVacations();\n            await checkAndShowUserTask()\n        }\n    }\n}\n\nlet tasksCount = 0;\n\nasync function checkTasksCount(){\n    const tasks = await System.processes\n        ._searchTasks()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.performers.has(Context.data.current_user!),\n            g.or(\n                f.state.like(ProcessTaskState.inProgress),\n                f.state.like(ProcessTaskState.assignment),\n            )\n        ))\n        .count()\n\n    return tasks;\n}\n\nasync function checkAndShowUserTask(){\n    let iterationNumber = 0;\n    let newTasksCount = 0;\n    let interval: any;\n\n    function showTask(taskId: string){\n        const linkElement = document.createElement('a');\n        const linkString = `https://${host}/_portal/kedo_ext/user_page(p:task/${taskId})`\n        linkElement.href = linkString;\n        document.body.append(linkElement)\n\n        linkElement.click();\n        linkElement.remove();\n    }\n\n    async function showUserTask(){\n        const tasks = await System.processes\n            ._searchTasks()\n            .where((f, g) =\u003e g.and(\n                f.__deletedAt.eq(null),\n                f.performers.has(Context.data.current_user!),\n                g.or(\n                    f.state.like(ProcessTaskState.inProgress),\n                    f.state.like(ProcessTaskState.assignment),\n                )\n            ))\n            .size(newTasksCount - tasksCount)\n            .all()\n\n        for(let i = 0; i \u003c tasks.length; i++){\n            if(tasks[i].data.__createdBy.id === Context.data.current_user!.id){\n                window.clearInterval(interval);\n                showTask(tasks[i].id);\n            }\n        }\n    }\n    \n    interval = window.setInterval(async () =\u003e {\n        if(iterationNumber \u003e 2){\n            window.clearInterval(interval);\n            return;\n        }\n        iterationNumber++;\n\n        newTasksCount = await checkTasksCount();\n\n        if(newTasksCount \u003e tasksCount){\n            await showUserTask();\n        }\n\n    }, 5000) \n}\n\n\nasync function checkUpdateFilesVacations(){\n    const oldIdsStringOfDocs = stringOfDocsIdsVacations;\n        \n    await getFilesDataObjectVacations();\n    sortDataObjByDateVacations();\n    getIdsStringOfDocsVacations();\n\n    if(!stringOfDocsIdsVacations) return;\n    \n    if(oldIdsStringOfDocs !== stringOfDocsIdsVacations){\n        showLoaderDocsVacations();\n\n        await renderDocumentsVacations();\n\n        hideLoaderDocsVacations();\n    }\n}\n\n\nasync function renderDocumentStringVacations(data: stringData){\n    function setStatusStyle(){\n        if(data.statusCode === 'new'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_default');\n            return;\n        }\n        if(data.statusCode === 'ongoing'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n            return;\n        }\n        if(data.statusCode === 'finished'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n            return;\n        }\n        if(data.statusCode === 'transfer'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_agrement');\n            return;\n        }\n        if(data.statusCode === 'agrement'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_agrement');\n            return;\n        }\n        if(data.statusCode === 'signing'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_on-sign');\n            return;\n        }\n        if(data.statusCode === 'signed'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n            return;\n        }\n        if(data.statusCode === 'removed'){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_cancel');\n            return;\n        }\n        if(data.statusCode.length \u003e 0){\n            statusEl.classList.add('kedo__vacation-docs-table-string-status_default');      \n            // statusEl.textContent = '';\n            // return;\n        }\n    }\n\n    const fileString = document.querySelector('.kedo__vacation-docs-table-section-list-item-template').content.cloneNode(true);\n    let fileName = 'Файл';\n\n    if (data.fileName){\n        fileName = data.fileName;\n    }     \n\n    // const nameWrapperEl = fileString.querySelector('.kedo__vacation-docs-table-string-file-name-wrapper');\n    const imgEl = fileString.querySelector('.kedo__vacation-docs-table-string-file-name-img');\n    const linkEl = fileString.querySelector('.kedo__vacation-docs-table-string-file-name');\n    const dateStartEl = fileString.querySelector('.kedo__vacation-docs-table-string-date_begin');\n    const dateEndEl = fileString.querySelector('.kedo__vacation-docs-table-string-date_end');\n    const statusEl = fileString.querySelector('.kedo__vacation-docs-table-string-status');\n\n    linkEl.textContent = fileName;\n\n    // img\n    if(data.fileType.includes('doc')){\n        imgEl.classList.add('doc-img_doc');\n    } else if (data.fileType.includes('pdf')){\n        imgEl.classList.add('doc-img_pdf');\n    }\n\n    // link\n    if(data.linkCode \u0026\u0026 data.linkId \u0026\u0026 data.linkNamespace){\n        linkEl.href = `https://${host}/_portal/kedo_ext/user_page(p:item/${data.linkNamespace}/${data.linkCode}/${data.linkId})`\n    } else {\n        linkEl.href = `https://${host}/_portal/kedo_ext/user_page`\n    }\n    \n    let dateStartText:string = '';        \n    let dateEndText:string = '';        \n    let dateStart: Date|undefined = undefined;\n    let dateEnd: Date|undefined = undefined;\n    \n    dateStart = !data.fileDateStart ? undefined : new Date(data.fileDateStart);\n    dateEnd = !data.fileDateEnd ? undefined : new Date(data.fileDateEnd);\n    \n    if(dateStart){\n        dateStartText = `${dateStart.toLocaleString('ru-RU', { year:'2-digit', month: 'numeric', day: 'numeric'})}`;\n    }   \n    if(dateEnd){\n        // dateEndText = `${dateEnd.toLocaleString('ru-RU', { year:'2-digit', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' })}`;\n        dateEndText = `${dateEnd.toLocaleString('ru-RU', { year:'2-digit', month: 'numeric', day: 'numeric'})}`;\n    }   \n    dateStartEl.textContent = data.fileDateStart;\n    dateEndEl.textContent = data.fileDateEnd;\n\n    // status \n    statusEl.textContent = ''\n    if(data.statusText){\n        statusEl.textContent = data.statusText;\n        setStatusStyle();\n    } else {\n        statusEl.textContent = '';\n    }\n\n    wrapperDocsVacations.append(fileString);\n}\n\nasync function getElementObjVacations(element: any){\n    let fileCode: string = '';\n    let fileId: string = '';\n    let fileNamespace:any =  '';\n    let docapp:any = undefined;\n    let statusText: string = '';\n    let statusCode: string = '';\n    let fileType: string = '';\n    let fileName: string = '';\n    let fileDateStart: string = '';\n    let fileDateEnd: string = '';\n    console.log(element)\n    function setStatusCodeName(){\n        if(!element.data.status) return;\n        statusText = element.data.status.split(\";\")[0];\n        \n        // new - серый\n        // agrement - желтый\n        // signing - синий\n        // signed - зеленый\n        // removed - красынй\n        // переводим оригинальный статус в статус для отрисовки\n\n        switch(statusText){\n            case \"new\":\n            statusText = \"Новый\"\n            statusCode = `new`;\n            break;\n\n            case `agrement`:\n            statusText = \"На согласовании\"\n            statusCode = `agrement`;\n            break;\n\n            case `signing`:\n            statusText = \"На подписании\"\n            statusCode = `signing`;\n            break;\n\n            case `signed`:\n            statusText = \"Подписан\"\n            statusCode = `signed`;\n            break;\n\n            case 'ongoing':\n            statusText = 'В процессе';\n            statusCode = 'ongoing';\n            break;\n\n            case 'transfer':\n            statusText = 'Перенос';\n            statusCode = 'transfer';\n            break;\n\n            case `correction`:\n            statusText = \"На корректировке\"\n            statusCode = `agrement`;\n            break;\n\n            case `cancelled`:\n            statusText = \"Отменён\"\n            statusCode = `removed`;\n            break;\n\n            default:\n            statusCode = `new`;\n            statusText = `Не определен`;\n            break;\n        }\n    }\n\n    function setDocappData(){\n        // if(!element.data){\n        //     return;\n        // }\n        // if(!element.data){\n        //     return;\n        // }\n        \n        if(element.data.__sourceRef.code){\n            fileCode = element.data.__sourceRef.code;\n        }\n        if(element.data.__sourceRef.id){\n            fileId = element.data.__sourceRef.id || element.id;\n        }\n        if(element.data.__sourceRef.namespace){\n            fileNamespace = element.data.__sourceRef.namespace || element.namespace;\n        }\n\n        // fileNamespace = `absences`;\n        // fileCode = `vacations`;\n        // fileId = element[\"__id\"]\n    }\n\n    // docApp\n    setDocappData();\n\n    // await getDocapp();\n    \n    if(element.data[\"__name\"]){\n        fileName = element.data[\"__name\"];\n    }\n    \n    if(element.data[\"start_string\"]){\n        fileDateStart = element.data[\"start_string\"];\n    }\n    if(element.data[\"end_string\"]){\n        fileDateEnd = element.data[\"end_string\"];\n    }\n    \n    setStatusCodeName();\n\n    // if(element \u0026\u0026 element.data.line_file_name){\n    //     const fileItemArr = element.data.line_file_name.split('.');\n    //     if (fileItemArr.length \u003e 1){\n    //         fileType = fileItemArr[fileItemArr.length - 1];\n    //     }\n    // }\n\n    const stringElement: stringData = {\n        fileName,\n        linkNamespace: fileNamespace,\n        linkCode: fileCode,\n        linkId: fileId,\n        fileType,\n        fileDateStart,\n        fileDateEnd,\n        statusText,\n        statusCode: statusCode,\n    }    \n\n    return stringElement;\n}\n\n\n// ===========================================================================================================\nfunction showLoaderDocsVacations(){\n    if(!loaderDocsElVacations) return;\n    loaderDocsElVacations.classList.add(\"kedo-loader-docs-vacation-wrapper_active\");\n}\nfunction hideLoaderDocsVacations(){\n    if(!loaderDocsElVacations) return;\n    loaderDocsElVacations.classList.remove(\"kedo-loader-docs-vacation-wrapper_active\");\n}\n\n\nfunction sortDataObjByDateVacations(){\n    Context.data.data_object_files = Context.data.data_object_files.sort((obj1: stringData, obj2: stringData) =\u003e {\n        if (obj2.fileDateStart \u003e obj1.fileDateStart) {\n            return 1;\n        }\n        if (obj2.fileDateStart \u003c obj1.fileDateStart) {\n            return -1;\n        }\n        return 0;\n    });\n}\n\n\nfunction getIdsStringOfDocsVacations(){\n    stringOfDocsIdsVacations = '';\n\n    if(Context.data.data_object_files){\n        for (let i = 0; i \u003c Context.data.data_object_files.length; i++){\n            stringOfDocsIdsVacations += Context.data.data_object_files[i].linkId;\n            stringOfDocsIdsVacations += Context.data.data_object_files[i].statusCode;\n        }\n    }\n}\n\n\nfunction logErrorVacations(){\n    if(Context.data.error){\n        console.error(Context.data.error)\n    }\n\n    Context.data.error = '';\n}\n\n// async function getVacationsApi(){\n//     let personalDocsAppsArr: any[] = [];\n//     Context.data.request_url =  `https://${host}/pub/v1/app/absences/vacations/list`\n//     if(!Context.data.token){\n//         console.error(`Error: token not found`);\n//     } else {\n//         await Server.rpc.getVacationsApi()\n//         personalDocsAppsArr = JSON.parse(Context.data.response!)\n//     }\n   \n    \n//     return personalDocsAppsArr;\n// }\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        const pageRefreshTimeVacations = 60;\n        const host = window.location.host;\n        const currentDate = new Datetime();\n        let loaderDocsElVacations;\n        let stringOfDocsIdsVacations = '';\n        let wrapperDocsVacations;\n        let timerCheckFilesVacations;\n        let timerClosePopupVacations;\n        let isTaskPopupOpen = false;\n        async function renderVacationDocsWidget() {\n            if (Context.data.handlers_running)\n                return;\n            onHandlersVacations();\n            if (Context.data.widget_launched)\n                return;\n            await getAndRenderDocsVacations();\n            Context.data.widget_launched = true;\n        }\n        async function offHandlersVacations() {\n            window.clearInterval(timerClosePopupVacations);\n            window.clearInterval(timerCheckFilesVacations);\n            contentBody.removeEventListener('scroll', handleWindowScrollVacations);\n            Context.data.handlers_running = false;\n        }\n        async function onHandlersVacations() {\n            timerClosePopupVacations = window.setInterval(async () =\u003e {\n                await checkTaskPopupVacations();\n            }, 2000);\n            timerCheckFilesVacations = window.setInterval(async () =\u003e {\n                await checkUpdateFilesVacations();\n            }, pageRefreshTimeVacations * 1000);\n            contentBody.addEventListener('scroll', handleWindowScrollVacations);\n            Context.data.handlers_running = true;\n        }\n        async function getAndRenderDocsVacations() {\n            loaderDocsElVacations = document.querySelector('.kedo-loader-docs-vacation-wrapper');\n            showLoaderDocsVacations();\n            await getFilesDataObjectVacations();\n            sortDataObjByDateVacations();\n            getIdsStringOfDocsVacations();\n            await renderDocumentsVacations();\n            hideLoaderDocsVacations();\n        }\n        async function getFilesDataObjectVacations() {\n            Context.data.data_object_files = [];\n            if (!Context.data.user_application)\n                return;\n            let personalDocsAppsArr = await Context.fields.vacation_contract.app\n                .search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff_user.eq(Context.data.current_user)))\n                .size(8000)\n                .all();\n            personalDocsAppsArr.filter((doc) =\u003e {\n                let status = doc.data.status;\n                if (!!status) {\n                    return !status.includes(\"cancelled\");\n                }\n                ;\n                return true;\n            });\n            console.log(\"vacations list: \", personalDocsAppsArr);\n            if (personalDocsAppsArr.length \u003e 0) {\n                await Promise.all(personalDocsAppsArr.map(async (item) =\u003e {\n                    Context.data.data_object_files.push(await getElementObjVacations(item));\n                }));\n            }\n        }\n        async function renderDocumentsVacations() {\n            wrapperDocsVacations = document.querySelector('.kedo__vacation-docs-table-section-list');\n            wrapperDocsTopVacations = wrapperDocsVacations.getBoundingClientRect().top;\n            wrapperDocsVacations.textContent = '';\n            if (Context.data.data_object_files) {\n                if (Context.data.data_object_files.length \u003c= 10) {\n                    for (let i = 0; i \u003c Context.data.data_object_files.length; i++) {\n                        renderDocumentStringVacations(Context.data.data_object_files[i]);\n                    }\n                    ;\n                    allVacationFilesRendered = true;\n                }\n                else {\n                    for (let i = 0; i \u003c 10; i++) {\n                        renderDocumentStringVacations(Context.data.data_object_files[i]);\n                    }\n                    ;\n                }\n            }\n        }\n        let contentBody = document.querySelector('app-page-wrapper');\n        let timeOutScrollVacation;\n        let documentsBottomPoint;\n        let wrapperDocsTopVacations;\n        let allVacationFilesRendered = false;\n        async function handleWindowScrollVacations() {\n            window.clearTimeout(timeOutScrollVacation);\n            if (allVacationFilesRendered) {\n                return;\n            }\n            timeOutScrollVacation = window.setTimeout(async () =\u003e {\n                documentsBottomPoint = wrapperDocsTopVacations + wrapperDocsVacations.offsetHeight;\n                if (documentsBottomPoint - contentBody.scrollTop - window.innerHeight \u003c 150) {\n                    contentBody.scrollBy(0, -100);\n                    try {\n                        await renderAllVacationFiles();\n                    }\n                    catch (err) {\n                        throw new Error(`renderStepItems error ${err}`);\n                    }\n                    contentBody.scrollBy(0, 100);\n                }\n            }, 200);\n        }\n        async function renderAllVacationFiles() {\n            if (Context.data.data_object_files) {\n                for (let i = 10; i \u003c Context.data.data_object_files.length; i++) {\n                    renderDocumentStringVacations(Context.data.data_object_files[i]);\n                }\n                ;\n            }\n            allVacationFilesRendered = true;\n        }\n        async function checkTaskPopupVacations() {\n            const taskPopup = document.querySelector('body \u003e elma-form \u003e form \u003e elma-complex-popup \u003e div');\n            if (taskPopup) {\n                if (!isTaskPopupOpen) {\n                    isTaskPopupOpen = true;\n                    tasksCount = await checkTasksCount();\n                }\n            }\n            else {\n                if (isTaskPopupOpen) {\n                    isTaskPopupOpen = false;\n                    await checkUpdateFilesVacations();\n                    await checkAndShowUserTask();\n                }\n            }\n        }\n        let tasksCount = 0;\n        async function checkTasksCount() {\n            const tasks = await System.processes\n                ._searchTasks()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.performers.has(Context.data.current_user), g.or(f.state.like(ProcessTaskState.inProgress), f.state.like(ProcessTaskState.assignment))))\n                .count();\n            return tasks;\n        }\n        async function checkAndShowUserTask() {\n            let iterationNumber = 0;\n            let newTasksCount = 0;\n            let interval;\n            function showTask(taskId) {\n                const linkElement = document.createElement('a');\n                const linkString = `https://${host}/_portal/kedo_ext/user_page(p:task/${taskId})`;\n                linkElement.href = linkString;\n                document.body.append(linkElement);\n                linkElement.click();\n                linkElement.remove();\n            }\n            async function showUserTask() {\n                const tasks = await System.processes\n                    ._searchTasks()\n                    .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.performers.has(Context.data.current_user), g.or(f.state.like(ProcessTaskState.inProgress), f.state.like(ProcessTaskState.assignment))))\n                    .size(newTasksCount - tasksCount)\n                    .all();\n                for (let i = 0; i \u003c tasks.length; i++) {\n                    if (tasks[i].data.__createdBy.id === Context.data.current_user.id) {\n                        window.clearInterval(interval);\n                        showTask(tasks[i].id);\n                    }\n                }\n            }\n            interval = window.setInterval(async () =\u003e {\n                if (iterationNumber \u003e 2) {\n                    window.clearInterval(interval);\n                    return;\n                }\n                iterationNumber++;\n                newTasksCount = await checkTasksCount();\n                if (newTasksCount \u003e tasksCount) {\n                    await showUserTask();\n                }\n            }, 5000);\n        }\n        async function checkUpdateFilesVacations() {\n            const oldIdsStringOfDocs = stringOfDocsIdsVacations;\n            await getFilesDataObjectVacations();\n            sortDataObjByDateVacations();\n            getIdsStringOfDocsVacations();\n            if (!stringOfDocsIdsVacations)\n                return;\n            if (oldIdsStringOfDocs !== stringOfDocsIdsVacations) {\n                showLoaderDocsVacations();\n                await renderDocumentsVacations();\n                hideLoaderDocsVacations();\n            }\n        }\n        async function renderDocumentStringVacations(data) {\n            function setStatusStyle() {\n                if (data.statusCode === 'new') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_default');\n                    return;\n                }\n                if (data.statusCode === 'ongoing') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n                    return;\n                }\n                if (data.statusCode === 'finished') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n                    return;\n                }\n                if (data.statusCode === 'transfer') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_agrement');\n                    return;\n                }\n                if (data.statusCode === 'agrement') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_agrement');\n                    return;\n                }\n                if (data.statusCode === 'signing') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_on-sign');\n                    return;\n                }\n                if (data.statusCode === 'signed') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_signed');\n                    return;\n                }\n                if (data.statusCode === 'removed') {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_cancel');\n                    return;\n                }\n                if (data.statusCode.length \u003e 0) {\n                    statusEl.classList.add('kedo__vacation-docs-table-string-status_default');\n                }\n            }\n            const fileString = document.querySelector('.kedo__vacation-docs-table-section-list-item-template').content.cloneNode(true);\n            let fileName = 'Файл';\n            if (data.fileName) {\n                fileName = data.fileName;\n            }\n            const imgEl = fileString.querySelector('.kedo__vacation-docs-table-string-file-name-img');\n            const linkEl = fileString.querySelector('.kedo__vacation-docs-table-string-file-name');\n            const dateStartEl = fileString.querySelector('.kedo__vacation-docs-table-string-date_begin');\n            const dateEndEl = fileString.querySelector('.kedo__vacation-docs-table-string-date_end');\n            const statusEl = fileString.querySelector('.kedo__vacation-docs-table-string-status');\n            linkEl.textContent = fileName;\n            if (data.fileType.includes('doc')) {\n                imgEl.classList.add('doc-img_doc');\n            }\n            else if (data.fileType.includes('pdf')) {\n                imgEl.classList.add('doc-img_pdf');\n            }\n            if (data.linkCode \u0026\u0026 data.linkId \u0026\u0026 data.linkNamespace) {\n                linkEl.href = `https://${host}/_portal/kedo_ext/user_page(p:item/${data.linkNamespace}/${data.linkCode}/${data.linkId})`;\n            }\n            else {\n                linkEl.href = `https://${host}/_portal/kedo_ext/user_page`;\n            }\n            let dateStartText = '';\n            let dateEndText = '';\n            let dateStart = undefined;\n            let dateEnd = undefined;\n            dateStart = !data.fileDateStart ? undefined : new Date(data.fileDateStart);\n            dateEnd = !data.fileDateEnd ? undefined : new Date(data.fileDateEnd);\n            if (dateStart) {\n                dateStartText = `${dateStart.toLocaleString('ru-RU', { year: '2-digit', month: 'numeric', day: 'numeric' })}`;\n            }\n            if (dateEnd) {\n                dateEndText = `${dateEnd.toLocaleString('ru-RU', { year: '2-digit', month: 'numeric', day: 'numeric' })}`;\n            }\n            dateStartEl.textContent = data.fileDateStart;\n            dateEndEl.textContent = data.fileDateEnd;\n            statusEl.textContent = '';\n            if (data.statusText) {\n                statusEl.textContent = data.statusText;\n                setStatusStyle();\n            }\n            else {\n                statusEl.textContent = '';\n            }\n            wrapperDocsVacations.append(fileString);\n        }\n        async function getElementObjVacations(element) {\n            let fileCode = '';\n            let fileId = '';\n            let fileNamespace = '';\n            let docapp = undefined;\n            let statusText = '';\n            let statusCode = '';\n            let fileType = '';\n            let fileName = '';\n            let fileDateStart = '';\n            let fileDateEnd = '';\n            console.log(element);\n            function setStatusCodeName() {\n                if (!element.data.status)\n                    return;\n                statusText = element.data.status.split(\";\")[0];\n                switch (statusText) {\n                    case \"new\":\n                        statusText = \"Новый\";\n                        statusCode = `new`;\n                        break;\n                    case `agrement`:\n                        statusText = \"На согласовании\";\n                        statusCode = `agrement`;\n                        break;\n                    case `signing`:\n                        statusText = \"На подписании\";\n                        statusCode = `signing`;\n                        break;\n                    case `signed`:\n                        statusText = \"Подписан\";\n                        statusCode = `signed`;\n                        break;\n                    case 'ongoing':\n                        statusText = 'В процессе';\n                        statusCode = 'ongoing';\n                        break;\n                    case 'transfer':\n                        statusText = 'Перенос';\n                        statusCode = 'transfer';\n                        break;\n                    case `correction`:\n                        statusText = \"На корректировке\";\n                        statusCode = `agrement`;\n                        break;\n                    case `cancelled`:\n                        statusText = \"Отменён\";\n                        statusCode = `removed`;\n                        break;\n                    default:\n                        statusCode = `new`;\n                        statusText = `Не определен`;\n                        break;\n                }\n            }\n            function setDocappData() {\n                if (element.data.__sourceRef.code) {\n                    fileCode = element.data.__sourceRef.code;\n                }\n                if (element.data.__sourceRef.id) {\n                    fileId = element.data.__sourceRef.id || element.id;\n                }\n                if (element.data.__sourceRef.namespace) {\n                    fileNamespace = element.data.__sourceRef.namespace || element.namespace;\n                }\n            }\n            setDocappData();\n            if (element.data[\"__name\"]) {\n                fileName = element.data[\"__name\"];\n            }\n            if (element.data[\"start_string\"]) {\n                fileDateStart = element.data[\"start_string\"];\n            }\n            if (element.data[\"end_string\"]) {\n                fileDateEnd = element.data[\"end_string\"];\n            }\n            setStatusCodeName();\n            const stringElement = {\n                fileName,\n                linkNamespace: fileNamespace,\n                linkCode: fileCode,\n                linkId: fileId,\n                fileType,\n                fileDateStart,\n                fileDateEnd,\n                statusText,\n                statusCode: statusCode,\n            };\n            return stringElement;\n        }\n        function showLoaderDocsVacations() {\n            if (!loaderDocsElVacations)\n                return;\n            loaderDocsElVacations.classList.add(\"kedo-loader-docs-vacation-wrapper_active\");\n        }\n        function hideLoaderDocsVacations() {\n            if (!loaderDocsElVacations)\n                return;\n            loaderDocsElVacations.classList.remove(\"kedo-loader-docs-vacation-wrapper_active\");\n        }\n        function sortDataObjByDateVacations() {\n            Context.data.data_object_files = Context.data.data_object_files.sort((obj1, obj2) =\u003e {\n                if (obj2.fileDateStart \u003e obj1.fileDateStart) {\n                    return 1;\n                }\n                if (obj2.fileDateStart \u003c obj1.fileDateStart) {\n                    return -1;\n                }\n                return 0;\n            });\n        }\n        function getIdsStringOfDocsVacations() {\n            stringOfDocsIdsVacations = '';\n            if (Context.data.data_object_files) {\n                for (let i = 0; i \u003c Context.data.data_object_files.length; i++) {\n                    stringOfDocsIdsVacations += Context.data.data_object_files[i].linkId;\n                    stringOfDocsIdsVacations += Context.data.data_object_files[i].statusCode;\n                }\n            }\n        }\n        function logErrorVacations() {\n            if (Context.data.error) {\n                console.error(Context.data.error);\n            }\n            Context.data.error = '';\n        }\n        return {\n            renderVacationDocsWidget,\n            offHandlersVacations,\n            onHandlersVacations,\n            getAndRenderDocsVacations,\n            getFilesDataObjectVacations,\n            renderDocumentsVacations,\n            handleWindowScrollVacations,\n            renderAllVacationFiles,\n            checkTaskPopupVacations,\n            checkTasksCount,\n            checkAndShowUserTask,\n            checkUpdateFilesVacations,\n            renderDocumentStringVacations,\n            getElementObjVacations,\n            showLoaderDocsVacations,\n            hideLoaderDocsVacations,\n            sortDataObjByDateVacations,\n            getIdsStringOfDocsVacations,\n            logErrorVacations\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"renderVacationDocsWidget","parameters":[],"type":""},{"name":"offHandlersVacations","parameters":[],"type":""},{"name":"onHandlersVacations","parameters":[],"type":""},{"name":"getAndRenderDocsVacations","parameters":[],"type":""},{"name":"getFilesDataObjectVacations","parameters":[],"type":"[object Object]"},{"name":"renderDocumentsVacations","parameters":[],"type":""},{"name":"handleWindowScrollVacations","parameters":[],"type":""},{"name":"renderAllVacationFiles","parameters":[],"type":""},{"name":"checkTaskPopupVacations","parameters":[],"type":""},{"name":"checkTasksCount","parameters":[],"type":""},{"name":"checkAndShowUserTask","parameters":[],"type":""},{"name":"checkUpdateFilesVacations","parameters":[],"type":""},{"name":"renderDocumentStringVacations","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""},{"name":"getElementObjVacations","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""},{"name":"showLoaderDocsVacations","parameters":[],"type":""},{"name":"hideLoaderDocsVacations","parameters":[],"type":""},{"name":"sortDataObjByDateVacations","parameters":[],"type":""},{"name":"getIdsStringOfDocsVacations","parameters":[],"type":""},{"name":"logErrorVacations","parameters":[],"type":""}]},"__createdAt":"2023-12-20T13:09:24.106612536Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:09:39.745165353Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
