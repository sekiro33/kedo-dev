{"__id":"018c8758-4742-7e49-bb11-1d4198b842b1","namespace":"personnel_documents.application_for_leave_without_pay","code":"_create","__name":"Форма создания","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":6,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"7bb789b3-fd50-4902-b83a-1186fbd8e0f5","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["item"]}},"content":{"[headerControls]":[],"[headerCustomization]":[],"[footer]":[{"id":"888a6863-6c17-46ae-bd5b-de7f28536db5","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}],"[content]":[{"id":"7d7bd35a-d521-4c08-9d55-d7c3a74932cc","descriptor":"modal-body","content":{"":[{"id":"5c5e99ca-12b9-4455-8bb1-9c4b6e51b218","descriptor":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@converting_dates","descriptorVersion":3,"values":{"date_2_string":{"path":["item","end_line"]},"__renderContentOnDemand":false,"__hidden":true,"__outlet":"","__baseURL":"","__relativeURL":"","date_1_string":{"path":["item","start_line"]},"__isConstValues":[],"date_1":{"path":["item","start_date"]},"date_2":{"path":["item","end_date"]}}},{"id":"06d7111a-ae7e-4160-b2be-45c7e6282e45","descriptor":"dynamic-form-row","values":{"tooltip":null,"control":{"path":["item","staff"]},"__hidden":true,"__outlet":"","showDisplayName":true,"required":false,"__isConstValues":[],"__baseURL":"","hideEmpty":false,"__readOnly":null,"bindingMode":false,"__relativeURL":"","showCreateItem":false,"__renderContentOnDemand":false}},{"id":"e12b334a-6fdb-4545-a402-879f3c512bc5","descriptor":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@staff_position_list_widget","descriptorVersion":43,"values":{"__isConstValues":[],"employment_placement":{"path":["item","employment_placement"]},"staff":{"path":["item","staff"]},"__outlet":"","__styles":"width: 100%;","__baseURL":"","show_type":[{"code":"simple","name":"Простое"}],"__relativeURL":""}},{"id":"7c94dbed-ec42-4368-98e7-6ce04b1cb193","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":true,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"duration_calculate","type":"client"},"showDisplayName":true,"control":{"path":["item","start_date"]}}},{"id":"5f44df62-8ea3-496b-b1f8-8a9778d70e7e","descriptor":"dynamic-form-row","values":{"control":{"path":["item","end_date"]},"tooltip":null,"required":true,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"duration_calculate","type":"client"},"showDisplayName":true}},{"id":"683c9448-35a6-40cd-87d9-6707c4faaf8a","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["item","duration"]},"tooltip":null,"required":false,"__readOnly":true,"bindingMode":false}},{"id":"a283bd70-6004-4ab6-9c79-33ffa1c71266","descriptor":"dynamic-form-row","values":{"bindingMode":false,"showDisplayName":true,"control":{"path":["item","brief_comment"]},"tooltip":null,"required":false,"__readOnly":null}}]}}],"[sidebar]":[{"id":"d66aba74-334f-4f04-b5d9-b0dc06e96ac0","descriptor":"sidebar-widget","content":{"":[{"id":"d5e76f29-e820-414a-b254-a7cf0b2d951b","descriptor":"user-guide"}]}}]}},"fields":[{"code":"staff_hide","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"staff_hide","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"staff_hide":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    let user = await System.users.getCurrentUser();\n    Context.data.staff = await Context.fields.staff.app.search().where(f =\u003e f.ext_user.eq(user)).first();\n    if (Context.data.staff) {\n        let staff = await Context.data.staff!.fetch();\n        Context.data.organizaion = staff.data.organization;\n        let organization = await Context.data.organizaion!.fetch();\n        Context.data.entity = organization.data.entity;\n    }\n    let date = new Date();\n    date.getTimezoneOffset();\n    Context.data.start_line = (-(date.getTimezoneOffset() / 60)).toString();\n}\nasync function duration_calculate(): Promise\u003cvoid\u003e {\n    const start = Context.data.start_date ? Context.data.start_date : undefined;\n    const end = Context.data.end_date ? Context.data.end_date : undefined\n    if (start \u0026\u0026 end) {\n        const duration = end.sub(start);\n        const check = start.sub(end);\n        if (Math.abs(duration.minutes) == 1) {\n            Context.data.start_date = Context.data.start_date!.add(new Duration(3,'hours'));\n            Context.data.end_date = Context.data.end_date!.add(new Duration(3,'hours'))\n        }\n        Context.data.duration = Math.floor(duration.hours / 24) + 1;\n    }\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"personnel_documents","dataCode":"application_for_leave_without_pay","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            let user = await System.users.getCurrentUser();\n            Context.data.staff = await Context.fields.staff.app.search().where(f =\u003e f.ext_user.eq(user)).first();\n            if (Context.data.staff) {\n                let staff = await Context.data.staff.fetch();\n                Context.data.organizaion = staff.data.organization;\n                let organization = await Context.data.organizaion.fetch();\n                Context.data.entity = organization.data.entity;\n            }\n            let date = new Date();\n            date.getTimezoneOffset();\n            Context.data.start_line = (-(date.getTimezoneOffset() / 60)).toString();\n        }\n        async function duration_calculate() {\n            const start = Context.data.start_date ? Context.data.start_date : undefined;\n            const end = Context.data.end_date ? Context.data.end_date : undefined;\n            if (start \u0026\u0026 end) {\n                const duration = end.sub(start);\n                const check = start.sub(end);\n                if (Math.abs(duration.minutes) == 1) {\n                    Context.data.start_date = Context.data.start_date.add(new Duration(3, 'hours'));\n                    Context.data.end_date = Context.data.end_date.add(new Duration(3, 'hours'));\n                }\n                Context.data.duration = Math.floor(duration.hours / 24) + 1;\n            }\n        }\n        return {\n            onInit,\n            duration_calculate\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"duration_calculate","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:09:18.785397188Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-03-14T16:33:34.073810365Z","__updatedBy":"b9287795-55a7-42be-989a-2677b5bb0a2c","__deletedAt":null}
