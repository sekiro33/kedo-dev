{"__id":"018d3b3d-9603-7927-bf4c-cf4956da2875","namespace":"kedo.staff","code":"employment_history","__name":"История занятости сотрудника","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":false,"draft":false,"readonly":false,"descriptor":{"icon":"book_user","template":{"id":"4e73d02a-8180-4208-acc4-df3c026aa51e","descriptor":"component","values":{"systemFunctions":{}},"content":{"":[]}},"fields":[{"code":"staff","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"staff","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Сотрудник","data":{},"input":true,"output":false}}],"fieldVisibilityConditions":{"staff":{"enabled":false,"conditions":[]}},"scriptOptions":{"allowNamespace":true},"clientScripts":"/* Client scripts module */\n\nasync function onInit(): Promise\u003cvoid\u003e {\n\n}\n\nasync function loadHistory(): Promise\u003cvoid\u003e {\n    if (!Context.data.staff) {\n        return;\n    }\n\n    const employment_directory = await Namespace.app.employment_directory.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.staff.link(Context.data.staff!)\n        ))\n        .size(1000)\n        .all();\n}","clientScriptOptions":{"allowNamespace":true,"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{"allowNamespace":true}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n        }\n        async function loadHistory() {\n            if (!Context.data.staff) {\n                return;\n            }\n            const employment_directory = await Namespace.app.employment_directory.search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.staff.link(Context.data.staff)))\n                .size(1000)\n                .all();\n        }\n        return {\n            onInit,\n            loadHistory\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"loadHistory","parameters":[],"type":"[object Object]"}]},"__createdAt":"2024-01-24T11:31:48.35549297Z","__createdBy":"b9287795-55a7-42be-989a-2677b5bb0a2c","__updatedAt":"2024-02-14T11:08:39.65177823Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
