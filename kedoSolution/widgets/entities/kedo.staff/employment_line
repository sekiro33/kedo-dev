{"__id":"018e89f9-2141-7a92-b743-0959ba4bed54","namespace":"kedo.staff","code":"employment_line","__name":"Строка занятости (Создание/Редактирование)","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":7,"hidden":false,"draft":false,"readonly":false,"descriptor":{"icon":"user_id","template":{"id":"8bec1b18-1b57-4898-a446-4ff16a1e6553","descriptor":"component","content":{"":[{"id":"0d939eef-9f5b-4761-8a22-6fa49dab76c2","descriptor":"groupbox","values":{"collapsible":false,"__isConstValues":[],"__renderContentAsync":false,"title":" ","expanded":true,"styleEnum":[{"code":"default","name":"Default"}]},"content":{"":[{"id":"97d691b9-e012-4dc7-9041-c0d8ae1f2127","descriptor":"elma-info-block","values":{"text":{"path":["error_text"]},"__hidden":{"path":["show_errors"],"modifier":"not"},"typeEnum":[{"code":"danger","name":"Ошибка (красный)"}],"__isConstValues":[],"__renderContentAsync":false},"content":{"":[]}},{"id":"effc46fb-d4e1-4f0e-80d5-413ed6484ef8","descriptor":"row","values":{"__outlet":"","__styles":"height: 10%","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"85516adf-30da-4471-8cfc-95096e680dfe","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"50774ca1-cea7-433a-a7e1-6e4566582822","descriptor":"dynamic-form-row","values":{"__relativeURL":"","onChangeValue":{"kind":"Function","name":"position_onchange","type":"client"},"showCreateItem":false,"__isConstValues":[],"__outlet":"","__baseURL":"","__readOnly":null,"hideEmpty":false,"bindingMode":false,"showDisplayName":true,"control":{"path":["position"]},"tooltip":null,"required":true}}]}},{"id":"df866e03-fff8-4791-b9a5-7896f8656e15","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"07dc529c-cdd8-4cc0-88dd-d08b16b83add","descriptor":"dynamic-form-row","values":{"required":false,"__readOnly":true,"bindingMode":false,"control":{"path":["organization"]},"tooltip":null,"hideEmpty":false,"showCreateItem":false,"__isConstValues":[],"showDisplayName":true}}]}},{"id":"18d135b2-64de-4e32-9f47-756fe2d0d6a4","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"1ef2ed08-8a35-4015-9d3d-9b4383cc21f2","descriptor":"dynamic-form-row","values":{"__relativeURL":"","showCreateItem":false,"tooltip":null,"__outlet":"","__baseURL":"","__readOnly":true,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["subdivision"]},"__styles":"white-space: wrap;","required":false,"hideEmpty":false}}]}},{"id":"93f19b53-2fb2-4a2c-bde9-c7c3d3e1100d","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"caa59d95-bafa-4c51-8f61-a62f00e058c6","descriptor":"row-layout","values":{"__isConstValues":[],"elementsAlignEnum":[{"code":"right","name":"По правому краю"}],"__renderContentAsync":false},"content":{"":[{"id":"fd49b2f3-710c-4e58-928c-2392bef3d866","descriptor":"button","values":{"__hidden":{"path":["view_form"]},"runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}],"view":"icon","label":" ","onClick":{"kind":"Function","name":"delete_line_custom","type":"client"},"__styles":"width: auto; min-width: auto;","runInPopover":null,"__isConstValues":[],"processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"icon":"system_trash","action":null,"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}}]}}]}}]}},{"id":"340b8e64-7bc3-43e2-9b64-a9041ecdee1d","descriptor":"row","values":{"__outlet":"","__styles":"height: 10%;","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"02371305-702e-4452-88e9-36137b3df583","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"a7ef6ba0-5aab-4fbe-98e7-d2aa2cdea748","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"showDisplayName":true,"tooltip":null,"hideEmpty":false,"__readOnly":null,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"bindingMode":false,"__relativeURL":"","control":{"path":["type_employment"]},"__outlet":"","required":true,"__baseURL":""}}]}},{"id":"3f04a25a-561c-4a88-9e61-3289334ace0c","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"839c067f-da7f-4944-a19d-cd2dcef59a51","descriptor":"dynamic-form-row","values":{"tooltip":null,"__outlet":"","hideEmpty":false,"__relativeURL":"","showDisplayName":true,"control":{"path":["organization_admission_date"]},"required":true,"__baseURL":"","__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"__isConstValues":[]}}]}},{"id":"e4b83204-5044-497a-b19d-d4f425249739","descriptor":"column","values":{"__styles":"padding: 10px","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"8c2c5d5c-2e2c-49ff-8481-45475f06e3c4","descriptor":"dynamic-form-row","values":{"control":{"path":["position_admission_date"]},"tooltip":null,"__outlet":"","__renderContentOnDemand":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"__isConstValues":[],"required":true,"__baseURL":"","hideEmpty":false,"__readOnly":null,"bindingMode":false,"__relativeURL":"","showDisplayName":true}}]}},{"id":"b916ab1d-2e12-4e8c-a7fc-99b5c1c8fba7","descriptor":"column","values":{"__isConstValues":[],"__renderContentAsync":false,"__styles":"padding: 10px"},"content":{"":[{"id":"2340d679-db01-41f6-bdf9-4ae0a6d18cb1","descriptor":"dynamic-form-row","values":{"required":false,"hideEmpty":false,"__readOnly":null,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"tooltip":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["date_by"]}}}]}}]}},{"id":"9f125a62-87a4-44d7-9677-2a1f3c53392e","descriptor":"row","values":{"__relativeURL":"","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false,"__hidden":true,"__outlet":"","__styles":"height: 10%;","__baseURL":""},"content":{"":[{"id":"e59a8bdb-9e6b-4830-81eb-ed5e8bf41f9a","descriptor":"column","values":{"__renderContentOnDemand":false,"__outlet":"","__styles":"padding:0px;","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false},"content":{"":[]}},{"id":"f2acab87-0aba-4dae-9c06-ed25aca114a3","descriptor":"column","values":{"__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false,"__outlet":"","__styles":""},"content":{"":[{"id":"97510780-f913-4ed7-92b0-a9b7d5af0de7","descriptor":"row","values":{"__renderContentAsync":false,"__renderContentOnDemand":false,"__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[]},"content":{"":[{"id":"96607c5d-bd50-4201-9ad2-086eff57ba49","descriptor":"column","content":{"":[{"id":"569918e8-5814-43e4-a093-564393b3b082","descriptor":"dynamic-form-row","values":{"tooltip":"","__outlet":"","bindingMode":false,"__isConstValues":[],"__renderContentOnDemand":false,"__relativeURL":"","onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"showDisplayName":true,"control":{"path":["number_employment_contract"]},"required":false,"__baseURL":"","hideEmpty":false,"__readOnly":null}}]}},{"id":"fb6e2dfa-be38-472c-b8f2-38449b4c7694","descriptor":"column","content":{"":[{"id":"bc27c47d-a0ad-4f14-a4ab-c8b6d933c518","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["date_employment_contract_as_date"]},"tooltip":null,"__outlet":"","hideEmpty":false,"bindingMode":false,"__isConstValues":[],"__renderContentOnDemand":false,"required":false,"__baseURL":"","__readOnly":null,"__relativeURL":"","onChangeValue":{"kind":"Function","name":"update_line","type":"client"}}}]}}]}}]}}]}},{"id":"2f8f2a37-2985-4412-aa49-89c0b80edaef","descriptor":"groupbox","values":{"title":"Подробности","__styles":"border: none","expanded":{"path":["show_details"]},"styleEnum":[{"code":"default","name":"Default"}],"__readOnly":{"path":["view_form"]},"collapsible":true,"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"524361ed-41bd-4176-93d9-a3af2cc3aa20","descriptor":"row","values":{"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"47906ea6-48e1-4afb-bcf0-a364806cb189","descriptor":"column","values":{"__isConstValues":[],"__renderContentAsync":false,"__styles":"padding: 10px"},"content":{"":[{"id":"e2522728-1ff9-4cbd-83f3-eb3ba09401f6","descriptor":"dynamic-form-row","values":{"control":{"path":["employment_relationship_type"]},"tooltip":null,"hideEmpty":false,"__readOnly":null,"bindingMode":false,"required":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"showCreateItem":false,"__isConstValues":[],"showDisplayName":true}},{"id":"75bde161-26c6-4726-a503-e12df2b96ea1","descriptor":"dynamic-form-row","values":{"bindingMode":false,"showDisplayName":true,"tooltip":null,"hideEmpty":false,"__readOnly":null,"showCreateItem":false,"__isConstValues":[],"control":{"path":["work_place"]},"required":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"}}}]}},{"id":"4856d9ea-4540-4473-95e3-a1298c0ca027","descriptor":"column","values":{"__isConstValues":[],"__renderContentAsync":false,"__styles":"padding: 10px"},"content":{"":[{"id":"49900419-49f3-4047-aaa2-c7fec03f3786","descriptor":"dynamic-form-row","values":{"required":false,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"__isConstValues":[],"control":{"path":["work_schedules"]},"tooltip":null,"hideEmpty":false,"showCreateItem":false,"showDisplayName":true}},{"id":"bae04615-f7ea-41cc-bb72-0121a6432591","descriptor":"dynamic-form-row","values":{"control":{"path":["remote_work"]},"hideEmpty":false,"__isConstValues":[],"showDisplayName":true,"tooltip":null,"required":false,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"}}},{"id":"1a5d880e-5a27-4985-9d8f-0b84db010ad1","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__relativeURL":"","__isConstValues":[],"showDisplayName":true,"control":{"path":["id_1c"]},"hideEmpty":false,"required":false,"__baseURL":"","__readOnly":null,"onChangeValue":{"kind":"Function","name":"update_line","type":"client"},"__renderContentOnDemand":false,"tooltip":null,"__outlet":""}}]}}]}}]}}]}},{"id":"8c1f76ba-13f9-4828-afa0-2b56549cdef1","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"control":{"path":["show_details"]},"hideEmpty":false,"__readOnly":null,"bindingMode":false,"showDisplayName":true,"tooltip":null,"__hidden":true,"required":false,"onChangeValue":{"kind":"Function","name":"details_status_onchange","type":"client"}}},{"id":"ec8d9070-885b-4986-9346-06a900051935","descriptor":"dynamic-form-row","values":{"control":{"path":["errors"]},"required":false,"__readOnly":null,"__isConstValues":[],"tooltip":null,"__hidden":true,"hideEmpty":false,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"errors_onchanged","type":"client"},"showDisplayName":true}}]}},"fields":[{"code":"id","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"ID строки","data":{"additionalType":"integer","showRowSeparator":true},"output":false}},{"code":"organization","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"organization","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Организация","data":{},"output":false}},{"code":"subdivision","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"structural_subdivision","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Отдел","data":{},"output":false}},{"code":"position","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"position","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Позиция ШР","data":{},"output":false}},{"code":"type_employment","type":"ENUM","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"enumItems":[{"code":"main_workplace","name":"Основное место работы","checked":false},{"code":"internal_combination","name":"Внутреннее совместительство","checked":false},{"code":"external_combination","name":"Внешнее совместительство","checked":false}]},"view":{"name":"Вид занятости","data":{},"output":false}},{"code":"work_schedules","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"work_schedules","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"График работы","data":{},"output":false}},{"code":"employment_relationship_type","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"type_employment_relationship","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Вид трудовых отношений","data":{},"output":false}},{"code":"remote_work","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дистанционная работа","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"output":false}},{"code":"work_place","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"workplace","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"personnel_documents","isDependent":false,"linkedFieldCode":""},"view":{"name":"Рабочее место","data":{},"output":false}},{"code":"rate","type":"FLOAT","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Ставка","data":{"additionalType":"float","showRowSeparator":true},"output":false}},{"code":"organization_admission_date","type":"DATETIME","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дата приёма в организацию","data":{"additionalType":"date","defaultTimeType":"startOfDay","timeOptional":false},"output":false}},{"code":"position_admission_date","type":"DATETIME","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дата приёма на позицию","data":{"additionalType":"date","defaultTimeType":"startOfDay","timeOptional":false},"output":false}},{"code":"date_by","type":"DATETIME","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дата по","data":{"additionalType":"date","defaultTimeType":"startOfDay","timeOptional":false},"output":false}},{"code":"id_1c","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"1C ID","data":{"additionalType":"string"}}},{"code":"errors","type":"JSON","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Errors","data":{}}},{"code":"error_text","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Error text","data":{"additionalType":"text"},"input":false,"output":false}},{"code":"details_status","type":"JSON","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Details status","data":{}}},{"code":"show_details","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Show details","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"show_errors","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Show errors","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"cache_guid","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"cache_guid","data":{"additionalType":"string"},"output":false}},{"code":"view_form","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"__oldView form","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"employment_table","type":"TABLE","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"fields":[{"code":"__count","data":null,"type":"FLOAT","view":{"data":{"additionalType":"integer"},"name":"Количество элементов","system":true},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"__index","data":{},"type":"FLOAT","view":{"data":{"additionalType":"integer"},"name":"№","disabled":true},"array":false,"single":true,"deleted":false,"formula":"","indexed":true,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"id","data":{},"type":"FLOAT","view":{"data":{"additionalType":"integer","showRowSeparator":true},"name":"ID строки"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"position","data":{"code":"position","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"Позиция ШР"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"organization","data":{"code":"organization","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"Организация"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"subdivision","data":{"code":"structural_subdivision","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"Подразделение"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"type_employment","data":{"enumItems":[{"code":"main_workplace","name":"Основное место работы","checked":false},{"code":"internal_combination","name":"Внутреннее совместительство","checked":false},{"code":"external_combination","name":"Внешнее совместительство","checked":false}]},"type":"ENUM","view":{"data":{},"name":"Вид занятости"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"work_schedules","data":{"code":"work_schedules","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"График работы"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"employment_relationship_type","data":{"code":"type_employment_relationship","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"Вид трудовых отношений"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"remote_work","data":{},"type":"BOOLEAN","view":{"data":{"noValue":"Нет","yesValue":"Да","additionalType":"radio"},"name":"Дистанционная работа"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"work_place","data":{"code":"workplace","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"personnel_documents","isDependent":false,"linkedFieldCode":""},"type":"SYS_COLLECTION","view":{"data":{"showCreateItem":false},"name":"Рабочее место"},"array":true,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"rate","data":{},"type":"FLOAT","view":{"data":{"additionalType":"float","showRowSeparator":true},"name":"Ставка"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"organization_admission_date","data":{},"type":"DATETIME","view":{"data":{"timeOptional":false,"additionalType":"date","defaultTimeType":"startOfDay"},"name":"__oldДата приёма в организацию"},"array":false,"single":true,"deleted":true,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"position_admission_date","data":{},"type":"DATETIME","view":{"data":{"timeOptional":false,"additionalType":"date","defaultTimeType":"startOfDay"},"name":"__oldДата приёма на позицию"},"array":false,"single":true,"deleted":true,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"admission_date_organization","data":{},"type":"DATETIME","view":{"data":{"timeOptional":false,"additionalType":"date","defaultTimeType":"startOfDay"},"name":"Дата приёма в организацию"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"admission_date_position","data":{},"type":"DATETIME","view":{"data":{"timeOptional":false,"additionalType":"date","defaultTimeType":"startOfDay"},"name":"Дата приёма на позицию"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"date_by","data":{},"type":"DATETIME","view":{"data":{"timeOptional":false,"additionalType":"date","defaultTimeType":"startOfDay"},"name":"Дата по"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false},{"code":"id_1c","data":{},"type":"STRING","view":{"data":{"additionalType":"string"},"name":"1C ID"},"array":false,"single":true,"deleted":false,"formula":"","indexed":false,"required":false,"searchable":false,"defaultValue":null,"calcByFormula":false}],"result":{"id":{"kind":"none","label":"","formula":"sum"},"rate":{"kind":"none","label":"","formula":"sum"},"id_1c":{"kind":"none","label":"","formula":"sum"},"__count":{"kind":"none","label":"","formula":"sum"},"__index":{"kind":"none","label":"","formula":"sum"},"date_by":{"kind":"none","label":"","formula":"sum"},"position":{"kind":"none","label":"","formula":"sum"},"work_place":{"kind":"none","label":"","formula":"sum"},"remote_work":{"kind":"none","label":"","formula":"sum"},"subdivision":{"kind":"none","label":"","formula":"sum"},"organization":{"kind":"none","label":"","formula":"sum"},"work_schedules":{"kind":"none","label":"","formula":"sum"},"type_employment":{"kind":"none","label":"","formula":"sum"},"admission_date_position":{"kind":"none","label":"","formula":"sum"},"position_admission_date":{"kind":"none","label":"","formula":"sum"},"admission_date_organization":{"kind":"none","label":"","formula":"sum"},"organization_admission_date":{"kind":"none","label":"","formula":"sum"},"employment_relationship_type":{"kind":"none","label":"","formula":"sum"}}},"view":{"name":"__oldТаблица занятости","data":{"allowDeleteRows":false,"collapseNestedHeaders":false,"columnsView":{"admission_date_organization":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"admission_date_position":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"date_by":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"employment_relationship_type":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"id":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"id_1c":{"align":"left","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"organization":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"organization_admission_date":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"position":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"position_admission_date":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"rate":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"remote_work":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"subdivision":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"type_employment":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"work_place":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175},"work_schedules":{"align":"left","backgroundColor":"","compression":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"hidden":false,"key":false,"readonly":false,"required":false,"tensile":false,"verticalAlign":"middle","width":175}},"footerHidden":false,"groupingSettings":{"code":"","kind":"None","sort":"asc"},"headerHidden":false,"maxRowCount":0,"relativeWidth":false,"showOrderNumbers":false,"viewTemplate":"Элементов: {$__count}","viewVariant":"table"},"input":false,"output":false}},{"code":"required_field","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"__oldRequired field","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"number_employment_contract","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Номер трудового договора","data":{"additionalType":"string"},"input":true,"output":true}},{"code":"date_employment_contract_as_date","type":"DATETIME","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Дата трудового договора","data":{"additionalType":"date","defaultTimeType":"startOfDay","timeOptional":false},"input":true,"output":true}}],"fieldVisibilityConditions":{"id":{"enabled":false,"conditions":[]},"rate":{"enabled":false,"conditions":[]},"id_1c":{"enabled":false,"conditions":[]},"errors":{"enabled":false,"conditions":[]},"date_by":{"enabled":false,"conditions":[]},"position":{"enabled":false,"conditions":[]},"view_form":{"enabled":false,"conditions":[]},"cache_guid":{"enabled":false,"conditions":[]},"error_text":{"enabled":false,"conditions":[]},"work_place":{"enabled":false,"conditions":[]},"remote_work":{"enabled":false,"conditions":[]},"show_errors":{"enabled":false,"conditions":[]},"subdivision":{"enabled":false,"conditions":[]},"organization":{"enabled":false,"conditions":[]},"show_details":{"enabled":false,"conditions":[]},"details_status":{"enabled":false,"conditions":[]},"required_field":{"enabled":false,"conditions":[]},"work_schedules":{"enabled":false,"conditions":[]},"type_employment":{"enabled":false,"conditions":[]},"employment_table":{"enabled":false,"conditions":[]},"position_admission_date":{"enabled":false,"conditions":[]},"number_employment_contract":{"enabled":false,"conditions":[]},"organization_admission_date":{"enabled":false,"conditions":[]},"employment_relationship_type":{"enabled":false,"conditions":[]},"date_employment_contract_as_date":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const document: any;\ndeclare const console: any;\n\ninterface LineDetail {\n    id: number,\n    position?: string,\n    organizatoin?: string,\n    subdivision?: string,\n    type_employment?: string,\n    work_place?: string,\n    work_schedules?: string,\n    employment_relationship_type?: string,\n    remote_work?: boolean,\n    rate?: number,\n    date_by?: string,\n    admission_date_position?: string,\n    admission_date_organization?: string,\n    id_1c? : string,\n    number_employment_contract?: string,\n    date_employment_contract_as_date?: string,\n}\n\ninterface DetailsStatus {\n    id: number,\n    show_details: boolean\n}\n\ninterface ErrorLine {\n    id: number,\n    error_text: string,\n}\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    Context.fields.position.data.setFilter((appFields, context, globalFilters) =\u003e globalFilters.and(\n        appFields.is_closed.eq(false)\n    ));\n    await init_details_status();\n    await initialzie_errors();\n}\n\nasync function init_details_status(): Promise\u003cvoid\u003e {\n    if (!Context.data.details_status) {\n        Context.data.details_status = [];\n    }\n\n    const details_status: DetailsStatus[] = Context.data.details_status;\n\n    const row: DetailsStatus | undefined = details_status.find(f =\u003e f.id == Context.data.id);\n\n    if (row) {\n        Context.data.show_details = row.show_details;\n    } else {\n        details_status.push({\n            id: Context.data.id!,\n            show_details: Context.data.show_details!,\n        })\n    }\n}\n\nasync function initialzie_errors(): Promise\u003cvoid\u003e {\n    const errors: ErrorLine[] = Context.data.errors ?? [];\n\n    const error_line: ErrorLine | undefined = errors.find(f =\u003e f.id == Context.data.id);\n\n    if (error_line) {\n        show_error(error_line.error_text);\n    }\n}\n\nasync function update_line(): Promise\u003cvoid\u003e {\n    const line_details: LineDetail = {\n        id: Context.data.id!,\n        position: Context.data.position?.id,\n        organizatoin: Context.data.organization?.id,\n        subdivision: Context.data.subdivision?.id,\n        type_employment: Context.data.type_employment?.code,\n        work_place: Context.data.work_place?.id,\n        remote_work: Context.data.remote_work,\n        work_schedules: Context.data.work_schedules?.id,\n        employment_relationship_type: Context.data.employment_relationship_type?.id,\n        rate: Context.data.rate,\n        date_by: Context.data.date_by?.format(),\n        admission_date_position: Context.data.position_admission_date?.format(),\n        admission_date_organization: Context.data.organization_admission_date?.format(),\n        id_1c : Context.data.id_1c,\n        number_employment_contract: Context.data.number_employment_contract,\n        date_employment_contract_as_date: Context.data.date_employment_contract_as_date?.format()\n    }\n\n    await System.cache.setItem(`update_line_${Context.data.cache_guid}`, JSON.stringify(line_details));\n\n    document.querySelector('.update_button_trigger').querySelector('button').click();\n}\n\nasync function delete_line_custom(): Promise\u003cvoid\u003e {\n    const line_details: LineDetail = {\n        id: Context.data.id!,\n    }\n\n    await System.cache.setItem(`delete_line_${Context.data.cache_guid}`, JSON.stringify(line_details));\n\n    document.querySelector('.delete_button_trigger').querySelector('button').click();\n}\n\nfunction show_error(text: string): void {\n    Context.data.error_text = Context.data.error_text ? `${Context.data.error_text} | ${text}` : text;\n    Context.data.show_errors = true;\n}\n\nfunction hide_error(): void {\n    Context.data.error_text = undefined;\n    Context.data.show_errors = false;\n}\n\nasync function errors_onchanged(): Promise\u003cvoid\u003e {\n    if (!Context.data.errors) {\n        return;\n    }\n\n    const errors: ErrorLine[] = Context.data.errors;\n    const line_erros = errors.filter(f =\u003e f.id == Context.data.id);\n\n    hide_error();\n\n    for (const error of line_erros) {\n        show_error(error.error_text);\n    }\n}\n\n/** Событие при изменении позиции ШР. */\nasync function position_onchange(): Promise\u003cvoid\u003e {\n    if (!Context.data.position) {\n        Context.data.subdivision = undefined;\n        Context.data.organization = undefined;\n        return;\n    }\n\n    const position = await Context.data.position.fetch();\n\n    Context.data.subdivision = position.data.subdivision;\n    Context.data.organization = position.data.organization;\n\n    await update_line();\n}\n\nasync function details_status_onchange(): Promise\u003cvoid\u003e {\n    if (!Array.isArray(Context.data.details_status)) {\n        Context.data.details_status = [];\n    }\n\n    const details_status: DetailsStatus[] = Context.data.details_status;\n\n    const old_element: DetailsStatus | undefined = details_status.find((f: any) =\u003e f.id == Context.data.id);\n\n    if (old_element) {\n        old_element.show_details = Context.data.show_details!;\n    } else {\n        details_status.push({\n            id: Context.data.id!,\n            show_details: Context.data.show_details!,\n        })\n    }\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            Context.fields.position.data.setFilter((appFields, context, globalFilters) =\u003e globalFilters.and(appFields.is_closed.eq(false)));\n            await init_details_status();\n            await initialzie_errors();\n        }\n        async function init_details_status() {\n            if (!Context.data.details_status) {\n                Context.data.details_status = [];\n            }\n            const details_status = Context.data.details_status;\n            const row = details_status.find(f =\u003e f.id == Context.data.id);\n            if (row) {\n                Context.data.show_details = row.show_details;\n            }\n            else {\n                details_status.push({\n                    id: Context.data.id,\n                    show_details: Context.data.show_details,\n                });\n            }\n        }\n        async function initialzie_errors() {\n            var _a;\n            const errors = (_a = Context.data.errors) !== null \u0026\u0026 _a !== void 0 ? _a : [];\n            const error_line = errors.find(f =\u003e f.id == Context.data.id);\n            if (error_line) {\n                show_error(error_line.error_text);\n            }\n        }\n        async function update_line() {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            const line_details = {\n                id: Context.data.id,\n                position: (_a = Context.data.position) === null || _a === void 0 ? void 0 : _a.id,\n                organizatoin: (_b = Context.data.organization) === null || _b === void 0 ? void 0 : _b.id,\n                subdivision: (_c = Context.data.subdivision) === null || _c === void 0 ? void 0 : _c.id,\n                type_employment: (_d = Context.data.type_employment) === null || _d === void 0 ? void 0 : _d.code,\n                work_place: (_e = Context.data.work_place) === null || _e === void 0 ? void 0 : _e.id,\n                remote_work: Context.data.remote_work,\n                work_schedules: (_f = Context.data.work_schedules) === null || _f === void 0 ? void 0 : _f.id,\n                employment_relationship_type: (_g = Context.data.employment_relationship_type) === null || _g === void 0 ? void 0 : _g.id,\n                rate: Context.data.rate,\n                date_by: (_h = Context.data.date_by) === null || _h === void 0 ? void 0 : _h.format(),\n                admission_date_position: (_j = Context.data.position_admission_date) === null || _j === void 0 ? void 0 : _j.format(),\n                admission_date_organization: (_k = Context.data.organization_admission_date) === null || _k === void 0 ? void 0 : _k.format(),\n                id_1c: Context.data.id_1c,\n                number_employment_contract: Context.data.number_employment_contract,\n                date_employment_contract_as_date: (_l = Context.data.date_employment_contract_as_date) === null || _l === void 0 ? void 0 : _l.format()\n            };\n            await System.cache.setItem(`update_line_${Context.data.cache_guid}`, JSON.stringify(line_details));\n            document.querySelector('.update_button_trigger').querySelector('button').click();\n        }\n        async function delete_line_custom() {\n            const line_details = {\n                id: Context.data.id,\n            };\n            await System.cache.setItem(`delete_line_${Context.data.cache_guid}`, JSON.stringify(line_details));\n            document.querySelector('.delete_button_trigger').querySelector('button').click();\n        }\n        function show_error(text) {\n            Context.data.error_text = Context.data.error_text ? `${Context.data.error_text} | ${text}` : text;\n            Context.data.show_errors = true;\n        }\n        function hide_error() {\n            Context.data.error_text = undefined;\n            Context.data.show_errors = false;\n        }\n        async function errors_onchanged() {\n            if (!Context.data.errors) {\n                return;\n            }\n            const errors = Context.data.errors;\n            const line_erros = errors.filter(f =\u003e f.id == Context.data.id);\n            hide_error();\n            for (const error of line_erros) {\n                show_error(error.error_text);\n            }\n        }\n        async function position_onchange() {\n            if (!Context.data.position) {\n                Context.data.subdivision = undefined;\n                Context.data.organization = undefined;\n                return;\n            }\n            const position = await Context.data.position.fetch();\n            Context.data.subdivision = position.data.subdivision;\n            Context.data.organization = position.data.organization;\n            await update_line();\n        }\n        async function details_status_onchange() {\n            if (!Array.isArray(Context.data.details_status)) {\n                Context.data.details_status = [];\n            }\n            const details_status = Context.data.details_status;\n            const old_element = details_status.find((f) =\u003e f.id == Context.data.id);\n            if (old_element) {\n                old_element.show_details = Context.data.show_details;\n            }\n            else {\n                details_status.push({\n                    id: Context.data.id,\n                    show_details: Context.data.show_details,\n                });\n            }\n        }\n        return {\n            onInit,\n            init_details_status,\n            initialzie_errors,\n            update_line,\n            delete_line_custom,\n            show_error,\n            hide_error,\n            errors_onchanged,\n            position_onchange,\n            details_status_onchange\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"init_details_status","parameters":[],"type":"[object Object]"},{"name":"initialzie_errors","parameters":[],"type":"[object Object]"},{"name":"update_line","parameters":[],"type":"[object Object]"},{"name":"delete_line_custom","parameters":[],"type":"[object Object]"},{"name":"show_error","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":"[object Object]"},{"name":"hide_error","parameters":[],"type":"[object Object]"},{"name":"errors_onchanged","parameters":[],"type":"[object Object]"},{"name":"position_onchange","parameters":[],"type":"[object Object]"},{"name":"details_status_onchange","parameters":[],"type":"[object Object]"}],"clientDependencies":{"applications":[],"collections":[{"namespace":"kedo","code":"position"}],"pages":[]}},"__createdAt":"2024-03-29T11:29:49.369195105Z","__createdBy":"d78f4b2f-13a2-4903-aeeb-fdb72d5b9d0c","__updatedAt":"2024-04-02T08:09:32.255189199Z","__updatedBy":"1a8a4a0b-7e7e-4e0e-895e-ab2a0a301d1e","__deletedAt":null}
