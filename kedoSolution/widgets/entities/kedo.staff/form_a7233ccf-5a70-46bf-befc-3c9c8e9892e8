{"__id":"018e89f9-37b7-7d58-a8ed-1b08b0b4f1e3","namespace":"kedo.staff","code":"form_a7233ccf-5a70-46bf-befc-3c9c8e9892e8","__name":"Проверить предоставленные данные","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":true,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"a2f1161f-eef7-4568-b3c4-c84d9eda18b1","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formGroup":{"path":["context"]},"__isConstValues":[],"systemFunctions":{},"sidebarAvailable":false,"__renderContentAsync":false,"formType":"task-form"},"content":{"[footer]":[{"id":"31979bac-00bd-4123-a901-9d14190c8dde","descriptor":"buttons-panel","values":{"buttons":{"path":["actionButtons"]}}}],"[content]":[{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"277d48b6-57dc-47c3-879e-cbf016056003","descriptor":"elma-info-block","values":{"__relativeURL":"","__isConstValues":[],"__renderContentAsync":false,"__hidden":{"path":["context","is_not_order_and_ds"],"modifier":"not"},"__outlet":"","typeEnum":[{"code":"warning","name":"Предупреждение (оранжевый)"}],"text":"Данный вид персональных данных не предусматривает использования приказов и дополнительных соглашений. Подробнее в справочнике \"Виды персональных данных\"","__baseURL":"","__renderContentOnDemand":false},"content":{"":[]}},{"id":"f527eb28-9203-44db-b326-6c91fc8a19a6","descriptor":"tabset","values":{"__renderContentAsync":false},"content":{"":[{"id":"b7fae38f-b18b-4493-944a-7eeed699b542","descriptor":"tab","values":{"__renderContentAsync":false,"__renderContentOnDemand":false,"title":"Заявка"},"content":{"":[{"id":"71d81be9-38fd-4844-94f5-046e065c88cd","descriptor":"row","values":{"__renderContentAsync":false,"__isConstValues":[]},"content":{"":[{"id":"1e1924e9-1a8d-467f-98cf-85b9699f0a6c","descriptor":"column","content":{"":[{"id":"8e7dfcf6-338e-43d8-b938-2fe4d2aed11c","descriptor":"elma-info-block","values":{"__hidden":{"path":["show_error"],"modifier":"not"},"typeEnum":[{"code":"danger","name":"Ошибка (красный)"}],"__renderContentAsync":false,"text":"Дата выдачи не может быть больше текущей"},"content":{"":[]}},{"id":"dcdd3e4e-0c49-483b-87c2-8c782a8890f0","descriptor":"dynamic-form","values":{"fields":{"path":["fields"]},"form":{"path":["context"]}}},{"id":"93e0a53d-b707-46ec-9216-ab0f66ca19ee","descriptor":"row","values":{"__relativeURL":"","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false,"__hidden":{"path":["context","is_order_personal_data"],"modifier":"not"},"__outlet":"","__baseURL":""},"content":{"":[{"id":"f358a61e-34d2-42e0-ad5d-2640bc140291","descriptor":"column","content":{"":[{"id":"e2025a9a-3a5f-4a49-bdbf-bf009ebc6b6d","descriptor":"dynamic-form-row","values":{"control":{"path":["context","order_number"]},"tooltip":null,"__outlet":"","hideEmpty":false,"__readOnly":null,"required":{"path":["context","is_order_personal_data"]},"__baseURL":"","bindingMode":false,"__relativeURL":"","__isConstValues":[],"showDisplayName":true,"__renderContentOnDemand":false}},{"id":"a19a0f38-2bf5-43a8-9da7-8833ccdca29d","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":{"path":["context","is_order_personal_data"]},"__readOnly":null,"__relativeURL":"","__isConstValues":[],"showDisplayName":true,"__renderContentOnDemand":false,"control":{"path":["context","date_of_creation"]},"__outlet":"","__baseURL":"","hideEmpty":false,"bindingMode":false}}]}}]}},{"id":"79922d63-e880-485f-9a78-976e89a97217","descriptor":"row","values":{"__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false,"__hidden":{"path":["context","is_additional_agreement_personal_data"],"modifier":"not"}},"content":{"":[{"id":"f358a61e-34d2-42e0-ad5d-2640bc140291","descriptor":"column","content":{"":[{"id":"98d5f04c-4825-4445-a0fb-e86f2cbffb1b","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"__renderContentOnDemand":false,"required":false,"__baseURL":"","bindingMode":false,"__relativeURL":"","__readOnly":null,"showDisplayName":true,"widgetCustomSettings":{"kind":"BlobObject","settings":{"columnsView":{"number":{"key":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":false,"required":false,"compression":false,"verticalAlign":"middle","backgroundColor":""},"agreement_date":{"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":false,"required":{"path":["context","is_additional_agreement_personal_data"]},"compression":false,"verticalAlign":"middle"},"organization_employee":{"key":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":true,"required":false,"compression":false,"verticalAlign":"middle","backgroundColor":""},"place_employment_string":{"key":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":true,"required":false,"compression":false,"verticalAlign":"middle","backgroundColor":""},"date_employment_contract":{"key":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":false,"required":{"path":["context","is_additional_agreement_personal_data"]},"compression":false,"verticalAlign":"middle","backgroundColor":""},"employment_contract_number":{"key":false,"font":{"bold":false,"color":"","italic":false,"underline":false},"align":"left","width":175,"hidden":false,"tensile":false,"readonly":false,"required":{"path":["context","is_additional_agreement_personal_data"]},"compression":false,"verticalAlign":"middle","backgroundColor":""}},"allowDeleteRows":false}},"control":{"path":["context","info_additional_table"]},"tooltip":null,"__outlet":"","hideEmpty":false}}]}}]}}]}},{"id":"22d15c86-fdb9-4326-8813-1cdddbb28b47","descriptor":"column","content":{"":[{"id":"53e32f2a-9c6a-412e-bf4c-dfd03132b18d","descriptor":"file-preview-download-panel","values":{"fieldFormControl":{"path":["file"]}}},{"id":"644f8e6b-e2c9-455c-8be6-37c8501bd78b","descriptor":"file-preview","values":{"__styles":"min-height: 75vh","__isConstValues":[],"fieldFormControl":{"path":["file"]}}}]}}]}},{"id":"59b3650e-2444-4049-8e6b-25ef735fd0ef","descriptor":"modal-body","content":{"":[]}}]}},{"id":"97272700-e665-43cf-bc73-876fd75d526d","descriptor":"tab","values":{"__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false,"title":"Заявление","__hidden":{"path":["context","is_application_personal_data"],"modifier":"not"},"__outlet":"","__baseURL":"","__relativeURL":""},"content":{"":[{"id":"7d74b737-9e17-4ebc-afd7-c1b34d04b098","descriptor":"modal-body","content":{"":[{"id":"d51a398f-22a5-4e4c-b9cf-d82f28a6eb75","descriptor":"file-preview-download-panel","values":{"__isConstValues":[],"fieldFormControl":{"path":["context","file"]}}},{"id":"02b7f292-f193-400c-9630-e9c14a01dae6","descriptor":"file-preview","values":{"__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[],"fieldFormControl":{"path":["context","application_personal_data_file"]},"__renderContentOnDemand":false}}]}}]}}]}}]}}],"[sidebar]":[{"id":"39d7757a-529f-4526-98f3-fddc66becf85","descriptor":"sidebar-widget","content":{"":[{"id":"abe4b782-6e2d-49cc-a57e-81b636422ee5","descriptor":"target-widget","values":{"context":{"path":["context"]}}}]}},{"id":"231b371a-64ae-4b61-8014-cba6da318ac9","descriptor":"sidebar-widget","content":{"":[{"id":"5e39b91d-aea4-467e-862f-0f8766eb44df","descriptor":"linked-item","values":{"context":{"path":["context"]}}}]}},{"id":"a4469de0-d7f3-11ec-9d64-0242ac120002","descriptor":"sidebar-widget","content":{"":[{"id":"3ead7c41-6dfa-4144-80da-2bfb5f0ccf59","descriptor":"item-reminder","values":{"formGroup":{"path":["context"]}}}]}},{"id":"56d1d0e8-aa83-4cdd-ae43-294b26ad4d04","descriptor":"sidebar-widget","content":{"":[{"id":"e1525e34-14ba-456b-b703-f407945c01e0","descriptor":"item-tasks","descriptorVersion":4,"values":{"itemModel":{"path":["itemModel"]},"formGroup":{"path":["context"]}}}]}},{"id":"eef018f2-1d3a-4600-a19d-791733b28b5e","descriptor":"sidebar-widget","content":{"":[{"id":"e0a17dec-603a-461a-becf-861637630584","descriptor":"messages-target","values":{"target":{"path":["target"]}}}]}}],"[formInfoPanel]":[{"id":"d1a14744-b84f-4ca8-b25f-b5811d5c2f31","descriptor":"validation-info-block","values":{"__validateResult":{"path":["context","__validateResult"]}}}],"[headerControls]":[{"id":"475aa008-aaff-402f-8de2-408bae1f1928","descriptor":"task-percent-widget","values":{"task":{"path":["task"]}}},{"id":"702d9c59-77ae-4dd5-b71a-a5fe7b58858f","descriptor":"extension-zone-toolbar-widget","values":{"item":{"path":["__itemRef"]}}},{"id":"f7b11c79-4267-4f5b-a002-dd629d549682","descriptor":"process-item-map","values":{"task":{"path":["task"]},"skipRulesCheck":true}},{"id":"ff2500ee-6573-49cd-a9e8-2d5c93350f26","descriptor":"button","values":{"icon":"menu_vertical","view":"icon","label":"bpm.tasks.item@menu","action":{"path":["menuAction"]},"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}}],"[headerCustomization]":[]}},"fields":[{"code":"order_dynamic","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Динамика приказа","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"personal_data_types","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"personal_data_types","filter":{"value":{"tf":{}},"enabled":false},"bindings":null,"namespace":"kedo","isDependent":false,"linkedFieldCode":""},"view":{"name":"Тип персональных данных","data":{}}},{"code":"passport_dynamic","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"passport_dynamic","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"driver_dynamic","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"driver_dynamic","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"military_dynamic","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"military_dynamic","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"file","type":"FILE","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"файл","data":{}}},{"code":"show_file","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"show_file","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"application_file","type":"FILE","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Файл заявления","data":{}}},{"code":"show_error","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"show_error","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"tab_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"tab_visibility","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}}],"fieldVisibilityConditions":{"file":{"enabled":false,"conditions":[]},"need_add":{"enabled":false,"conditions":[]},"show_file":{"enabled":false,"conditions":[]},"order_need":{"enabled":false,"conditions":[]},"show_error":{"enabled":false,"conditions":[]},"order_dynamic":{"enabled":true,"conditions":[]},"driver_dynamic":{"enabled":false,"conditions":[]},"tab_visibility":{"enabled":false,"conditions":[]},"application_file":{"enabled":false,"conditions":[]},"fail_zayavleniya":{"enabled":false,"conditions":[]},"military_dynamic":{"enabled":false,"conditions":[]},"passport_dynamic":{"enabled":false,"conditions":[]},"personal_data_types":{"enabled":false,"conditions":[]},"dynamics_employment_contract":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\nasync function onInit(): Promise\u003cvoid\u003e {\n    ViewContext.data.driver_dynamic = false;\n    ViewContext.data.military_dynamic = false;\n    ViewContext.data.show_file = false;\n    ViewContext.data.application_file = Context.data.file;\n    ViewContext.data.show_error = false;\n\n    if (!Context.data.staff_personal_data) {\n        throw new Error(\"staff_personal_data is undefined\");\n    }\n    let personal_type = await Context.data.staff_personal_data.fetch();\n\n    if (personal_type.data.page_photos_and_data) {\n        ViewContext.data.file = personal_type.data.page_photos_and_data\n        ViewContext.data.show_file = true;\n    }\n    if (personal_type.data.personal_data_type) {\n        switch (personal_type.data.personal_data_type.code) {\n            case \"data_driver\": {\n                ViewContext.data.driver_dynamic = true;\n                ViewContext.data.file = personal_type.data.diver_license;\n                ViewContext.data.show_file = true;\n                break;\n            }\n            case \"military_registration\": {\n                ViewContext.data.military_registration = true;\n                ViewContext.data.file = personal_type.data.military_record_document;\n                ViewContext.data.show_file = true;\n                break;\n            }\n            case \"change_address_registration\": {\n                ViewContext.data.file = personal_type.data.page_current_registration;\n                ViewContext.data.show_file = true;\n                break;\n            }\n            case \"change_residence\": {\n                ViewContext.data.file = personal_type.data.temporary_registration;\n                ViewContext.data.show_file = true;\n                break;\n            }\n            case \"marriage_information\": {\n                ViewContext.data.file = personal_type.data.certificate;\n                ViewContext.data.show_file = true;\n                break;\n            }\n            case \"data_education\": {\n                if (personal_type.data.completion_certificate \u0026\u0026 personal_type.data.completion_certificate.length \u003e 0) {\n                    ViewContext.data.file = personal_type.data.completion_certificate![0];\n                    ViewContext.data.show_file = true;\n                }\n                break;\n            }\n            default: {\n                ViewContext.data.show_file = false;\n                break;\n            }\n\n        }\n    }\n    if (Context.data.file) {\n        ViewContext.data.tab_visibility = true;\n    } else {\n        ViewContext.data.tab_visibility = false;\n    }\n\n    if (!Context.data.staff) {\n        return;\n    }\n    const staff = await Context.data.staff.fetch();\n    if (staff.data.employment_table) {\n        if (Context.data.type_employment_string != 'Внешнее совместительство') {\n            let count = Context.data.count_type_employment ?? 0;\n\n            const info_additional_table = Context.data.info_additional_table ?? Context.fields.info_additional_table.create();\n\n            for (count; count != 0; count--) {\n                if (staff.data.employment_table \u0026\u0026 staff.data.employment_table.length \u003e 0) {\n                    const row = staff.data.employment_table[count - 1];\n                    if (row.type_employment.code == 'main_workplace' || row.type_employment.code == 'internal_combination') {\n                        const row_insert_doc = info_additional_table.insert();\n                        row_insert_doc.place_employment_string = row.type_employment.name;\n                        row_insert_doc.organization_employee = row.organization;\n                        row_insert_doc.employment_contract_number = row.number_employment_contract;\n                        row_insert_doc.date_employment_contract = row.date_employment_contract_as_date;\n                    }\n                }\n            }\n            Context.data.info_additional_table = Context.data.info_additional_table;\n        }\n    }\n\n    if (Context.data.type_employment_string == 'Внешнее совместительство') {\n        if (Context.data.place_employment) {\n            const place_emloyment = await Context.data.place_employment.fetch();\n            const row_insert_doc = Context.data.info_additional_table!.insert();\n            row_insert_doc.place_employment_string = place_emloyment.data.type_employment!.name;\n            row_insert_doc.organization_employee = place_emloyment.data.organization!;\n\n            Context.data.info_additional_table = Context.data.info_additional_table;\n        }\n    }\n\n}\n\nasync function date_check(): Promise\u003cvoid\u003e {\n    let current_date = new TDate();\n    if (Context.data.issue_date!.after(current_date)) ViewContext.data.show_error = true\n    else ViewContext.data.show_error = false;\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"dataFieldCode":"context"},"dataNamespace":"kedo.staff","dataCode":"_process_personal_data_change","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            var _a, _b;\n            ViewContext.data.driver_dynamic = false;\n            ViewContext.data.military_dynamic = false;\n            ViewContext.data.show_file = false;\n            ViewContext.data.application_file = Context.data.file;\n            ViewContext.data.show_error = false;\n            if (!Context.data.staff_personal_data) {\n                throw new Error(\"staff_personal_data is undefined\");\n            }\n            let personal_type = await Context.data.staff_personal_data.fetch();\n            if (personal_type.data.page_photos_and_data) {\n                ViewContext.data.file = personal_type.data.page_photos_and_data;\n                ViewContext.data.show_file = true;\n            }\n            if (personal_type.data.personal_data_type) {\n                switch (personal_type.data.personal_data_type.code) {\n                    case \"data_driver\": {\n                        ViewContext.data.driver_dynamic = true;\n                        ViewContext.data.file = personal_type.data.diver_license;\n                        ViewContext.data.show_file = true;\n                        break;\n                    }\n                    case \"military_registration\": {\n                        ViewContext.data.military_registration = true;\n                        ViewContext.data.file = personal_type.data.military_record_document;\n                        ViewContext.data.show_file = true;\n                        break;\n                    }\n                    case \"change_address_registration\": {\n                        ViewContext.data.file = personal_type.data.page_current_registration;\n                        ViewContext.data.show_file = true;\n                        break;\n                    }\n                    case \"change_residence\": {\n                        ViewContext.data.file = personal_type.data.temporary_registration;\n                        ViewContext.data.show_file = true;\n                        break;\n                    }\n                    case \"marriage_information\": {\n                        ViewContext.data.file = personal_type.data.certificate;\n                        ViewContext.data.show_file = true;\n                        break;\n                    }\n                    case \"data_education\": {\n                        if (personal_type.data.completion_certificate \u0026\u0026 personal_type.data.completion_certificate.length \u003e 0) {\n                            ViewContext.data.file = personal_type.data.completion_certificate[0];\n                            ViewContext.data.show_file = true;\n                        }\n                        break;\n                    }\n                    default: {\n                        ViewContext.data.show_file = false;\n                        break;\n                    }\n                }\n            }\n            if (Context.data.file) {\n                ViewContext.data.tab_visibility = true;\n            }\n            else {\n                ViewContext.data.tab_visibility = false;\n            }\n            if (!Context.data.staff) {\n                return;\n            }\n            const staff = await Context.data.staff.fetch();\n            if (staff.data.employment_table) {\n                if (Context.data.type_employment_string != 'Внешнее совместительство') {\n                    let count = (_a = Context.data.count_type_employment) !== null \u0026\u0026 _a !== void 0 ? _a : 0;\n                    const info_additional_table = (_b = Context.data.info_additional_table) !== null \u0026\u0026 _b !== void 0 ? _b : Context.fields.info_additional_table.create();\n                    for (count; count != 0; count--) {\n                        if (staff.data.employment_table \u0026\u0026 staff.data.employment_table.length \u003e 0) {\n                            const row = staff.data.employment_table[count - 1];\n                            if (row.type_employment.code == 'main_workplace' || row.type_employment.code == 'internal_combination') {\n                                const row_insert_doc = info_additional_table.insert();\n                                row_insert_doc.place_employment_string = row.type_employment.name;\n                                row_insert_doc.organization_employee = row.organization;\n                                row_insert_doc.employment_contract_number = row.number_employment_contract;\n                                row_insert_doc.date_employment_contract = row.date_employment_contract_as_date;\n                            }\n                        }\n                    }\n                    Context.data.info_additional_table = Context.data.info_additional_table;\n                }\n            }\n            if (Context.data.type_employment_string == 'Внешнее совместительство') {\n                if (Context.data.place_employment) {\n                    const place_emloyment = await Context.data.place_employment.fetch();\n                    const row_insert_doc = Context.data.info_additional_table.insert();\n                    row_insert_doc.place_employment_string = place_emloyment.data.type_employment.name;\n                    row_insert_doc.organization_employee = place_emloyment.data.organization;\n                    Context.data.info_additional_table = Context.data.info_additional_table;\n                }\n            }\n        }\n        async function date_check() {\n            let current_date = new TDate();\n            if (Context.data.issue_date.after(current_date))\n                ViewContext.data.show_error = true;\n            else\n                ViewContext.data.show_error = false;\n        }\n        return {\n            onInit,\n            date_check\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"date_check","parameters":[],"type":"[object Object]"}],"clientDependencies":{"applications":[],"collections":[{"namespace":"kedo","code":"employees_personal_data"},{"namespace":"kedo","code":"staff"},{"namespace":"kedo","code":"employment_directory"}],"pages":[]}},"__createdAt":"2024-03-29T11:29:55.124601318Z","__createdBy":"d78f4b2f-13a2-4903-aeeb-fdb72d5b9d0c","__updatedAt":"2024-04-01T13:23:44.802934156Z","__updatedBy":"1a8a4a0b-7e7e-4e0e-895e-ab2a0a301d1e","__deletedAt":null}
