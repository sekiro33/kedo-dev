{
  "__id": "018f9fc9-440d-74a9-9b2a-d39974f59515",
  "namespace": "kedo.staff",
  "code": "form_a9142d91-12cf-4ff2-b026-77562eaf89af",
  "__name": "Приложить документы",
  "description": "",
  "extensionZoneCode": "",
  "sort": 0,
  "category": "00000000-0000-0000-0000-000000000000",
  "version": 7,
  "hidden": true,
  "draft": false,
  "readonly": false,
  "descriptor": {
    "types": ["form"],
    "template": {
      "id": "a931b1d5-b584-4302-ba6e-eec9aca05d4b",
      "descriptor": "item-form-complex-popup",
      "descriptorVersion": 2,
      "values": {
        "systemFunctions": {},
        "formType": "task-form",
        "formGroup": {
          "path": ["context"]
        }
      },
      "content": {
        "[sidebar]": [
          {
            "id": "39d7757a-529f-4526-98f3-fddc66becf85",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "abe4b782-6e2d-49cc-a57e-81b636422ee5",
                  "descriptor": "target-widget",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "231b371a-64ae-4b61-8014-cba6da318ac9",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "5e39b91d-aea4-467e-862f-0f8766eb44df",
                  "descriptor": "linked-item",
                  "values": {
                    "context": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "a4469de0-d7f3-11ec-9d64-0242ac120002",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "3ead7c41-6dfa-4144-80da-2bfb5f0ccf59",
                  "descriptor": "item-reminder",
                  "values": {
                    "task": {
                      "path": ["task"]
                    },
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "56d1d0e8-aa83-4cdd-ae43-294b26ad4d04",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e1525e34-14ba-456b-b703-f407945c01e0",
                  "descriptor": "item-tasks",
                  "descriptorVersion": 4,
                  "values": {
                    "formGroup": {
                      "path": ["context"]
                    }
                  }
                }
              ]
            }
          },
          {
            "id": "eef018f2-1d3a-4600-a19d-791733b28b5e",
            "descriptor": "sidebar-widget",
            "content": {
              "": [
                {
                  "id": "e0a17dec-603a-461a-becf-861637630584",
                  "descriptor": "messages-target",
                  "values": {
                    "target": {
                      "path": ["target"]
                    }
                  }
                }
              ]
            }
          }
        ],
        "[formInfoPanel]": [
          {
            "id": "cc97788a-9455-4f75-8863-309638127232",
            "descriptor": "validation-info-block",
            "values": {
              "__validateResult": {
                "path": ["context", "__validateResult"]
              }
            }
          }
        ],
        "[headerControls]": [
          {
            "id": "475aa008-aaff-402f-8de2-408bae1f1928",
            "descriptor": "task-percent-widget",
            "values": {
              "task": {
                "path": ["task"]
              }
            }
          },
          {
            "id": "702d9c59-77ae-4dd5-b71a-a5fe7b58858f",
            "descriptor": "extension-zone-toolbar-widget",
            "values": {
              "item": {
                "path": ["__itemRef"]
              }
            }
          },
          {
            "id": "f7b11c79-4267-4f5b-a002-dd629d549682",
            "descriptor": "process-item-map",
            "values": {
              "task": {
                "path": ["task"]
              },
              "skipRulesCheck": true
            }
          },
          {
            "id": "ff2500ee-6573-49cd-a9e8-2d5c93350f26",
            "descriptor": "button",
            "values": {
              "createAppItemSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              },
              "icon": "menu_vertical",
              "view": "icon",
              "label": "bpm.tasks.item@menu",
              "action": {
                "path": ["menuAction"]
              },
              "runProcessSettings": {
                "kind": "",
                "settings": {
                  "code": "",
                  "field": "",
                  "binding": null,
                  "namespace": ""
                }
              }
            }
          }
        ],
        "[headerCustomization]": [],
        "[footer]": [
          {
            "id": "31979bac-00bd-4123-a901-9d14190c8dde",
            "descriptor": "buttons-panel",
            "values": {
              "buttons": {
                "path": ["actionButtons"]
              }
            }
          }
        ],
        "[content]": [
          {
            "id": "c18e9118-cda2-49f4-ae50-5414c9b970b2",
            "descriptor": "modal-body",
            "values": {
              "shadow": true
            },
            "content": {
              "": [
                {
                  "id": "6c24a7d0-013d-45ed-99d6-aeda47f6101d",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "tooltip": null,
                    "__outlet": "",
                    "required": false,
                    "__readOnly": true,
                    "__renderContentOnDemand": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "control": {
                      "path": ["context", "staff_personal_data"]
                    },
                    "__baseURL": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__relativeURL": ""
                  }
                },
                {
                  "id": "43d3c807-04c0-4baf-b6bb-5bb0049a5b62",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["context", "staff"]
                    },
                    "tooltip": null,
                    "__outlet": "",
                    "bindingMode": false,
                    "__relativeURL": "",
                    "__renderContentOnDemand": false,
                    "required": false,
                    "__baseURL": "",
                    "hideEmpty": false,
                    "__readOnly": true,
                    "__isConstValues": [],
                    "showDisplayName": true
                  }
                },
                {
                  "id": "9a4c5f8b-9370-4c9c-8714-9c2f351bfcd8",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "control": {
                      "path": ["context", "order_table"]
                    },
                    "__hidden": {
                      "path": ["context", "is_order_personal_data"],
                      "modifier": "not"
                    },
                    "__readOnly": false,
                    "__isConstValues": [],
                    "showDisplayName": true,
                    "__renderContentOnDemand": false,
                    "tooltip": "Если файл не приложен будет выполнена генерация по шаблону",
                    "required": false,
                    "__relativeURL": "",
                    "widgetCustomSettings": {
                      "kind": "BlobObject",
                      "settings": {
                        "columnsView": {
                          "file": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle"
                          },
                          "responsible": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle"
                          },
                          "organization_employee": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": true,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle"
                          },
                          "place_employment_string": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": true,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle"
                          }
                        },
                        "allowDeleteRows": false
                      }
                    },
                    "__outlet": "",
                    "hideEmpty": false,
                    "bindingMode": false,
                    "__baseURL": ""
                  }
                },
                {
                  "id": "e3b50e1c-8597-4a65-953a-0c73fb7f28bf",
                  "descriptor": "dynamic-form-row",
                  "values": {
                    "__hidden": {
                      "path": [
                        "context",
                        "is_additional_agreement_personal_data"
                      ],
                      "modifier": "not"
                    },
                    "bindingMode": false,
                    "required": false,
                    "hideEmpty": false,
                    "showDisplayName": true,
                    "widgetCustomSettings": {
                      "kind": "BlobObject",
                      "settings": {
                        "columnsView": {
                          "file": {
                            "key": false,
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle",
                            "backgroundColor": ""
                          },
                          "number": {
                            "key": false,
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": true,
                            "compression": false,
                            "verticalAlign": "middle",
                            "backgroundColor": ""
                          },
                          "responsible": {
                            "key": false,
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": true,
                            "compression": false,
                            "verticalAlign": "middle",
                            "backgroundColor": ""
                          },
                          "organization_employee": {
                            "key": false,
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": true,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle",
                            "backgroundColor": ""
                          },
                          "place_employment_string": {
                            "key": false,
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": true,
                            "required": false,
                            "compression": false,
                            "verticalAlign": "middle",
                            "backgroundColor": ""
                          },
                          "date_employment_contract": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": {
                              "path": [
                                "context",
                                "is_additional_agreement_personal_data"
                              ]
                            },
                            "compression": false,
                            "verticalAlign": "middle"
                          },
                          "employment_contract_number": {
                            "font": {
                              "bold": false,
                              "color": "",
                              "italic": false,
                              "underline": false
                            },
                            "align": "left",
                            "width": 175,
                            "hidden": false,
                            "tensile": false,
                            "readonly": false,
                            "required": {
                              "path": [
                                "context",
                                "is_additional_agreement_personal_data"
                              ]
                            },
                            "compression": false,
                            "verticalAlign": "middle"
                          }
                        },
                        "allowDeleteRows": false
                      }
                    },
                    "control": {
                      "path": ["context", "documents_table"]
                    },
                    "__baseURL": "",
                    "__renderContentOnDemand": false,
                    "tooltip": "Если файл не приложен будет выполнена генерация по шаблону",
                    "__outlet": "",
                    "__readOnly": null,
                    "__relativeURL": "",
                    "__isConstValues": []
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "fields": [
      {
        "code": "count_order",
        "type": "FLOAT",
        "searchable": false,
        "indexed": false,
        "deleted": false,
        "array": false,
        "required": false,
        "single": true,
        "defaultValue": null,
        "calcByFormula": false,
        "formula": "",
        "data": {},
        "view": {
          "name": "count_order",
          "data": {
            "additionalType": "integer",
            "showRowSeparator": true
          },
          "input": true,
          "output": true
        }
      }
    ],
    "fieldVisibilityConditions": {
      "count_order": {
        "enabled": false,
        "conditions": []
      }
    },
    "scriptOptions": {},
    "clientScripts": "/* Client scripts module */\n\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    if (Context.data.staff) {\n        const staff = await Context.data.staff.fetch();\n        if (staff.data.employment_table) {\n\n            for (Context.data.count_type_employment; Context.data.count_type_employment != 0; Context.data.count_type_employment!--) {\n                const row = staff.data.employment_table[Context.data.count_type_employment! - 1];\n                if ((row.type_employment.code == 'main_workplace' || row.type_employment.code == 'internal_combination') \u0026\u0026 Context.data.type_employment_string != 'Внешнее совместительство') {\n                    const row_insert_doc = Context.data.documents_table!.insert();\n                    row_insert_doc.place_employment_string = row.type_employment.name;\n                    row_insert_doc.organization_employee = row.organization;\n                    row_insert_doc.responsible = (await row.organization.fetch()).data.signatories![0];\n                    row_insert_doc.date_employment_contract = row.date_employment_contract_as_date;\n                    row_insert_doc.employment_contract_number = row.number_employment_contract;\n\n                    Context.data.documents_table = Context.data.documents_table;\n\n                }\n                if (row.type_employment.code == 'main_workplace' \u0026\u0026 Context.data.type_employment_string != 'Внешнее совместительство') {\n                    const row_insert_order = Context.data.order_table!.insert();\n                    row_insert_order.place_employment_string = row.type_employment.name;\n                    row_insert_order.organization_employee = row.organization;\n                    row_insert_order.responsible = (await row.organization.fetch()).data.signatories![0];\n\n                    Context.data.order_table = Context.data.order_table;\n                }\n            }\n        }\n\n        if (Context.data.type_employment_string == 'Внешнее совместительство') {\n            if (Context.data.place_employment) {\n                const place_emloyment = await Context.data.place_employment.fetch();\n                const row_insert_doc = Context.data.documents_table!.insert();\n                row_insert_doc.place_employment_string = place_emloyment.data.type_employment!.name;\n                row_insert_doc.organization_employee = place_emloyment.data.organization!;\n                row_insert_doc.responsible = (await place_emloyment.data.organization!.fetch()).data.signatories![0];\n\n                Context.data.documents_table = Context.data.documents_table;\n\n                const row_insert_order = Context.data.order_table!.insert();\n                row_insert_order.place_employment_string = place_emloyment.data.type_employment!.name;\n                row_insert_order.organization_employee = place_emloyment.data.organization!;\n                row_insert_order.responsible = (await place_emloyment.data.organization!.fetch()).data.signatories![0];\n\n                Context.data.order_table = Context.data.order_table;\n            }\n        }\n    }\n}",
    "clientScriptOptions": {
      "allowServer": true
    },
    "serverScripts": "/* Server scripts module */\n",
    "serverScriptOptions": {},
    "dataFieldCode": "context"
  },
  "dataNamespace": "kedo.staff",
  "dataCode": "_process_personal_data_change",
  "runtime": {
    "version": 1,
    "clientScripts": "System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        async function onInit() {\n            if (Context.data.staff) {\n                const staff = await Context.data.staff.fetch();\n                if (staff.data.employment_table) {\n                    for (Context.data.count_type_employment; Context.data.count_type_employment != 0; Context.data.count_type_employment--) {\n                        const row = staff.data.employment_table[Context.data.count_type_employment - 1];\n                        if ((row.type_employment.code == 'main_workplace' || row.type_employment.code == 'internal_combination') \u0026\u0026 Context.data.type_employment_string != 'Внешнее совместительство') {\n                            const row_insert_doc = Context.data.documents_table.insert();\n                            row_insert_doc.place_employment_string = row.type_employment.name;\n                            row_insert_doc.organization_employee = row.organization;\n                            row_insert_doc.responsible = (await row.organization.fetch()).data.signatories[0];\n                            row_insert_doc.date_employment_contract = row.date_employment_contract_as_date;\n                            row_insert_doc.employment_contract_number = row.number_employment_contract;\n                            Context.data.documents_table = Context.data.documents_table;\n                        }\n                        if (row.type_employment.code == 'main_workplace' \u0026\u0026 Context.data.type_employment_string != 'Внешнее совместительство') {\n                            const row_insert_order = Context.data.order_table.insert();\n                            row_insert_order.place_employment_string = row.type_employment.name;\n                            row_insert_order.organization_employee = row.organization;\n                            row_insert_order.responsible = (await row.organization.fetch()).data.signatories[0];\n                            Context.data.order_table = Context.data.order_table;\n                        }\n                    }\n                }\n                if (Context.data.type_employment_string == 'Внешнее совместительство') {\n                    if (Context.data.place_employment) {\n                        const place_emloyment = await Context.data.place_employment.fetch();\n                        const row_insert_doc = Context.data.documents_table.insert();\n                        row_insert_doc.place_employment_string = place_emloyment.data.type_employment.name;\n                        row_insert_doc.organization_employee = place_emloyment.data.organization;\n                        row_insert_doc.responsible = (await place_emloyment.data.organization.fetch()).data.signatories[0];\n                        Context.data.documents_table = Context.data.documents_table;\n                        const row_insert_order = Context.data.order_table.insert();\n                        row_insert_order.place_employment_string = place_emloyment.data.type_employment.name;\n                        row_insert_order.organization_employee = place_emloyment.data.organization;\n                        row_insert_order.responsible = (await place_emloyment.data.organization.fetch()).data.signatories[0];\n                        Context.data.order_table = Context.data.order_table;\n                    }\n                }\n            }\n        }\n        return {\n            onInit\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n",
    "clientFnDeclarations": [
      {
        "name": "onInit",
        "parameters": [],
        "type": "[object Object]"
      }
    ],
    "clientDependencies": {
      "applications": [],
      "collections": [
        {
          "namespace": "kedo",
          "code": "staff"
        },
        {
          "namespace": "kedo",
          "code": "employment_directory"
        }
      ],
      "pages": []
    }
  },
  "__createdAt": "2024-05-22T10:11:58.603895186Z",
  "__createdBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__updatedAt": "2024-05-27T08:06:42.557152482Z",
  "__updatedBy": "40489035-c2e3-4dba-8113-51ef4cb9dad3",
  "__deletedAt": null
}
