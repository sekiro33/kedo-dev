{"__id":"018fc973-1fb9-7325-a0be-da441b3b78c5","namespace":"kedo.employment_directory","code":"employments_list_widget","__name":"Список занятости","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":1,"hidden":false,"draft":false,"readonly":false,"descriptor":{"icon":"poll_people","template":{"id":"97e4a56e-a043-4f8e-9f72-f7d9821f69a5","descriptor":"component","values":{"systemFunctions":{}},"content":{"":[{"id":"3a7bb86c-defd-49d6-a83f-83c8b3adcd67","descriptor":"dynamic-form-row","values":{"bindingMode":false,"showDisplayName":true,"__renderContentOnDemand":false,"__hidden":true,"required":false,"__readOnly":true,"showCreateItem":false,"__isConstValues":[],"__outlet":"","__baseURL":"","__relativeURL":"","control":{"path":["staff"]},"tooltip":null,"hideEmpty":false,"onChangeValue":{"kind":"Function","name":"staffOnChange","type":"client"}}},{"id":"5a1ecccd-df31-46f9-ad19-0a9aeb289c14","descriptor":"dynamic-form-row","values":{"showDisplayName":{"path":["employment_placement_name_visible"]},"__baseURL":"","showCreateItem":false,"__isConstValues":[],"hideEmpty":false,"bindingMode":false,"__renderContentOnDemand":false,"__hidden":{"path":["employment_placement_visible"],"modifier":"not"},"__outlet":"","required":{"path":["employment_placement_required"]},"tooltip":null,"__readOnly":null,"displayName":"По месту занятости","control":{"path":["employment_placement"]},"__relativeURL":""}},{"id":"032024fb-2afd-45ad-aac3-e62b40052474","descriptor":"label","values":{"__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentOnDemand":false,"text":"Для выбора места занятости укажите сотрудника","__hidden":{"path":["error_visible"],"modifier":"not"},"__outlet":"","__styles":"color: #DC143C;"}}]}},"fields":[{"code":"staff","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"staff","filter":{"value":{"tf":{}},"enabled":false},"namespace":"kedo"},"view":{"name":"Сотрудник","data":{},"input":true,"output":false}},{"code":"employment_placement","type":"SYS_COLLECTION","searchable":false,"indexed":false,"deleted":false,"array":true,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{"code":"employment_directory","filter":{"value":{"tf":{}},"enabled":false},"namespace":"kedo"},"view":{"name":"Место занятости","data":{},"input":false,"output":true}},{"code":"employment_placement_required","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Место занятости обязательно для заполнения?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":false}},{"code":"employment_placement_visible","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Отобразить строку \"Место занятости\"?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"error_visible","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Отобразить ошибку?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":false,"output":false}},{"code":"employment_placement_name_visible","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показывать название поля?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":false}}],"fieldVisibilityConditions":{"staff":{"enabled":false,"conditions":[]},"error_visible":{"enabled":false,"conditions":[]},"employment_placement":{"enabled":false,"conditions":[]},"employment_placement_visible":{"enabled":false,"conditions":[]},"employment_placement_required":{"enabled":false,"conditions":[]},"employment_placement_name_visible":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const console : any;\n\nconst employment_status = Context.fields.employment_placement.app.fields.__status;\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    await staffOnChange();\n}\n\nasync function staffOnChange(): Promise\u003cvoid\u003e {\n    /**\n     * Если поле \"Место занятости\" является обязательным - то выводим ошибку про сотрудника, и скрываем поле \"Место занятости\".\n     * Если не обязательно - то просто ничего не выводим.\n     */\n    if (!Context.data.staff) {\n        Context.data.employment_placement_visible = false;\n        Context.data.error_visible = Context.data.employment_placement_required;\n        return;\n    }\n\n    await getEmploymentPlacement();\n}\n\nasync function getEmploymentPlacement(): Promise\u003cvoid\u003e {\n    Context.data.employment_placement_visible = true;\n    Context.data.error_visible = false;\n\n    Context.fields.employment_placement.data.setFilter((f, c, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.__status.eq(employment_status.variants.actual),\n        f.staff.link(Context.data.staff!)\n    ));\n\n    const staff_employment = await Context.fields.employment_placement.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.__status.eq(employment_status.variants.actual),\n            f.staff.link(Context.data.staff!),\n        ))\n        .size(100)\n        .all();\n\n    if (staff_employment.length == 0) {\n        Context.data.employment_placement = undefined;\n        return;\n    }\n\n    /** Задаем по умолчанию основное место работы сотрудника.\n     * Иначе первое попвашееся место работы.\n     */\n    const main_workplace = staff_employment.find(f =\u003e f.data.type_employment?.code == \"main_workplace\");\n    Context.data.employment_placement = main_workplace ?? (staff_employment.length \u003e 0 ? staff_employment[0] : undefined);\n}","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        const employment_status = Context.fields.employment_placement.app.fields.__status;\n        async function onInit() {\n            await staffOnChange();\n        }\n        async function staffOnChange() {\n            if (!Context.data.staff) {\n                Context.data.employment_placement_visible = false;\n                Context.data.error_visible = Context.data.employment_placement_required;\n                return;\n            }\n            await getEmploymentPlacement();\n        }\n        async function getEmploymentPlacement() {\n            Context.data.employment_placement_visible = true;\n            Context.data.error_visible = false;\n            Context.fields.employment_placement.data.setFilter((f, c, g) =\u003e g.and(f.__deletedAt.eq(null), f.__status.eq(employment_status.variants.actual), f.staff.link(Context.data.staff)));\n            const staff_employment = await Context.fields.employment_placement.app.search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.__status.eq(employment_status.variants.actual), f.staff.link(Context.data.staff)))\n                .size(100)\n                .all();\n            if (staff_employment.length == 0) {\n                Context.data.employment_placement = undefined;\n                return;\n            }\n            const main_workplace = staff_employment.find(f =\u003e { var _a; return ((_a = f.data.type_employment) === null || _a === void 0 ? void 0 : _a.code) == \"main_workplace\"; });\n            Context.data.employment_placement = main_workplace !== null \u0026\u0026 main_workplace !== void 0 ? main_workplace : (staff_employment.length \u003e 0 ? staff_employment[0] : undefined);\n        }\n        return {\n            onInit,\n            staffOnChange,\n            getEmploymentPlacement\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"staffOnChange","parameters":[],"type":"[object Object]"},{"name":"getEmploymentPlacement","parameters":[],"type":"[object Object]"}]},"__createdAt":"2024-05-30T12:21:56.281407004Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-05-30T12:27:22.730848888Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
