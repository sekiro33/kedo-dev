{"__id":"018e89f9-32a5-7be6-96db-7bdacc94b407","namespace":"kedo","code":"form_586a133d-c62c-4d87-9f42-02156e696f63","__name":"Форма запуска","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":4,"hidden":true,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"6b26227a-a717-47ab-8bba-ce0c3f61f9f1","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"formType":"start-process-form","formGroup":{"path":["context"]},"systemFunctions":{}},"content":{"[footer]":[{"id":"cc734fcd-17d6-4b8c-8529-91a25cc2a94e","descriptor":"buttons-panel","values":{"buttons":{"path":["actionButtons"]}}}],"[content]":[{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"aceb1019-e790-43ee-91c1-254ed333b548","descriptor":"elma-info-block","values":{"text":{"path":["infoblock_text"]},"__hidden":{"path":["show_infoblock"],"modifier":"not"},"typeEnum":[{"code":"warning","name":"Предупреждение (оранжевый)"}],"__isConstValues":[],"__renderContentAsync":false},"content":{"":[]}},{"id":"27eb05c4-76e0-473a-9173-b0b646548ffe","descriptor":"kedo@custom_info","descriptorVersion":1,"values":{"__isConstValues":[],"__styles":"width: 100%","info_type":[{"code":"info","name":"Информация"}],"info_string":"Обратите внимание, что файлы форматов .docx и .xlsx будут конвертированы в формат PDF/A."}},{"id":"1d4210dd-e530-4981-8703-1701a94c5d22","descriptor":"row-layout","values":{"__renderContentAsync":false,"__outlet":"","__classes":"","__isConstValues":[],"elementsAlignEnum":[{"code":"left","name":"shared.common.row-layout@widget-elements-align-left"}],"__renderContentOnDemand":false,"__styles":"height:15px","__baseURL":"","__relativeURL":""},"content":{"":[]}},{"id":"09ba26d5-bce3-404a-bdc2-982f38c1d48d","descriptor":"groupbox","values":{"__baseURL":"","styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"title":" ","__hidden":{"path":["sign_type_is_goskey"]},"__outlet":"","__renderContentAsync":false,"__renderContentOnDemand":false,"expanded":true,"__relativeURL":"","__isConstValues":[]},"content":{"":[{"id":"4d578ca6-ba6e-4bf5-bdf7-df11a207ca2b","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"control":{"path":["context","app_name"]},"__hidden":{"path":["sign_type_is_goskey"]},"required":false,"__baseURL":"","__readOnly":null,"displayName":"Название документа","__relativeURL":"","showDisplayName":true,"tooltip":"По умолчанию будет присвоено название приложенного файла","__outlet":"","hideEmpty":false,"bindingMode":false}},{"id":"25e0a2b7-51dd-4c39-95ee-c1c781c80351","descriptor":"dynamic-form-row","values":{"control":{"path":["context","document_type"]},"__hidden":{"path":["sign_type_is_goskey"]},"required":true,"__baseURL":"","hideEmpty":false,"bindingMode":false,"showCreateItem":false,"__isConstValues":[],"tooltip":null,"__outlet":"","__readOnly":null,"__relativeURL":"","showDisplayName":true}},{"id":"bf4a8526-fa8f-4f69-b20e-e56a0dde7c7c","descriptor":"dynamic-form-row","values":{"__hidden":{"path":["sign_type_is_goskey"]},"__outlet":"","__baseURL":"","hideEmpty":false,"bindingMode":false,"showDisplayName":true,"control":{"path":["context","file"]},"tooltip":null,"required":false,"__readOnly":null,"__relativeURL":"","__isConstValues":[]}}]}},{"id":"97d62c49-caf9-42a8-9859-43c00deecc61","descriptor":"groupbox","values":{"styleEnum":[{"code":"default","name":"Default"}],"__baseURL":"","__hidden":{"path":["sign_type_is_goskey"],"modifier":"not"},"__outlet":"","expanded":true,"__classes":"goskey-wrapper","collapsible":false,"__relativeURL":"","__isConstValues":[],"title":"Добавление файла в пакет документов для Госключа","__renderContentAsync":false},"content":{"":[{"id":"954d88d3-5c4e-4271-a4c9-ceb0509a4c42","descriptor":"code","values":{"html":"\u003cstyle\u003e\n    .goskey-wrapper .btn-primary.disabled {\n        background-color: #e0e0e0;\n        pointer-events: none;\n    }\n\n    .goskey-files-wrapper .drop-area-wrapper {\n        display: none;\n    }\n\u003c/style\u003e","hideContent":true,"contentPlaceholder":"disabled button and readonly files css"}},{"id":"7f5b1560-3f16-44f7-aa14-c5134aadf9b4","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"tooltip":"По умолчанию будет присвоено название приложенного файла","required":false,"__baseURL":"","hideEmpty":false,"__readOnly":null,"bindingMode":false,"__relativeURL":"","control":{"path":["context","app_name"]},"__outlet":"","displayName":"Название документа","showDisplayName":true}},{"id":"dded7092-c872-436c-b50f-78e921308804","descriptor":"dynamic-form-row","values":{"onChangeValue":{"kind":"Function","name":"handleDisabledButton","type":"client"},"control":{"path":["context","document_type"]},"__outlet":"","__baseURL":"","__readOnly":null,"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"tooltip":null,"required":false,"hideEmpty":false,"__relativeURL":"","showCreateItem":false}},{"id":"363442ad-fe4f-42fa-af5b-0ad2f15066f3","descriptor":"dynamic-form-row","values":{"__relativeURL":"","onChangeValue":{"kind":"Function","name":"handleDisabledButton","type":"client"},"__isConstValues":[],"tooltip":null,"required":false,"__readOnly":null,"hideEmpty":false,"bindingMode":false,"showDisplayName":true,"control":{"path":["context","file"]},"__outlet":"","__baseURL":""}},{"id":"3a4f4bcc-4732-4d04-bce3-cf3a606b8156","descriptor":"button","values":{"view":"primary","__baseURL":"","processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"label":"Добавить файл в пакет документов","action":null,"__renderContentOnDemand":false,"runInPopover":null,"__relativeURL":"","__isConstValues":[],"onClick":{"kind":"Function","name":"addFileToPackage","type":"client"},"__outlet":"","__classes":"","runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}}]}},{"id":"781d7c6a-dec5-496c-b513-e638fb7c9273","descriptor":"groupbox","values":{"__hidden":{"path":["sign_type_is_goskey"],"modifier":"not"},"collapsible":false,"__isConstValues":[],"__renderContentAsync":false,"styleEnum":[{"code":"default","name":"Default"}],"__relativeURL":"","__renderContentOnDemand":false,"title":" ","__outlet":"","expanded":true,"__baseURL":""},"content":{"":[{"id":"99a368f1-806e-4727-96c4-ffe3b9ba44b4","descriptor":"dynamic-form-row","values":{"__outlet":"","hideEmpty":false,"bindingMode":false,"__relativeURL":"","__isConstValues":[],"showDisplayName":true,"__hidden":{"path":["sign_type_is_goskey"],"modifier":"not"},"tooltip":null,"required":false,"__baseURL":"","__readOnly":null,"control":{"path":["context","package_name"]}}},{"id":"bb28e082-b146-4e45-89c2-abfa646fe157","descriptor":"dynamic-form-row","values":{"__outlet":"","__readOnly":null,"bindingMode":false,"__relativeURL":"","__isConstValues":[],"showDisplayName":true,"tooltip":null,"__hidden":{"path":["sign_type_is_goskey"],"modifier":"not"},"required":false,"__baseURL":"","hideEmpty":false,"control":{"path":["context","goskey_sign_type"]}}},{"id":"688ba59f-e87b-4c0e-9868-b6c14a83187e","descriptor":"dynamic-form-row","values":{"control":{"path":["context","goskey_files"]},"tooltip":null,"required":false,"__baseURL":"","hideEmpty":false,"bindingMode":false,"__relativeURL":"","__outlet":"","__readOnly":false,"__isConstValues":[],"__hidden":{"path":["sign_type_is_goskey"],"modifier":"not"},"__classes":"goskey-files-wrapper","onChangeValue":{"kind":"Function","name":"handleDocsChange","type":"client"},"showDisplayName":true,"__renderContentOnDemand":false}}]}},{"id":"7e7df34b-d1bb-45a4-b2f0-c8486ae45086","descriptor":"groupbox","values":{"__outlet":"","expanded":true,"__baseURL":"","styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"__relativeURL":"","__renderContentAsync":false,"title":" ","__renderContentOnDemand":false,"__isConstValues":[]},"content":{"":[{"id":"7aef46a0-061e-4240-9358-6c020e0b7c98","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"__isConstValues":[],"showDisplayName":true,"tooltip":null,"__baseURL":"","required":true,"__relativeURL":"","showCreateItem":false,"__renderContentOnDemand":false,"control":{"path":["context","signatory_app"]},"__outlet":"","displayName":"Кому","onChangeValue":{"kind":"Function","name":"check_replacement","type":"client"},"__readOnly":null,"bindingMode":false}},{"id":"dd3cc490-fdc5-43f8-9ec6-fe776fef9a55","descriptor":"ext_7fe3de7d-f459-4f75-940c-271c6e9ea1ed@staff_position_list_widget","descriptorVersion":1,"values":{"__renderContentOnDemand":false,"employment_placement_required":true,"staff":{"path":["context","signatory_app"]},"__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[],"employment_placement":{"path":["context","employment_placement"]}}},{"id":"897f6454-fad7-487e-8563-82f7d08ea8cb","descriptor":"dynamic-form-row","values":{"tooltip":null,"hideEmpty":false,"__isConstValues":[],"__hidden":true,"__readOnly":null,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"employmentPlacementOnChange","type":"client"},"showDisplayName":true,"__outlet":"","required":false,"__baseURL":"","displayName":"Заявка по месту занятости (скрыто)","control":{"path":["context","employment_placement"]},"__relativeURL":"","__renderContentOnDemand":false}},{"id":"836138f2-407d-4ed4-b624-9f982d3d058f","descriptor":"dynamic-form-row","values":{"__relativeURL":"","__baseURL":"","hideEmpty":false,"bindingMode":false,"displayName":"Место подписания документа сотрудником","tooltip":null,"__isConstValues":[],"showDisplayName":true,"__renderContentOnDemand":false,"required":false,"control":{"path":["context","sign_type"]},"__outlet":"","__readOnly":null,"onChangeValue":{"kind":"Function","name":"handleSignTypeChange","type":"client"}}},{"id":"71a63614-9745-4757-bced-0420efa70eda","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","limit"]},"tooltip":null,"required":true,"hideEmpty":false,"__readOnly":null,"onChangeValue":{"kind":"Function","name":"check_replacement","type":"client"}}}]}},{"id":"1acfbee7-2a0d-4e30-a661-a40b31d42f06","descriptor":"groupbox","values":{"title":" ","__outlet":"","styleEnum":[{"code":"default","name":"Default"}],"__renderContentOnDemand":false,"__renderContentAsync":false,"expanded":true,"__baseURL":"","collapsible":false,"__relativeURL":"","__isConstValues":[]},"content":{"":[{"id":"c1642f79-6b72-4fa8-8040-0980db417507","descriptor":"elma-info-block","values":{"__outlet":"","__isConstValues":[],"__hidden":{"path":["need_sign_from_employer_reedonly"],"modifier":"not"},"typeEnum":[{"code":"info","name":"shared.common.elma-info-block@widget-type-info"}],"__baseURL":"","__relativeURL":"","__renderContentAsync":false,"__renderContentOnDemand":false,"text":"При отправке документов на портал Работа в России документы первым подписывает работодатель в ELMA"},"content":{"":[]}},{"id":"e5849e5d-eaa2-4640-887f-53a1a0b9dc15","descriptor":"dynamic-form-row","values":{"tooltip":null,"__readOnly":{"path":["need_sign_from_employer_reedonly"]},"__relativeURL":"","__renderContentOnDemand":false,"control":{"path":["context","chief_sign_required"]},"required":{"path":["need_sign_from_employer"]},"hideEmpty":false,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"setStaffChief","type":"client"},"__isConstValues":[],"showDisplayName":true,"__hidden":{"path":["sign_type_is_goskey"]},"__outlet":"","__baseURL":""}},{"id":"e1b64366-f6fa-4b4c-aac7-220de4645fda","descriptor":"dynamic-form-row","values":{"__readOnly":null,"bindingMode":false,"__relativeURL":"","__isConstValues":[],"__baseURL":"","__outlet":"","showDisplayName":true,"__renderContentOnDemand":false,"control":{"path":["context","staff_chief_app"]},"__hidden":{"path":["staff_chief_app_visibility"],"modifier":"not"},"showCreateItem":false,"tooltip":null,"hideEmpty":false,"required":{"path":["staff_chief_app_visibility"]}}},{"id":"ba22ae4a-2bfc-403a-93c6-3bbb42dbab46","descriptor":"dynamic-form-row","values":{"tooltip":null,"__hidden":{"path":["staff_chief_limit_visibility"],"modifier":"not"},"__outlet":"","required":{"path":["staff_chief_limit_visibility"]},"__baseURL":"","__relativeURL":"","__isConstValues":[],"control":{"path":["context","staff_chief_limit"]},"hideEmpty":false,"__readOnly":null,"bindingMode":false,"showDisplayName":true,"__renderContentOnDemand":false}}]}},{"id":"8a205887-c6b7-4ba5-bf94-2c4f080ee4e9","descriptor":"groupbox","values":{"__hidden":true,"__outlet":"","__renderContentAsync":false,"__renderContentOnDemand":false,"title":" ","expanded":true,"__baseURL":"","styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"__relativeURL":"","__isConstValues":[]},"content":{"":[{"id":"1d16101c-5b02-4e95-b5b1-25ef3b729fce","descriptor":"dynamic-form-row","values":{"required":false,"bindingMode":false,"__relativeURL":"","__hidden":{"path":["send_staffs_organization_visibility"],"modifier":"not"},"__outlet":"","__baseURL":"","__readOnly":null,"onChangeValue":{"kind":"Function","name":"setVisibilityWhomSend","type":"client"},"showDisplayName":true,"tooltip":null,"control":{"path":["context","send_staffs_organization"]},"hideEmpty":false,"__isConstValues":[],"__renderContentOnDemand":false}},{"id":"7a678556-a4f4-4d0e-a29b-c4c1b465be68","descriptor":"dynamic-form-row","values":{"onChangeValue":{"kind":"Function","name":"setStaffsVisibility","type":"client"},"control":{"path":["context","signatory_staffs_organization"]},"tooltip":null,"__readOnly":null,"bindingMode":false,"__relativeURL":"","__outlet":"","showCreateItem":false,"showDisplayName":true,"required":{"path":["organization_visibility"]},"hideEmpty":false,"__isConstValues":[],"__hidden":{"path":["organization_visibility"],"modifier":"not"},"__baseURL":"","__renderContentOnDemand":false}},{"id":"e9ca3c5c-656f-4678-a6fb-70434837aced","descriptor":"dynamic-form-row","values":{"required":{"path":["whom_send_visibility"]},"__readOnly":null,"showDisplayName":true,"__renderContentOnDemand":false,"__hidden":{"path":["whom_send_visibility"],"modifier":"not"},"__outlet":"","__relativeURL":"","__isConstValues":[],"tooltip":null,"hideEmpty":false,"bindingMode":false,"onChangeValue":{"kind":"Function","name":"setStaffsVisibility","type":"client"},"control":{"path":["context","whom_send"]},"__baseURL":""}},{"id":"56f0c4e6-174f-489e-ac20-fc507f238ac5","descriptor":"dynamic-form-row","values":{"control":{"path":["context","signatory_staffs"]},"__outlet":"","__isConstValues":[],"showDisplayName":true,"__renderContentOnDemand":false,"tooltip":null,"required":{"path":["staffs_visibility"]},"hideEmpty":false,"__baseURL":"","__relativeURL":"","__hidden":{"path":["staffs_visibility"],"modifier":"not"},"__readOnly":null,"bindingMode":false,"showCreateItem":false}}]}},{"id":"3d348822-df2e-44be-97f5-78513e29c17d","descriptor":"groupbox","values":{"__hidden":{"functionName":"currentUserInGroups","functionParams":{"groupsNs":["system@administrators"]}},"__outlet":"","__renderContentAsync":false,"__relativeURL":"","__isConstValues":[],"__renderContentOnDemand":false,"title":" ","expanded":true,"__baseURL":"","styleEnum":[{"code":"default","name":"Default"}],"collapsible":false},"content":{"":[{"id":"5aef53b9-d74c-4bda-81c3-69e966cd193a","descriptor":"dynamic-form-row","values":{"required":false,"hideEmpty":false,"onChangeValue":{"kind":"Function","name":"handleExistingValue","type":"client"},"showDisplayName":true,"__renderContentOnDemand":false,"tooltip":"Поле доступно только для администраторов","__hidden":{"functionName":"currentUserInGroups","functionParams":{"groupsNs":["system@administrators"]}},"__outlet":"","__baseURL":"","bindingMode":false,"__relativeURL":"","__isConstValues":[],"control":{"path":["context","send_existing_doc"]},"__readOnly":null}},{"id":"830e6cbf-252b-4b52-8388-f07b7f52266d","descriptor":"dynamic-form-row","values":{"__renderContentOnDemand":false,"tooltip":null,"__relativeURL":"","showDisplayName":true,"__baseURL":"","hideEmpty":false,"bindingMode":false,"__outlet":"","onChangeValue":{"kind":"Function","name":"checkDocType","type":"client"},"__readOnly":null,"__isConstValues":[],"control":{"path":["context","doc_type"]},"__hidden":{"path":["context","send_existing_doc"],"modifier":"not"},"required":false}},{"id":"1c664c7c-28b2-4e14-9c58-d77f79eb3861","descriptor":"dynamic-form-row","values":{"__hidden":{"path":["document_employment_choose"],"modifier":"not"},"required":false,"hideEmpty":false,"__isConstValues":[],"control":{"path":["context","documents_for_employment"]},"tooltip":null,"__readOnly":null,"bindingMode":false,"showCreateItem":false,"showDisplayName":true}},{"id":"b4c11ae4-72a7-4d08-a490-31ce3671f467","descriptor":"dynamic-form-row","values":{"__hidden":{"path":["staff_document_choose"],"modifier":"not"},"hideEmpty":false,"bindingMode":false,"__isConstValues":[],"control":{"path":["context","personnel_document"]},"required":false,"__readOnly":null,"showCreateItem":false,"showDisplayName":true,"tooltip":null}}]}}]}}],"[sidebar]":[{"id":"0ceaa8ec-5cdc-4385-9a6b-b0ae1e04039b","descriptor":"sidebar-widget","content":{"":[{"id":"2c1bfe32-44b9-46d5-bee7-2ed66205f4d6","descriptor":"user-guide","values":{"userGuide":{"path":["instruction"]}}}]}},{"id":"2112f287-a8ad-433c-862d-f9808c2d4f7b","descriptor":"sidebar-widget","content":{"":[{"id":"8900384e-a047-46b0-8ba7-462c23711e72","descriptor":"target-widget","values":{"context":{"path":["context"]}}}]}}],"[headerControls]":[],"[headerCustomization]":[]}},"fields":[{"code":"show_infoblock","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Показать информационный блок?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"infoblock_text","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Текст инфоблока","data":{"additionalType":"string"}}},{"code":"send_existing_doc","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Отправка существующего документа","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"document_employment_choose","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Выбран документ трудоустройства","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"staff_document_choose","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Выбран кадровый документ","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"sign_type_is_goskey","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Тип подписания - Госключ","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"need_sign_from_employer","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":true,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Параметр Требуется подписание со стороны работодателя - обязательный","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"staff_chief_app_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Подписант со стороны работодателя видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"staff_chief_limit_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Подписать работодателю до видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"send_staffs_organization_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Отправить сотрудникам организации видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"whom_send_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Кому отправить видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"organization_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Организация видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"staffs_visibility","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Сотрудники видимость","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}},{"code":"need_sign_from_employer_reedonly","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Параметр Требуется подписание со стороны работодателя - для чтения","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"},"input":true,"output":true}}],"fieldVisibilityConditions":{"infoblock_text":{"enabled":false,"conditions":[]},"show_infoblock":{"enabled":false,"conditions":[]},"send_existing_doc":{"enabled":false,"conditions":[]},"staffs_visibility":{"enabled":false,"conditions":[]},"sign_type_is_goskey":{"enabled":false,"conditions":[]},"whom_send_visibility":{"enabled":false,"conditions":[]},"staff_document_choose":{"enabled":false,"conditions":[]},"need_sign_from_employer":{"enabled":false,"conditions":[]},"organization_visibility":{"enabled":false,"conditions":[]},"document_employment_choose":{"enabled":false,"conditions":[]},"staff_chief_app_visibility":{"enabled":false,"conditions":[]},"staff_chief_limit_visibility":{"enabled":false,"conditions":[]},"need_sign_from_employer_reedonly":{"enabled":false,"conditions":[]},"send_staffs_organization_visibility":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\n\ndeclare const console: any;\ndeclare const window: any;\ndeclare const document: any;\n\ntype fileJson = {\n    file_id: string,\n    doc_name: string,\n    doc_type: string\n}\n\ntype goskeyDocsMeta = {\n    docs_package_name: string,\n    files: fileJson[]\n};\n\nlet goskeyDocs: goskeyDocsMeta = {\n    docs_package_name: \"ELMA365 КЭДО\",\n    files: []\n};\n\nlet goskeyAddButton: any;\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    const current_user = await System.users.getCurrentUser();\n    const staff = await Context.fields.signatory_app.app.search()\n        .where((f, g) =\u003e g.and(\n            f.__deletedAt.eq(null),\n            f.ext_user.eq(current_user),\n        ))\n        .first();\n    if (staff \u0026\u0026 staff.data.organization) {\n        const staff_organization = await staff.data.organization.fetch();\n        Context.data.signatory_staffs_organization = staff_organization;\n        //Context.data.staff_chief_app = staff_organization.data.signatories ? staff_organization.data.signatories[0] : undefined;\n        // Context.fields.staff_chief_app.data.setFilter((appFields, context, globalFilters) =\u003e globalFilters.and(\n        //     appFields.organization.link(staff.data.organization!),\n        //     appFields.__status.eq(Context.fields.signatory_app.app.fields.__status.variants.signed_documents)\n        // ));\n    }\n    let waitForButton = window.setInterval(() =\u003e {\n        goskeyAddButton = document.querySelector(\".goskey-wrapper .btn-primary\");\n        if (!goskeyAddButton) {\n            return;\n        };\n        window.clearInterval(waitForButton);\n        goskeyAddButton.classList.add(\"disabled\");\n    }, 300)\n    const now = new Datetime();\n    Context.fields.limit.data.setFilter((f, g) =\u003e f.gte(now));\n    Context.fields.staff_chief_limit.data.setFilter((f, g) =\u003e f.gte(now));\n};\n\nasync function check_replacement(): Promise\u003cvoid\u003e {\n    hide_message();\n    if (Context.data.signatory_app \u0026\u0026 Context.data.limit) {\n        const staff = await Context.data.signatory_app.fetch();\n        const user = staff.data.ext_user;\n\n        const replacement = await System.replacements.search().where((f, g) =\u003e g.and(\n            f.absent.eq(user!),\n            f.begin.lte(Context.data.limit!),\n            f.end.gte(Context.data.limit!)\n        )).first();\n\n        if (replacement) {\n            show_message('Внимание! Сотрудник отсутствует и по нему установлено замещение. Отправленный документ придет на подписание после завершения замещения.');\n        }\n    }\n}\n\nfunction show_message(text: string) {\n    ViewContext.data.show_infoblock = true;\n    ViewContext.data.infoblock_text = text;\n}\n\nfunction hide_message() {\n    ViewContext.data.show_infoblock = false;\n    ViewContext.data.infoblock_text = undefined;\n}\nasync function checkDocType(): Promise\u003cvoid\u003e {\n    ViewContext.data.staff_document_choose = false;\n    ViewContext.data.document_employment_choose = false;\n    if (Context.data.doc_type) {\n        if (Context.data.doc_type.code === \"personnel_doc\") {\n            ViewContext.data.staff_document_choose = true;\n            ViewContext.data.document_employment_choose = false;\n        } else {\n            ViewContext.data.staff_document_choose = false;\n            ViewContext.data.document_employment_choose = true;\n        };\n    }\n};\n\nasync function handleExistingValue(): Promise\u003cvoid\u003e {\n    if (Context.data.send_existing_doc) {\n        return;\n    } else {\n        Context.data.doc_type = undefined;\n        Context.data.documents_for_employment = undefined;\n        Context.data.personnel_document = undefined;\n    };\n};\n\nasync function handleSignTypeChange(): Promise\u003cvoid\u003e {\n    if (Context.data.sign_type \u0026\u0026 Context.data.sign_type.code == Context.fields.sign_type.variants.work_in_russia.code) {\n        ViewContext.data.need_sign_from_employer_reedonly = true;\n        Context.data.chief_sign_required = true;\n    } else {\n        ViewContext.data.need_sign_from_employer_reedonly = false;\n    }\n    if (Context.data.sign_type!.code === \"goskey\") {\n        ViewContext.data.need_sign_from_employer = false;\n        ViewContext.data.sign_type_is_goskey = true;\n        Context.data.sign_wigh_goskey = true;\n        ViewContext.data.staff_chief_app_visibility = false;\n        ViewContext.data.staff_chief_limit_visibility = false;\n    } else {\n        ViewContext.data.need_sign_from_employer = true;\n        ViewContext.data.sign_type_is_goskey = false;\n        Context.data.sign_wigh_goskey = false;\n        Context.data.goskey_files = [];\n        await setStaffChief();\n    }\n};\n\nasync function addFileToPackage(): Promise\u003cvoid\u003e {\n    const docType = await Context.data.document_type!.fetch();\n    const file = await Context.data.file!.fetch();\n    let docName = \"\";\n    if (Context.data.app_name) {\n        docName = Context.data.app_name;\n    } else {\n        const file = await Context.data.file!.fetch();\n        docName = file.data.__name;\n    };\n    console.log(file.data.__id)\n    const newFileMeta: fileJson = {\n        //@ts-ignore\n        file_id: file.data.__id?.id,\n        doc_type: docType.data.app_code || \"other_documents\",\n        doc_name: docName\n    };\n\n    if (!Context.data.goskey_files || Context.data.goskey_files.length \u003c 1) {\n        Context.data.goskey_files = [Context.data.file!];\n    } else {\n        Context.data.goskey_files = Context.data.goskey_files.concat([Context.data.file!]);\n    };\n    goskeyDocs.files.push(newFileMeta)\n    if (Context.data.package_name) {\n        goskeyDocs.docs_package_name = Context.data.package_name;\n    };\n\n    Context.data.goskey_docs_json = JSON.stringify(goskeyDocs);\n    console.log(Context.data.goskey_docs_json);\n    Context.data.file = undefined;\n    Context.data.app_name = \"\";\n    Context.data.document_type = undefined;\n    await handleDisabledButton();\n};\n\nasync function handleDisabledButton(): Promise\u003cvoid\u003e {\n    if (!Context.data.sign_type || Context.data.sign_type.code !== \"goskey\") {\n        return;\n    };\n    Context.data.document_type \u0026\u0026 Context.data.file ? goskeyAddButton.classList.remove(\"disabled\") : goskeyAddButton.classList.add(\"disabled\");\n};\n\nasync function handleDocsChange(): Promise\u003cvoid\u003e {\n    if (!Context.data.goskey_files) {\n        Context.data.goskey_docs_json = \"\";\n        return;\n    };\n    //@ts-ignore\n    const fileIds = Context.data.goskey_files.map(f =\u003e f.id.id);\n    let jsonFilesMeta = \u003cgoskeyDocsMeta\u003eJSON.parse(Context.data.goskey_docs_json!);\n    jsonFilesMeta.files = jsonFilesMeta.files.filter(file =\u003e fileIds.indexOf(file.file_id) !== -1);\n    Context.data.goskey_docs_json = JSON.stringify(jsonFilesMeta);\n};\n\nasync function setStaffChief(): Promise\u003cvoid\u003e {\n    if (Context.data.chief_sign_required === true) {\n        ViewContext.data.staff_chief_app_visibility = true;\n        ViewContext.data.staff_chief_limit_visibility = true;\n        ViewContext.data.send_staffs_organization_visibility = true;\n    } else {\n        ViewContext.data.staff_chief_app_visibility = false;\n        ViewContext.data.staff_chief_limit_visibility = false;\n        ViewContext.data.send_staffs_organization_visibility = false;\n        Context.data.signatory_staffs = [];\n        Context.data.send_staffs_organization = undefined;\n        Context.data.whom_send = undefined;\n        Context.data.staff_chief_app = undefined;\n    }\n}\n\nasync function setVisibilityWhomSend(): Promise\u003cvoid\u003e {\n    ViewContext.data.whom_send_visibility = false;\n    ViewContext.data.organization_visibility = false;\n    ViewContext.data.staffs_visibility = false;\n    Context.data.signatory_staffs = [];\n    Context.data.whom_send = undefined;\n    if (Context.data.send_staffs_organization === true) {\n        ViewContext.data.whom_send_visibility = true;\n        ViewContext.data.organization_visibility = true;\n    }\n    await setStaffsVisibility();\n}\n\nasync function setStaffsVisibility(): Promise\u003cvoid\u003e {\n    ViewContext.data.staffs_visibility = false;\n    if (Context.data.whom_send) {\n        if (Context.data.whom_send.code === 'selected_staffs') {\n            ViewContext.data.staffs_visibility = true;\n        }\n    }\n}\n\nasync function employmentPlacementOnChange(): Promise\u003cvoid\u003e {\n    // Сбрасываем значение выбранного подписанта\n    Context.data.staff_chief_app = undefined;\n    \n    if (!Context.data.employment_placement) {\n        return;\n    }\n\n    const employment_placement = await Context.data.employment_placement.fetch();\n\n    if (!employment_placement.data.organization) {\n        throw new Error(\"На выбранном месте занятости не указана организация\");\n    }\n\n    // При изменении места занятости сотрудника, показываем только сотрудников\n    // организации места занятости\n    Context.fields.staff_chief_app.data.setFilter((f, c, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.organization.link(employment_placement.data.organization!),\n    ));\n}\n","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{},"dataFieldCode":"context"},"dataNamespace":"kedo","dataCode":"_process_prepare_document_for_sign","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        let goskeyDocs = {\n            docs_package_name: \"ELMA365 КЭДО\",\n            files: []\n        };\n        let goskeyAddButton;\n        async function onInit() {\n            const current_user = await System.users.getCurrentUser();\n            const staff = await Context.fields.signatory_app.app.search()\n                .where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(current_user)))\n                .first();\n            if (staff \u0026\u0026 staff.data.organization) {\n                const staff_organization = await staff.data.organization.fetch();\n                Context.data.signatory_staffs_organization = staff_organization;\n            }\n            let waitForButton = window.setInterval(() =\u003e {\n                goskeyAddButton = document.querySelector(\".goskey-wrapper .btn-primary\");\n                if (!goskeyAddButton) {\n                    return;\n                }\n                ;\n                window.clearInterval(waitForButton);\n                goskeyAddButton.classList.add(\"disabled\");\n            }, 300);\n            const now = new Datetime();\n            Context.fields.limit.data.setFilter((f, g) =\u003e f.gte(now));\n            Context.fields.staff_chief_limit.data.setFilter((f, g) =\u003e f.gte(now));\n        }\n        ;\n        async function check_replacement() {\n            hide_message();\n            if (Context.data.signatory_app \u0026\u0026 Context.data.limit) {\n                const staff = await Context.data.signatory_app.fetch();\n                const user = staff.data.ext_user;\n                const replacement = await System.replacements.search().where((f, g) =\u003e g.and(f.absent.eq(user), f.begin.lte(Context.data.limit), f.end.gte(Context.data.limit))).first();\n                if (replacement) {\n                    show_message('Внимание! Сотрудник отсутствует и по нему установлено замещение. Отправленный документ придет на подписание после завершения замещения.');\n                }\n            }\n        }\n        function show_message(text) {\n            ViewContext.data.show_infoblock = true;\n            ViewContext.data.infoblock_text = text;\n        }\n        function hide_message() {\n            ViewContext.data.show_infoblock = false;\n            ViewContext.data.infoblock_text = undefined;\n        }\n        async function checkDocType() {\n            ViewContext.data.staff_document_choose = false;\n            ViewContext.data.document_employment_choose = false;\n            if (Context.data.doc_type) {\n                if (Context.data.doc_type.code === \"personnel_doc\") {\n                    ViewContext.data.staff_document_choose = true;\n                    ViewContext.data.document_employment_choose = false;\n                }\n                else {\n                    ViewContext.data.staff_document_choose = false;\n                    ViewContext.data.document_employment_choose = true;\n                }\n                ;\n            }\n        }\n        ;\n        async function handleExistingValue() {\n            if (Context.data.send_existing_doc) {\n                return;\n            }\n            else {\n                Context.data.doc_type = undefined;\n                Context.data.documents_for_employment = undefined;\n                Context.data.personnel_document = undefined;\n            }\n            ;\n        }\n        ;\n        async function handleSignTypeChange() {\n            if (Context.data.sign_type \u0026\u0026 Context.data.sign_type.code == Context.fields.sign_type.variants.work_in_russia.code) {\n                ViewContext.data.need_sign_from_employer_reedonly = true;\n                Context.data.chief_sign_required = true;\n            }\n            else {\n                ViewContext.data.need_sign_from_employer_reedonly = false;\n            }\n            if (Context.data.sign_type.code === \"goskey\") {\n                ViewContext.data.need_sign_from_employer = false;\n                ViewContext.data.sign_type_is_goskey = true;\n                Context.data.sign_wigh_goskey = true;\n                ViewContext.data.staff_chief_app_visibility = false;\n                ViewContext.data.staff_chief_limit_visibility = false;\n            }\n            else {\n                ViewContext.data.need_sign_from_employer = true;\n                ViewContext.data.sign_type_is_goskey = false;\n                Context.data.sign_wigh_goskey = false;\n                Context.data.goskey_files = [];\n                await setStaffChief();\n            }\n        }\n        ;\n        async function addFileToPackage() {\n            var _a;\n            const docType = await Context.data.document_type.fetch();\n            const file = await Context.data.file.fetch();\n            let docName = \"\";\n            if (Context.data.app_name) {\n                docName = Context.data.app_name;\n            }\n            else {\n                const file = await Context.data.file.fetch();\n                docName = file.data.__name;\n            }\n            ;\n            console.log(file.data.__id);\n            const newFileMeta = {\n                file_id: (_a = file.data.__id) === null || _a === void 0 ? void 0 : _a.id,\n                doc_type: docType.data.app_code || \"other_documents\",\n                doc_name: docName\n            };\n            if (!Context.data.goskey_files || Context.data.goskey_files.length \u003c 1) {\n                Context.data.goskey_files = [Context.data.file];\n            }\n            else {\n                Context.data.goskey_files = Context.data.goskey_files.concat([Context.data.file]);\n            }\n            ;\n            goskeyDocs.files.push(newFileMeta);\n            if (Context.data.package_name) {\n                goskeyDocs.docs_package_name = Context.data.package_name;\n            }\n            ;\n            Context.data.goskey_docs_json = JSON.stringify(goskeyDocs);\n            console.log(Context.data.goskey_docs_json);\n            Context.data.file = undefined;\n            Context.data.app_name = \"\";\n            Context.data.document_type = undefined;\n            await handleDisabledButton();\n        }\n        ;\n        async function handleDisabledButton() {\n            if (!Context.data.sign_type || Context.data.sign_type.code !== \"goskey\") {\n                return;\n            }\n            ;\n            Context.data.document_type \u0026\u0026 Context.data.file ? goskeyAddButton.classList.remove(\"disabled\") : goskeyAddButton.classList.add(\"disabled\");\n        }\n        ;\n        async function handleDocsChange() {\n            if (!Context.data.goskey_files) {\n                Context.data.goskey_docs_json = \"\";\n                return;\n            }\n            ;\n            const fileIds = Context.data.goskey_files.map(f =\u003e f.id.id);\n            let jsonFilesMeta = JSON.parse(Context.data.goskey_docs_json);\n            jsonFilesMeta.files = jsonFilesMeta.files.filter(file =\u003e fileIds.indexOf(file.file_id) !== -1);\n            Context.data.goskey_docs_json = JSON.stringify(jsonFilesMeta);\n        }\n        ;\n        async function setStaffChief() {\n            if (Context.data.chief_sign_required === true) {\n                ViewContext.data.staff_chief_app_visibility = true;\n                ViewContext.data.staff_chief_limit_visibility = true;\n                ViewContext.data.send_staffs_organization_visibility = true;\n            }\n            else {\n                ViewContext.data.staff_chief_app_visibility = false;\n                ViewContext.data.staff_chief_limit_visibility = false;\n                ViewContext.data.send_staffs_organization_visibility = false;\n                Context.data.signatory_staffs = [];\n                Context.data.send_staffs_organization = undefined;\n                Context.data.whom_send = undefined;\n                Context.data.staff_chief_app = undefined;\n            }\n        }\n        async function setVisibilityWhomSend() {\n            ViewContext.data.whom_send_visibility = false;\n            ViewContext.data.organization_visibility = false;\n            ViewContext.data.staffs_visibility = false;\n            Context.data.signatory_staffs = [];\n            Context.data.whom_send = undefined;\n            if (Context.data.send_staffs_organization === true) {\n                ViewContext.data.whom_send_visibility = true;\n                ViewContext.data.organization_visibility = true;\n            }\n            await setStaffsVisibility();\n        }\n        async function setStaffsVisibility() {\n            ViewContext.data.staffs_visibility = false;\n            if (Context.data.whom_send) {\n                if (Context.data.whom_send.code === 'selected_staffs') {\n                    ViewContext.data.staffs_visibility = true;\n                }\n            }\n        }\n        async function employmentPlacementOnChange() {\n            Context.data.staff_chief_app = undefined;\n            if (!Context.data.employment_placement) {\n                return;\n            }\n            const employment_placement = await Context.data.employment_placement.fetch();\n            if (!employment_placement.data.organization) {\n                throw new Error(\"На выбранном месте занятости не указана организация\");\n            }\n            Context.fields.staff_chief_app.data.setFilter((f, c, g) =\u003e g.and(f.__deletedAt.eq(null), f.organization.link(employment_placement.data.organization)));\n        }\n        return {\n            onInit,\n            check_replacement,\n            show_message,\n            hide_message,\n            checkDocType,\n            handleExistingValue,\n            handleSignTypeChange,\n            addFileToPackage,\n            handleDisabledButton,\n            handleDocsChange,\n            setStaffChief,\n            setVisibilityWhomSend,\n            setStaffsVisibility,\n            employmentPlacementOnChange\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"check_replacement","parameters":[],"type":"[object Object]"},{"name":"show_message","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""},{"name":"hide_message","parameters":[],"type":""},{"name":"checkDocType","parameters":[],"type":"[object Object]"},{"name":"handleExistingValue","parameters":[],"type":"[object Object]"},{"name":"handleSignTypeChange","parameters":[],"type":"[object Object]"},{"name":"addFileToPackage","parameters":[],"type":"[object Object]"},{"name":"handleDisabledButton","parameters":[],"type":"[object Object]"},{"name":"handleDocsChange","parameters":[],"type":"[object Object]"},{"name":"setStaffChief","parameters":[],"type":"[object Object]"},{"name":"setVisibilityWhomSend","parameters":[],"type":"[object Object]"},{"name":"setStaffsVisibility","parameters":[],"type":"[object Object]"},{"name":"employmentPlacementOnChange","parameters":[],"type":"[object Object]"}],"clientDependencies":{"applications":[],"collections":[{"namespace":"kedo","code":"staff"},{"namespace":"system","code":"substitutions"},{"namespace":"kedo","code":"employment_directory"}],"pages":[]}},"__createdAt":"2024-03-29T11:29:53.823040193Z","__createdBy":"d78f4b2f-13a2-4903-aeeb-fdb72d5b9d0c","__updatedAt":"2024-04-03T07:11:03.628706217Z","__updatedBy":"8c6e1940-a6f3-4603-aff7-7cdf41cc9799","__deletedAt":null}
