{"__id":"018c8757-fd60-7a64-acff-f80a1edccef3","namespace":"kedo","code":"vacation_shedule","__name":"График отпусков","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":false,"draft":false,"readonly":false,"descriptor":{"icon":"chart_bar","template":{"id":"2147d263-c05e-4ea7-8639-2b9c890d203d","descriptor":"component","content":{"":[{"id":"7b560573-1fee-40cf-8cdb-e67a82ca7a16","descriptor":"code","values":{"html":"\u003cdiv class=\"calendar-schedule calendar-schedule__container\"\u003e\n    \u003cdiv class=\"calendar-schedule__left-menu\"\u003e\n        \u003cdiv class=\"calendar-schedule__left-menu-header\"\u003e\n            \u003cp class=\"calendar-schedule__header-text\"\u003eСотрудник\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"calendar-schedule__left-menu-container\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"calendar-schedule__calendar-wrapper\"\u003e\n\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003ctemplate class=\"left-menu__template\"\u003e\n    \u003cdiv class=\"left-menu__item\"\u003e\n        \u003cdiv class=\"left-menu__content-wrapper\"\u003e\n            \u003cp class=\"left-menu__item-text\"\u003e\n\n            \u003c/p\u003e\n            \u003cdiv class=\"left-menu__correction-icon\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"user-card\"\u003e\n            \u003cdiv class=\"user-card__content\"\u003e\n                \u003cdiv class=\"user-card__left-side-content\"\u003e\n                    \u003cdiv class=\"user-card__name-container\"\u003e\n                        \u003cp class=\"user-card__name\"\u003e\u003c/p\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"user-card__phone-container\"\u003e\n                        \u003csvg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n                            \u003cpath\n                                d=\"M15.1326 10.312L11.9579 8.95109C11.6729 8.82989 11.3563 8.80427 11.0555 8.87807C10.7548 8.95187 10.486 9.12112 10.2895 9.36046L9.26758 10.6105C7.62832 9.71703 6.281 8.37047 5.38664 6.73171L6.63664 5.70984C6.87598 5.51309 7.0452 5.24416 7.11899 4.94324C7.19278 4.64233 7.16718 4.32562 7.04601 4.04046L5.68726 0.867965C5.55612 0.559222 5.32033 0.306597 5.02135 0.154506C4.72237 0.00241575 4.37934 -0.0394032 4.05258 0.0364024L1.10914 0.71484C0.793309 0.786515 0.511324 0.963658 0.309661 1.21707C0.107999 1.47048 -0.00130566 1.78504 -0.000236369 2.1089C-0.000236369 9.80453 6.23976 16.0027 13.8923 15.9995C14.2161 16.0005 14.5305 15.8911 14.7839 15.6894C15.0372 15.4877 15.2142 15.2056 15.2857 14.8898L15.9638 11.9455C16.0386 11.6189 15.9963 11.2766 15.8444 10.978C15.6924 10.6795 15.4405 10.4438 15.1326 10.312ZM13.8329 14.5023C7.03351 14.4711 1.53101 8.96828 1.49976 2.16515L4.33383 1.51203L5.64914 4.5814L3.52133 6.32234C4.97101 9.41609 6.58976 11.0295 9.67758 12.4786L11.4179 10.3502L14.4863 11.6661L13.8329 14.5023Z\"\n                                fill=\"#8C8C8C\" /\u003e\n                        \u003c/svg\u003e\n                        \u003cp class=\"user-card__phone\"\u003e\u003c/p\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"user-card__email-container\"\u003e\n                        \u003csvg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n                            \u003cpath\n                                d=\"M15.4062 2.125H1.59375C0.713535 2.125 0 2.83854 0 3.71875V13.2812C0 14.1615 0.713535 14.875 1.59375 14.875H15.4062C16.2865 14.875 17 14.1615 17 13.2812V3.71875C17 2.83854 16.2865 2.125 15.4062 2.125ZM15.4062 3.71875V5.0736C14.6618 5.67986 13.4749 6.62256 10.9375 8.6094C10.3784 9.04925 9.27071 10.1059 8.5 10.0936C7.72942 10.1061 6.6214 9.04908 6.06246 8.6094C3.52551 6.62286 2.33833 5.67996 1.59375 5.0736V3.71875H15.4062ZM1.59375 13.2812V7.11868C2.35457 7.72467 3.4335 8.57504 5.07802 9.86279C5.80374 10.434 7.07466 11.6951 8.5 11.6875C9.91834 11.6951 11.1732 10.4523 11.9217 9.86305C13.5662 8.57534 14.6454 7.72474 15.4062 7.11872V13.2812H1.59375Z\"\n                                fill=\"#8C8C8C\" /\u003e\n                        \u003c/svg\u003e\n                        \u003ca href=\"\" class=\"user-card__email\"\u003e\u003c/a\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"user-card__right-side-content\"\u003e\n                    \u003cdiv class=\"user-card__image-container\"\u003e\n                        \u003cp class=\"user-card__image-text\"\u003e\u003c/p\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/template\u003e\n\n\u003ctemplate class=\"template-calendar-week\"\u003e\n    \u003cdiv class=\"calendar__week-wrapper\"\u003e\n        \u003cdiv class=\"calendar__week-header\"\u003e\n            \u003cdiv class=\"calendar__week-header-top\"\u003e\n                \u003cp class=\"calendar__week-header-text\"\u003e\u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"calendar__days-wrapper\"\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"0\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eпн\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"1\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eвт\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"2\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eср\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"3\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eчт\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"4\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eпт\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"5\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eсб\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"calendar__day\" data-day=\"6\"\u003e\n                \u003cdiv class=\"calendar__week-day\"\u003e\n                    \u003cp\u003eвс\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"calendar__column-day-container\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/template\u003e","hideContent":true,"contentPlaceholder":"HTML"}},{"id":"05ef14ef-d6cb-4b3e-b87f-fa8fbec888d2","descriptor":"code","values":{"html":"\u003cstyle\u003e\n    .calendar-schedule {}\n\n    .calendar-schedule__container {\n        display: flex;\n        flex-wrap: nowrap;\n    }\n\n    .calendar-schedule__left-menu {\n        min-width: 214px;\n    }\n\n    .calendar-schedule__left-menu-header {\n        background-color: #f0f0f0;\n        padding: 10px 24px;\n    }\n\n    .calendar-schedule__header-text {\n        font-weight: 600;\n        font-size: 15px;\n        line-height: 22px;\n\n        color: #252525;\n\n        margin: 0;\n    }\n\n    .calendar-schedule__left-menu-container {\n        padding: 8px 0;\n    }\n\n    .left-menu__item {\n        position: relative;\n        padding: 6px 24px;\n\n        cursor: pointer;\n    }\n\n    .left-menu__content-wrapper {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .left-menu-item--correction {\n        background-color: #f4fafe;\n    }\n\n    .left-menu-item--correction .left-menu__correction-icon {\n        min-width: 14px;\n        min-height: 14px;\n        background-image: url(\"data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14 1.5V12.5C14 13.3284 13.3284 14 12.5 14H1.5C0.671562 14 0 13.3284 0 12.5V1.5C0 0.671562 0.671562 0 1.5 0H12.5C13.3284 0 14 0.671562 14 1.5ZM12.5 12.3125V1.6875C12.5 1.63777 12.4802 1.59008 12.4451 1.55492C12.4099 1.51975 12.3622 1.5 12.3125 1.5H1.6875C1.63777 1.5 1.59008 1.51975 1.55492 1.55492C1.51975 1.59008 1.5 1.63777 1.5 1.6875V12.3125C1.5 12.3622 1.51975 12.4099 1.55492 12.4451C1.59008 12.4802 1.63777 12.5 1.6875 12.5H12.3125C12.3622 12.5 12.4099 12.4802 12.4451 12.4451C12.4802 12.4099 12.5 12.3622 12.5 12.3125ZM8.3125 10C8.3125 10.7237 7.72372 11.3125 7 11.3125C6.27628 11.3125 5.6875 10.7237 5.6875 10C5.6875 9.27628 6.27628 8.6875 7 8.6875C7.72372 8.6875 8.3125 9.27628 8.3125 10ZM5.76969 3.39372L5.98219 7.64372C5.99216 7.84331 6.15691 8 6.35672 8H7.64328C7.84309 8 8.00784 7.84331 8.01781 7.64372L8.23031 3.39372C8.24103 3.17953 8.07025 3 7.85578 3H6.14422C5.92975 3 5.75897 3.17953 5.76969 3.39372Z' fill='%231E6599'/%3E%3C/svg%3E\");\n        align-self: center;\n        background-repeat: no-repeat;\n    }\n\n    .left-menu__item-text {\n        width: 100%;\n        font-weight: 400;\n        font-size: 15px;\n        line-height: 22px;\n\n        color: #1e6599;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n\n        margin: 0;\n    }\n\n    .calendar-schedule__calendar-wrapper {\n        display: flex;\n        flex-wrap: nowrap;\n        overflow-x: scroll;\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n\n    .calendar__week-wrapper {\n        min-width: 133px;\n        height: 100%;\n        border: 1px solid #d9d9d9;\n        border-right: 0;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .calendar__week-wrapper:last-child {\n        border-right: 1px solid #d9d9d9;\n    }\n\n    .calendar__week-header {}\n\n    .calendar__week-header-top {\n        background-color: #f0f0f0;\n    }\n\n    .calendar__week-header-text {\n        font-size: 13px;\n        line-height: 20px;\n\n        color: #252525;\n\n        margin: 0;\n        padding-left: 3px;\n    }\n\n    .calendar__week-days {\n        display: flex;\n    }\n\n    .calendar__week-day {\n        font-size: 13px;\n        line-height: 20px;\n\n        color: #595959;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-bottom: 1px solid #f0f0f0;\n    }\n\n    .calendar__week-day p {\n        margin: 0;\n    }\n\n    .calendar__days-wrapper {\n        flex-grow: 1;\n\n        display: flex;\n    }\n\n    .calendar__day {\n        flex-grow: 1;\n        border-right: 1px solid #f0f0f0;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .calendar__day:last-child {\n        border-right: 0;\n    }\n\n    .calendar__day--weekend .calendar__week-day {\n        background-color: #f4fafe;\n    }\n\n    .calendar__day--weekend .calendar__week-day p {\n        color: #367eb2;\n    }\n\n    .calendar__day--weekend .calendar__column-day-container {\n        background-color: #f4fafe;\n    }\n\n    .calendar-schedule__calendar-wrapper::-webkit-scrollbar {\n        height: 8px;\n    }\n\n    /* Track */\n    .calendar-schedule__calendar-wrapper::-webkit-scrollbar-track {\n        background: #fff;\n    }\n\n    /* Handle */\n    .calendar-schedule__calendar-wrapper::-webkit-scrollbar-thumb {\n        background: #c4c4c4;\n        border-radius: 10px;\n    }\n\n    .calendar-schedule__calendar-wrapper::-webkit-scrollbar-thumb:hover {\n        background: #a4a4a4;\n    }\n\n    .calendar__column-day-container {\n        padding: 8px 0;\n        flex-grow: 1;\n    }\n\n    .day-cell {\n        height: 20px;\n        margin: 6px 0 14.3px;\n        position: relative;\n    }\n\n    .vacation-bar {\n        height: 100%;\n        position: absolute;\n        z-index: 200;\n        display: flex;\n\n        border-radius: 2px;\n        pointer-events: none\n    }\n\n    .vacation-bar:hover {\n        outline: 1px solid #1e6599;\n    }\n\n    .vacation-bar:hover .vacation-bar__tooltip {\n        visibility: visible;\n        opacity: 1;\n    }\n\n    .vacation-bar--correction {\n        outline: 1px solid #e62d32;\n    }\n\n    .vacation-bar--correction:hover {\n        outline: 1px solid #e62d32;\n    }\n\n    .vacation-bar--correction:hover .vacation-bar__tooltip {\n        outline: 1px solid #e62d32;\n        visibility: hidden;\n        opacity: 0;\n    }\n\n    .vacation-bar__tooltip {\n        visibility: hidden;\n        position: absolute;\n        background-color: #262626;\n        text-align: center;\n        padding: 5px 8px;\n        border-radius: 4px;\n        z-index: 50;\n        opacity: 0;\n        bottom: calc(100% + 8px);\n        right: 50%;\n        transform: translateX(50%);\n        transition: opacity .3s;\n        pointer-events: none;\n    }\n\n    .vacation-bar__tooltip::after {\n        content: \"\";\n        position: absolute;\n        top: 95%;\n        left: 50%;\n        margin-left: -7px;\n        border-width: 7px;\n        border-style: solid;\n        border-color: #262626 transparent transparent transparent;\n    }\n\n    .vacation-bar__tooltip p {\n        color: #fff;\n        margin: 0;\n        white-space: nowrap;\n    }\n\n    .vacation-bar--correction .vacation-bar__part {\n        background: #ffccce;\n    }\n\n    .vacation-bar--correction .vacation-bar__part--dashed {\n        background: repeating-linear-gradient(45deg, #ffccce 0, #ffccce 2px, rgba(255, 204, 206, 0.5) 3px, rgba(255, 204, 206, 0.5) 6px);\n    }\n\n    .vacation-bar__part {\n        background: #6baad8;\n        height: 100%;\n        cursor: pointer;\n        pointer-events: auto;\n    }\n\n    .vacation-bar__part--start {\n        border-radius: 2px 0 0 2px;\n    }\n\n    .vacation-bar__part--end {\n        flex-grow: 1;\n        border-radius: 0 2px 2px 0;\n    }\n\n    .vacation-bar__part--start.vacation-bar__part--end {\n        border-radius: 2px;\n    }\n\n    .vacation-bar__part--dashed {\n        background: repeating-linear-gradient(45deg, #6baad8 0, #6baad8 2px, rgba(107, 170, 216, 0.5) 3px, rgba(107, 170, 216, 0.5) 6px);\n    }\n\n    .left-menu__item .user-card {\n        position: absolute;\n        top: 35px;\n        z-index: 10;\n        padding: 22px 24px;\n        background: #fff;\n        box-shadow: 0px 2px 8px rgba(37, 41, 65, 0.16);\n        border-radius: 4px;\n        display: none;\n    }\n\n    .left-menu__item .user-card--active {\n        display: block;\n    }\n\n    .user-card__name-container {\n        margin-bottom: 30px;\n    }\n\n    .user-card__name {\n        color: #262626;\n        font-weight: 600;\n        line-height: 22px;\n        font-size: 15px;\n    }\n\n    .user-card__phone-container {\n        display: flex;\n        align-items: center;\n        margin-bottom: 8px;\n    }\n\n    .user-card__phone {\n        font-size: 15px;\n        line-height: 22px;\n        margin-left: 8px;\n    }\n\n    .user-card__email-container {\n        display: flex;\n        align-items: center;\n    }\n\n    .user-card__email {\n        margin-left: 8px;\n    }\n\n    .user-card p {\n        margin-bottom: 0;\n    }\n\n    .user-card__content {\n        display: flex;\n    }\n\n    .user-card__image-container {\n        width: 74px;\n        height: 74px;\n        border-radius: 37px;\n        background: #52b794;\n        margin-left: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .user-card__image-text {\n        color: white;\n        font-size: 4rem;\n    }\n\u003c/style\u003e","hideContent":true,"contentPlaceholder":"CSS"}},{"id":"dcba6e4c-9f77-4341-84be-484aafede99e","descriptor":"code","values":{"html":"\u003c% Scripts.init() %\u003e\n","hideContent":false,"contentPlaceholder":""}}]}},"fields":[{"code":"vacation_list","type":"REF_ITEM","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Список отпусков","data":{},"output":true}}],"fieldVisibilityConditions":{"vacation_list":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"/* Client scripts module */\ndeclare const console: any, document: any, window: any;\n\ninterface DateRange {\n    startDate: TDatetime,\n    endDate: TDatetime\n}\n\ninterface Vacation {\n    id: string;\n    daysAmount: number;\n    // vacationType?: TApplication\u003cApplication$absences$vacation_types$Data, any, Application$absences$vacation_types$Processes\u003e;\n    startDate: TDatetime;\n    endDate: TDatetime;\n    correction: boolean;\n    comment: string;\n}\n\ninterface PersonVacations {\n    id: string;\n    name: string;\n    chiefId?: string;\n    isOnCorrection: boolean;\n    vacations: Vacation[];\n}\n\ninterface VacationParts {\n    dashed: boolean;\n    daysAmount: number;\n}\n\nconst MONTHS = ['', \"янв\", \"фев\", \"марта\", \"апр\", \"мая\", \"июня\", \"июля\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n\nconst vacationData: PersonVacations[] = [];\nconst takenRanges: DateRange[] = [];\nlet users: any[] = [];\n\n\nasync function init() {\n    const appIdsArr: string[] = Context.data.vacation_list\n        ? await Context.data.vacation_list!.fetch().then(test =\u003e test.map((item: RefItem) =\u003e item.id))\n        : []\n\n    const vacationsArr = await Namespace.app.holidays.search().where(q =\u003e q.__id.in(appIdsArr)).size(appIdsArr.length).all()\n\n    //find iser ids\n    const userIds: Set\u003cstring\u003e = new Set()\n    for (let i = 0; i \u003c vacationsArr.length; i++) {\n        // console.log(vacationsArr[i])\n        userIds.add(vacationsArr[i].data.staff!.id);\n    }\n    const userIdsArr: string[] = [...userIds];\n    //get users\n    users = await Namespace.app.staff.search().where(q =\u003e q.__id.in(userIdsArr)).size(userIdsArr.length).all();\n    const promiseArr: any[] = [];\n    for (let item of users) {\n        promiseArr.push(item.data.__sourceRef.fetch())\n    }\n    users = await Promise.all(promiseArr)\n\n    for (let i = 0; i \u003c vacationsArr.length; i++) {\n        const personsVacation = vacationData.find(item =\u003e item.id === vacationsArr[i].data.staff?.id);\n        const personWasAdded = !!personsVacation;\n        if (!vacationsArr[i].data.days_amount) {\n            continue;\n        }\n        const isOnCorrection = !!(vacationsArr[i].data.__status?.code === 'correction')\n        if (personWasAdded) {\n\n            const newVacation: Vacation = {\n                id: vacationsArr[i].data.__id,\n                daysAmount: vacationsArr[i].data.days_amount ?? 0,\n                // vacationType: vacationsArr[i].data.vacation_type,\n                startDate: vacationsArr[i].data.start!.asDatetime(new TTime),\n                endDate: vacationsArr[i].data.end!.asDatetime(new TTime),\n                correction: isOnCorrection,\n                comment: vacationsArr[i].data.staff_comment ? vacationsArr[i].data.staff_comment! : \"\"\n            }\n\n            if (!personsVacation?.isOnCorrection) {\n                personsVacation!.isOnCorrection = isOnCorrection;\n            }\n\n            personsVacation!.vacations.push(newVacation)\n            continue;\n        }\n        const newVacation: Vacation = {\n            id: vacationsArr[i].data.__id,\n            daysAmount: vacationsArr[i].data.days_amount ?? 0,\n            // vacationType: vacationsArr[i].data.vacation_type,\n            startDate: vacationsArr[i].data.start!.asDatetime(new TTime),\n            endDate: vacationsArr[i].data.end!.asDatetime(new TTime),\n            correction: isOnCorrection,\n            comment: vacationsArr[i].data.staff_comment ? vacationsArr[i].data.staff_comment! : \"\"\n        }\n\n        const user = users.find(item =\u003e item.id === vacationsArr[i].data.staff!.id)\n        const name = user?.data.__name.split(\" \")\n\n        const newPerson: PersonVacations = {\n            id: vacationsArr[i].data.staff!.id,\n            name: name ? `${name[0]} ${name[1][0]}.${name[2] ? name[2][0] + \".\" : ''}` : \"Имя не найдено\",\n            chiefId: vacationsArr[i].data.chief?.id,\n            isOnCorrection: isOnCorrection,\n            vacations: [newVacation]\n        }\n\n        vacationData.push(newPerson)\n    }\n\n    renderPage();\n}\n\nconst renderPage = async () =\u003e {\n    renderUsers();\n    await renderCalendar();\n    renderVacations()\n}\n\nconst renderUsers = () =\u003e {\n    const root = document.querySelector(\".calendar-schedule__left-menu-container\");\n    const template = document.querySelector(\".left-menu__template\");\n    for (let i = 0; i \u003c vacationData.length; i++) {\n        const element = template.content.cloneNode(true);\n        const text = element.querySelector(\".left-menu__item-text\");\n        text.innerText = vacationData[i].name;\n        const wrapper = element.querySelector(\".left-menu__item\");\n        wrapper.dataset.id = vacationData[i].id\n\n        if (vacationData[i].isOnCorrection) {\n            wrapper.classList.add(\"left-menu-item--correction\")\n        }\n\n\n\n        const user = users.find(item =\u003e item.id === vacationData[i].id)\n\n        const card = element.querySelector(\".user-card\");\n        card.dataset.key = user.data.__id\n\n        const cardName = card.querySelector(\".user-card__name\");\n        cardName.innerText = user.data.__name;\n\n\n        if (user.data.email) {\n            const cardEmail = card.querySelector(\".user-card__email\");\n            cardEmail.innerText = user.data.email?.email;\n            cardEmail.href = `mailto: ${user.data.email?.email}`\n        }\n\n        if (user.data.phone) {\n            const cardPhone = card.querySelector(\".user-card__phone\");\n            cardPhone.innerText = user.data.phone?.tel;\n        }\n\n        const userImageText = element.querySelector(\".user-card__image-text\");\n        userImageText.innerText = user.data.full_name.lastname[0] + user.data.full_name.firstname[0];\n\n        const userTextElement = element.querySelector(\".left-menu__item\");\n\n        userTextElement.addEventListener(\"click\", async (e: any) =\u003e {\n            e.stopPropagation();\n            const activeCard = document.querySelector(\".user-card--active\");\n            if (!!activeCard) {\n                activeCard.classList.remove(\"user-card--active\")\n            }\n\n            if (activeCard?.dataset.key === user.data.__id) return;\n\n            const userCard = document.querySelector(`[data-key='${user.data.__id}']`);\n            userCard.classList.toggle(\"user-card--active\");\n\n        })\n\n        card.addEventListener(\"click\", (e: any) =\u003e {\n            e.stopPropagation();\n        })\n\n        root.append(element)\n    }\n}\n\nconst renderCalendar = async () =\u003e {\n    const calendarGeneralSettings = await System.productionSchedule.getGeneralSettings();\n    const weekends = [calendarGeneralSettings.weekends.monday, calendarGeneralSettings.weekends.tuesday, calendarGeneralSettings.weekends.wednesday, calendarGeneralSettings.weekends.thursday,\n    calendarGeneralSettings.weekends.friday, calendarGeneralSettings.weekends.saturday, calendarGeneralSettings.weekends.sunday]\n    const dateRange = getRenderDateRange();\n    const weekTemplate = document.querySelector(\".template-calendar-week\");\n    const root = document.querySelector(\".calendar-schedule__calendar-wrapper\")\n    if (dateRange) {\n        while (dateRange.startDate.before(dateRange.endDate)) {\n            //render week\n            const element = weekTemplate.content.cloneNode(true);\n\n            const weekText = element.querySelector(\".calendar__week-header-text\");\n            let innerTextWeek = ''\n            const startWeekText = dateRange.startDate.day;\n            const endWeekText = dateRange.startDate.addDate(0, 0, 6).day;\n            if (endWeekText \u003c startWeekText) {\n                innerTextWeek = `${startWeekText} ${MONTHS[dateRange.startDate.month]} - ${endWeekText} ${MONTHS[dateRange.startDate.addDate(0, 0, 6).month]}`\n            } else {\n                innerTextWeek = `${dateRange.startDate.day}-${dateRange.startDate.day + 6} ${MONTHS[dateRange.startDate.month]}`\n            }\n\n            weekText.innerText = innerTextWeek\n            const containers: any[] = Array.from(element.querySelector(\".calendar__days-wrapper\").children)\n            for (let i = 0; i \u003c 7; i++) {\n                const elementContainer = containers[i].querySelector('.calendar__column-day-container')\n                for (let j = 0; j \u003c vacationData.length; j++) {\n                    const cell = document.createElement(\"div\")\n                    cell.classList.add(\"day-cell\")\n                    cell.dataset.userid = vacationData[j].id;\n                    cell.dataset.day = dateRange.startDate.addDate(0, 0, i).format(\"DD.MM.YYYY\")\n                    elementContainer.append(cell)\n                }\n                containers[i].append(elementContainer)\n\n                //weekends\n\n                if (weekends[i]) {\n                    containers[i].classList.add('calendar__day--weekend')\n                }\n            }\n\n            root.append(element);\n\n            const cell = document.createElement(\"div\")\n            cell.classList.add(\"day-cell\")\n\n\n            dateRange.startDate = dateRange.startDate.addDate(0, 0, 7);\n        }\n    }\n\n}\n\nconst renderVacations = () =\u003e {\n    const allRanges: DateRange[] = []\n    for (let i = 0; i \u003c vacationData.length; i++) {\n        for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n            const vacation = vacationData[i].vacations[j];\n            allRanges.push({ startDate: vacation.startDate, endDate: vacation.endDate })\n        }\n    }\n    let counterHelper = 0\n    for (let i = 0; i \u003c vacationData.length; i++) {\n        for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n            const vacation = vacationData[i].vacations[j];\n            const correspondingCell = document.querySelector(`[data-day='${vacation.startDate.format(\"DD.MM.YYYY\")}'][data-userid='${vacationData[i].id}']`)\n            correspondingCell.style.zIndex = i + 1;\n            const newElement = document.createElement('a');\n\n            const vacationRenderParts: VacationParts[] = getRenderParts(allRanges, { startDate: vacation.startDate, endDate: vacation.endDate }, counterHelper)\n\n            for (let k = 0; k \u003c vacationRenderParts.length; k++) {\n                const barPartElement = document.createElement(\"div\");\n                barPartElement.classList.add('vacation-bar__part');\n                if (k === 0) {\n                    barPartElement.classList.add('vacation-bar__part--start');\n                }\n\n                if (k === vacationRenderParts.length - 1) {\n                    barPartElement.classList.add('vacation-bar__part--end');\n                }\n\n                if (vacationRenderParts[k].dashed) {\n                    barPartElement.classList.add('vacation-bar__part--dashed')\n                }\n\n                //barPartElement.style.width = k === vacationRenderParts.length - 1 ? `${vacationRenderParts[k].daysAmount * 19.1}px` : `${vacationRenderParts[k].daysAmount * 18.8}px`;\n                barPartElement.style.width = `${vacationRenderParts[k].daysAmount * 19}px`;\n                newElement.append(barPartElement)\n            }\n\n            newElement.classList.add('vacation-bar')\n            newElement.style.width = `${vacation.daysAmount * 19}px`;\n            if (vacationData[i].vacations[j].correction) {\n                newElement.classList.add('vacation-bar--correction')\n            }\n\n            //tooltip\n            const tooltip = document.createElement('div')\n            tooltip.classList.add('vacation-bar__tooltip')\n            tooltip.innerHTML = vacationData[i].vacations[j].comment ? `\u003cp\u003e${vacationData[i].vacations[j].comment!}\u003c/p\u003e` : \"\u003cp\u003eВернуть на изменение\u003c/p\u003e\"\n            newElement.append(tooltip)\n\n            newElement.href = `./(p:item/absences/vacations/${vacation.id})`\n            newElement.addEventListener('click', (e: any) =\u003e {\n                console.log('click')\n                if (!vacationData[i].vacations[j].correction) {\n                    //await modal loading\n                    let counter = 0;\n                    const checkInterval = window.setInterval(() =\u003e {\n                        counter++\n                        const checkElement = document.querySelector(\".complex-popup-outer:not([hidden]) .fluid-nav-item .btn.btn-default\");\n\n                        if (!!checkElement \u0026\u0026 checkElement.innerText === \"На корректировку\") {\n                            window.clearInterval(checkInterval)\n\n                            window.setTimeout(() =\u003e {\n                                checkElement.click();\n                            }, 1000)\n\n                            trackPopover(newElement, checkElement, vacationData[i].id)\n\n                        }\n                    }, 1000)\n                }\n            })\n\n\n            takenRanges.push({ startDate: vacation.startDate, endDate: vacation.endDate })\n            correspondingCell.append(newElement)\n\n            counterHelper++\n        }\n    }\n}\n\nconst trackPopover = (barElement: any, buttonElement: any, vacationId: string) =\u003e {\n    const checkPopoverInterval = window.setInterval(() =\u003e {\n        const currentPopover = document.querySelector('.popover-outer.visible');\n        // console.log('test', buttonElement.closest('.complex-popup-outer:not([hidden])') )\n        if (!buttonElement.closest('.complex-popup-outer:not([hidden])')) {\n            window.clearInterval(checkPopoverInterval);\n        }\n        if (!!currentPopover) {\n            const sendBtn = currentPopover.querySelector(\".btn.btn-primary\");\n            if (sendBtn.dataset.listener !== 'true') {\n                sendBtn.addEventListener(\"click\", () =\u003e {\n                    const commentInput = currentPopover.querySelector(\"#chief_comment\");\n                    if (!!commentInput.value) {\n                        const leftMenuItem = document.querySelector(`[data-id='${vacationId}']`)\n                        leftMenuItem.classList.add('left-menu-item--correction')\n\n                        barElement.classList.add('vacation-bar--correction');\n                        const popup = buttonElement.closest('.complex-popup__main');\n                        const closeBtn = popup.querySelector(\".btn.close\");\n                        window.clearInterval(checkPopoverInterval);\n                        closeBtn?.click()\n                    }\n                })\n                sendBtn.dataset.listener = \"true\"\n            }\n\n        }\n    }, 1500);\n}\n\nfunction getRenderDateRange(): DateRange | null {\n    let startDate: TDatetime | undefined;\n    let endDate: TDatetime | undefined;\n    for (let i = 0; i \u003c vacationData.length; i++) {\n        for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n            const currentItem = vacationData[i].vacations[j];\n            if (!startDate \u0026\u0026 !endDate) {\n                startDate = currentItem.startDate;\n                endDate = currentItem.endDate;\n                continue;\n            }\n\n            if (startDate!.after(currentItem.startDate)) {\n                startDate = currentItem.startDate;\n            }\n\n            if (endDate!.before(currentItem.endDate)) {\n                endDate = currentItem.endDate;\n            }\n\n        }\n    }\n\n    if (!!startDate \u0026\u0026 !!endDate) {\n        startDate = startDate.addDate(0, 0, -14)\n        endDate = endDate.addDate(0, 0, 14);\n        //@ts-ignore\n        const startDateDay = startDate.ts.day();\n        if (startDateDay !== 1) {\n            startDate = startDate.addDate(0, 0, 8 - startDateDay)\n        }\n        //@ts-ignore\n        const endDateDay = endDate.ts.day();\n        if (endDateDay !== 1) {\n            endDate = endDate.addDate(0, 0, -endDateDay)\n        }\n        return {\n            startDate,\n            endDate\n        }\n    }\n\n    return null\n\n\n}\n\nconst getRenderParts = (ranges: DateRange[], itemRange: DateRange, skipIndex?: number): VacationParts[] =\u003e {\n    const parts: VacationParts[] = [];\n    const isStartDateCrossed = !!ranges.find((item, index) =\u003e {\n        if (index !== skipIndex) {\n            if (\n                (itemRange.startDate.year === item.startDate.year \u0026\u0026 itemRange.startDate.month === item.startDate.month \u0026\u0026 itemRange.startDate.day === item.startDate.day)\n                || (itemRange.startDate.year === item.endDate.year \u0026\u0026 itemRange.startDate.month === item.endDate.month \u0026\u0026 itemRange.startDate.day === item.endDate.day)\n                || (itemRange.startDate.after(item.startDate) \u0026\u0026 itemRange.startDate.before(item.endDate))\n            ) {\n                return true\n            }\n        }\n\n        return false;\n    })\n    parts.push({\n        daysAmount: 1,\n        dashed: isStartDateCrossed\n    })\n    let currentIndex = 0;\n    itemRange.startDate = itemRange.startDate.addDate(0, 0, 1)\n\n    while (!itemRange.startDate.after(itemRange.endDate)) {\n        const isCurrentDayCrossed = !!ranges.find((item, index) =\u003e {\n            if (index !== skipIndex) {\n                if (\n                    (itemRange.startDate.year === item.startDate.year \u0026\u0026 itemRange.startDate.month === item.startDate.month \u0026\u0026 itemRange.startDate.day === item.startDate.day)\n                    || (itemRange.startDate.year === item.endDate.year \u0026\u0026 itemRange.startDate.month === item.endDate.month \u0026\u0026 itemRange.startDate.day === item.endDate.day)\n                    || (itemRange.startDate.after(item.startDate) \u0026\u0026 itemRange.startDate.before(item.endDate))\n                ) {\n                    return true\n                }\n            }\n\n            return false;\n        })\n\n        const currentItem = parts[currentIndex];\n        if (currentItem.dashed !== isCurrentDayCrossed) {\n            currentIndex++\n            parts.push({\n                daysAmount: 1,\n                dashed: isCurrentDayCrossed\n            })\n        } else {\n            parts[currentIndex].daysAmount++;\n        }\n\n        itemRange.startDate = itemRange.startDate.addDate(0, 0, 1);\n    }\n\n\n\n    return parts;\n}","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server) {\n        const MONTHS = ['', \"янв\", \"фев\", \"марта\", \"апр\", \"мая\", \"июня\", \"июля\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"];\n        const vacationData = [];\n        const takenRanges = [];\n        let users = [];\n        async function init() {\n            var _a, _b, _c, _d;\n            const appIdsArr = Context.data.vacation_list\n                ? await Context.data.vacation_list.fetch().then(test =\u003e test.map((item) =\u003e item.id))\n                : [];\n            const vacationsArr = await Namespace.app.holidays.search().where(q =\u003e q.__id.in(appIdsArr)).size(appIdsArr.length).all();\n            const userIds = new Set();\n            for (let i = 0; i \u003c vacationsArr.length; i++) {\n                userIds.add(vacationsArr[i].data.staff.id);\n            }\n            const userIdsArr = [...userIds];\n            users = await Namespace.app.staff.search().where(q =\u003e q.__id.in(userIdsArr)).size(userIdsArr.length).all();\n            const promiseArr = [];\n            for (let item of users) {\n                promiseArr.push(item.data.__sourceRef.fetch());\n            }\n            users = await Promise.all(promiseArr);\n            for (let i = 0; i \u003c vacationsArr.length; i++) {\n                const personsVacation = vacationData.find(item =\u003e { var _a; return item.id === ((_a = vacationsArr[i].data.staff) === null || _a === void 0 ? void 0 : _a.id); });\n                const personWasAdded = !!personsVacation;\n                if (!vacationsArr[i].data.days_amount) {\n                    continue;\n                }\n                const isOnCorrection = !!(((_a = vacationsArr[i].data.__status) === null || _a === void 0 ? void 0 : _a.code) === 'correction');\n                if (personWasAdded) {\n                    const newVacation = {\n                        id: vacationsArr[i].data.__id,\n                        daysAmount: (_b = vacationsArr[i].data.days_amount) !== null \u0026\u0026 _b !== void 0 ? _b : 0,\n                        startDate: vacationsArr[i].data.start.asDatetime(new TTime),\n                        endDate: vacationsArr[i].data.end.asDatetime(new TTime),\n                        correction: isOnCorrection,\n                        comment: vacationsArr[i].data.staff_comment ? vacationsArr[i].data.staff_comment : \"\"\n                    };\n                    if (!(personsVacation === null || personsVacation === void 0 ? void 0 : personsVacation.isOnCorrection)) {\n                        personsVacation.isOnCorrection = isOnCorrection;\n                    }\n                    personsVacation.vacations.push(newVacation);\n                    continue;\n                }\n                const newVacation = {\n                    id: vacationsArr[i].data.__id,\n                    daysAmount: (_c = vacationsArr[i].data.days_amount) !== null \u0026\u0026 _c !== void 0 ? _c : 0,\n                    startDate: vacationsArr[i].data.start.asDatetime(new TTime),\n                    endDate: vacationsArr[i].data.end.asDatetime(new TTime),\n                    correction: isOnCorrection,\n                    comment: vacationsArr[i].data.staff_comment ? vacationsArr[i].data.staff_comment : \"\"\n                };\n                const user = users.find(item =\u003e item.id === vacationsArr[i].data.staff.id);\n                const name = user === null || user === void 0 ? void 0 : user.data.__name.split(\" \");\n                const newPerson = {\n                    id: vacationsArr[i].data.staff.id,\n                    name: name ? `${name[0]} ${name[1][0]}.${name[2] ? name[2][0] + \".\" : ''}` : \"Имя не найдено\",\n                    chiefId: (_d = vacationsArr[i].data.chief) === null || _d === void 0 ? void 0 : _d.id,\n                    isOnCorrection: isOnCorrection,\n                    vacations: [newVacation]\n                };\n                vacationData.push(newPerson);\n            }\n            renderPage();\n        }\n        const renderPage = async () =\u003e {\n            renderUsers();\n            await renderCalendar();\n            renderVacations();\n        };\n        const renderUsers = () =\u003e {\n            var _a, _b, _c;\n            const root = document.querySelector(\".calendar-schedule__left-menu-container\");\n            const template = document.querySelector(\".left-menu__template\");\n            for (let i = 0; i \u003c vacationData.length; i++) {\n                const element = template.content.cloneNode(true);\n                const text = element.querySelector(\".left-menu__item-text\");\n                text.innerText = vacationData[i].name;\n                const wrapper = element.querySelector(\".left-menu__item\");\n                wrapper.dataset.id = vacationData[i].id;\n                if (vacationData[i].isOnCorrection) {\n                    wrapper.classList.add(\"left-menu-item--correction\");\n                }\n                const user = users.find(item =\u003e item.id === vacationData[i].id);\n                const card = element.querySelector(\".user-card\");\n                card.dataset.key = user.data.__id;\n                const cardName = card.querySelector(\".user-card__name\");\n                cardName.innerText = user.data.__name;\n                if (user.data.email) {\n                    const cardEmail = card.querySelector(\".user-card__email\");\n                    cardEmail.innerText = (_a = user.data.email) === null || _a === void 0 ? void 0 : _a.email;\n                    cardEmail.href = `mailto: ${(_b = user.data.email) === null || _b === void 0 ? void 0 : _b.email}`;\n                }\n                if (user.data.phone) {\n                    const cardPhone = card.querySelector(\".user-card__phone\");\n                    cardPhone.innerText = (_c = user.data.phone) === null || _c === void 0 ? void 0 : _c.tel;\n                }\n                const userImageText = element.querySelector(\".user-card__image-text\");\n                userImageText.innerText = user.data.full_name.lastname[0] + user.data.full_name.firstname[0];\n                const userTextElement = element.querySelector(\".left-menu__item\");\n                userTextElement.addEventListener(\"click\", async (e) =\u003e {\n                    e.stopPropagation();\n                    const activeCard = document.querySelector(\".user-card--active\");\n                    if (!!activeCard) {\n                        activeCard.classList.remove(\"user-card--active\");\n                    }\n                    if ((activeCard === null || activeCard === void 0 ? void 0 : activeCard.dataset.key) === user.data.__id)\n                        return;\n                    const userCard = document.querySelector(`[data-key='${user.data.__id}']`);\n                    userCard.classList.toggle(\"user-card--active\");\n                });\n                card.addEventListener(\"click\", (e) =\u003e {\n                    e.stopPropagation();\n                });\n                root.append(element);\n            }\n        };\n        const renderCalendar = async () =\u003e {\n            const calendarGeneralSettings = await System.productionSchedule.getGeneralSettings();\n            const weekends = [calendarGeneralSettings.weekends.monday, calendarGeneralSettings.weekends.tuesday, calendarGeneralSettings.weekends.wednesday, calendarGeneralSettings.weekends.thursday,\n                calendarGeneralSettings.weekends.friday, calendarGeneralSettings.weekends.saturday, calendarGeneralSettings.weekends.sunday];\n            const dateRange = getRenderDateRange();\n            const weekTemplate = document.querySelector(\".template-calendar-week\");\n            const root = document.querySelector(\".calendar-schedule__calendar-wrapper\");\n            if (dateRange) {\n                while (dateRange.startDate.before(dateRange.endDate)) {\n                    const element = weekTemplate.content.cloneNode(true);\n                    const weekText = element.querySelector(\".calendar__week-header-text\");\n                    let innerTextWeek = '';\n                    const startWeekText = dateRange.startDate.day;\n                    const endWeekText = dateRange.startDate.addDate(0, 0, 6).day;\n                    if (endWeekText \u003c startWeekText) {\n                        innerTextWeek = `${startWeekText} ${MONTHS[dateRange.startDate.month]} - ${endWeekText} ${MONTHS[dateRange.startDate.addDate(0, 0, 6).month]}`;\n                    }\n                    else {\n                        innerTextWeek = `${dateRange.startDate.day}-${dateRange.startDate.day + 6} ${MONTHS[dateRange.startDate.month]}`;\n                    }\n                    weekText.innerText = innerTextWeek;\n                    const containers = Array.from(element.querySelector(\".calendar__days-wrapper\").children);\n                    for (let i = 0; i \u003c 7; i++) {\n                        const elementContainer = containers[i].querySelector('.calendar__column-day-container');\n                        for (let j = 0; j \u003c vacationData.length; j++) {\n                            const cell = document.createElement(\"div\");\n                            cell.classList.add(\"day-cell\");\n                            cell.dataset.userid = vacationData[j].id;\n                            cell.dataset.day = dateRange.startDate.addDate(0, 0, i).format(\"DD.MM.YYYY\");\n                            elementContainer.append(cell);\n                        }\n                        containers[i].append(elementContainer);\n                        if (weekends[i]) {\n                            containers[i].classList.add('calendar__day--weekend');\n                        }\n                    }\n                    root.append(element);\n                    const cell = document.createElement(\"div\");\n                    cell.classList.add(\"day-cell\");\n                    dateRange.startDate = dateRange.startDate.addDate(0, 0, 7);\n                }\n            }\n        };\n        const renderVacations = () =\u003e {\n            const allRanges = [];\n            for (let i = 0; i \u003c vacationData.length; i++) {\n                for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n                    const vacation = vacationData[i].vacations[j];\n                    allRanges.push({ startDate: vacation.startDate, endDate: vacation.endDate });\n                }\n            }\n            let counterHelper = 0;\n            for (let i = 0; i \u003c vacationData.length; i++) {\n                for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n                    const vacation = vacationData[i].vacations[j];\n                    const correspondingCell = document.querySelector(`[data-day='${vacation.startDate.format(\"DD.MM.YYYY\")}'][data-userid='${vacationData[i].id}']`);\n                    correspondingCell.style.zIndex = i + 1;\n                    const newElement = document.createElement('a');\n                    const vacationRenderParts = getRenderParts(allRanges, { startDate: vacation.startDate, endDate: vacation.endDate }, counterHelper);\n                    for (let k = 0; k \u003c vacationRenderParts.length; k++) {\n                        const barPartElement = document.createElement(\"div\");\n                        barPartElement.classList.add('vacation-bar__part');\n                        if (k === 0) {\n                            barPartElement.classList.add('vacation-bar__part--start');\n                        }\n                        if (k === vacationRenderParts.length - 1) {\n                            barPartElement.classList.add('vacation-bar__part--end');\n                        }\n                        if (vacationRenderParts[k].dashed) {\n                            barPartElement.classList.add('vacation-bar__part--dashed');\n                        }\n                        barPartElement.style.width = `${vacationRenderParts[k].daysAmount * 19}px`;\n                        newElement.append(barPartElement);\n                    }\n                    newElement.classList.add('vacation-bar');\n                    newElement.style.width = `${vacation.daysAmount * 19}px`;\n                    if (vacationData[i].vacations[j].correction) {\n                        newElement.classList.add('vacation-bar--correction');\n                    }\n                    const tooltip = document.createElement('div');\n                    tooltip.classList.add('vacation-bar__tooltip');\n                    tooltip.innerHTML = vacationData[i].vacations[j].comment ? `\u003cp\u003e${vacationData[i].vacations[j].comment}\u003c/p\u003e` : \"\u003cp\u003eВернуть на изменение\u003c/p\u003e\";\n                    newElement.append(tooltip);\n                    newElement.href = `./(p:item/absences/vacations/${vacation.id})`;\n                    newElement.addEventListener('click', (e) =\u003e {\n                        console.log('click');\n                        if (!vacationData[i].vacations[j].correction) {\n                            let counter = 0;\n                            const checkInterval = window.setInterval(() =\u003e {\n                                counter++;\n                                const checkElement = document.querySelector(\".complex-popup-outer:not([hidden]) .fluid-nav-item .btn.btn-default\");\n                                if (!!checkElement \u0026\u0026 checkElement.innerText === \"На корректировку\") {\n                                    window.clearInterval(checkInterval);\n                                    window.setTimeout(() =\u003e {\n                                        checkElement.click();\n                                    }, 1000);\n                                    trackPopover(newElement, checkElement, vacationData[i].id);\n                                }\n                            }, 1000);\n                        }\n                    });\n                    takenRanges.push({ startDate: vacation.startDate, endDate: vacation.endDate });\n                    correspondingCell.append(newElement);\n                    counterHelper++;\n                }\n            }\n        };\n        const trackPopover = (barElement, buttonElement, vacationId) =\u003e {\n            const checkPopoverInterval = window.setInterval(() =\u003e {\n                const currentPopover = document.querySelector('.popover-outer.visible');\n                if (!buttonElement.closest('.complex-popup-outer:not([hidden])')) {\n                    window.clearInterval(checkPopoverInterval);\n                }\n                if (!!currentPopover) {\n                    const sendBtn = currentPopover.querySelector(\".btn.btn-primary\");\n                    if (sendBtn.dataset.listener !== 'true') {\n                        sendBtn.addEventListener(\"click\", () =\u003e {\n                            const commentInput = currentPopover.querySelector(\"#chief_comment\");\n                            if (!!commentInput.value) {\n                                const leftMenuItem = document.querySelector(`[data-id='${vacationId}']`);\n                                leftMenuItem.classList.add('left-menu-item--correction');\n                                barElement.classList.add('vacation-bar--correction');\n                                const popup = buttonElement.closest('.complex-popup__main');\n                                const closeBtn = popup.querySelector(\".btn.close\");\n                                window.clearInterval(checkPopoverInterval);\n                                closeBtn === null || closeBtn === void 0 ? void 0 : closeBtn.click();\n                            }\n                        });\n                        sendBtn.dataset.listener = \"true\";\n                    }\n                }\n            }, 1500);\n        };\n        function getRenderDateRange() {\n            let startDate;\n            let endDate;\n            for (let i = 0; i \u003c vacationData.length; i++) {\n                for (let j = 0; j \u003c vacationData[i].vacations.length; j++) {\n                    const currentItem = vacationData[i].vacations[j];\n                    if (!startDate \u0026\u0026 !endDate) {\n                        startDate = currentItem.startDate;\n                        endDate = currentItem.endDate;\n                        continue;\n                    }\n                    if (startDate.after(currentItem.startDate)) {\n                        startDate = currentItem.startDate;\n                    }\n                    if (endDate.before(currentItem.endDate)) {\n                        endDate = currentItem.endDate;\n                    }\n                }\n            }\n            if (!!startDate \u0026\u0026 !!endDate) {\n                startDate = startDate.addDate(0, 0, -14);\n                endDate = endDate.addDate(0, 0, 14);\n                const startDateDay = startDate.ts.day();\n                if (startDateDay !== 1) {\n                    startDate = startDate.addDate(0, 0, 8 - startDateDay);\n                }\n                const endDateDay = endDate.ts.day();\n                if (endDateDay !== 1) {\n                    endDate = endDate.addDate(0, 0, -endDateDay);\n                }\n                return {\n                    startDate,\n                    endDate\n                };\n            }\n            return null;\n        }\n        const getRenderParts = (ranges, itemRange, skipIndex) =\u003e {\n            const parts = [];\n            const isStartDateCrossed = !!ranges.find((item, index) =\u003e {\n                if (index !== skipIndex) {\n                    if ((itemRange.startDate.year === item.startDate.year \u0026\u0026 itemRange.startDate.month === item.startDate.month \u0026\u0026 itemRange.startDate.day === item.startDate.day)\n                        || (itemRange.startDate.year === item.endDate.year \u0026\u0026 itemRange.startDate.month === item.endDate.month \u0026\u0026 itemRange.startDate.day === item.endDate.day)\n                        || (itemRange.startDate.after(item.startDate) \u0026\u0026 itemRange.startDate.before(item.endDate))) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            parts.push({\n                daysAmount: 1,\n                dashed: isStartDateCrossed\n            });\n            let currentIndex = 0;\n            itemRange.startDate = itemRange.startDate.addDate(0, 0, 1);\n            while (!itemRange.startDate.after(itemRange.endDate)) {\n                const isCurrentDayCrossed = !!ranges.find((item, index) =\u003e {\n                    if (index !== skipIndex) {\n                        if ((itemRange.startDate.year === item.startDate.year \u0026\u0026 itemRange.startDate.month === item.startDate.month \u0026\u0026 itemRange.startDate.day === item.startDate.day)\n                            || (itemRange.startDate.year === item.endDate.year \u0026\u0026 itemRange.startDate.month === item.endDate.month \u0026\u0026 itemRange.startDate.day === item.endDate.day)\n                            || (itemRange.startDate.after(item.startDate) \u0026\u0026 itemRange.startDate.before(item.endDate))) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                const currentItem = parts[currentIndex];\n                if (currentItem.dashed !== isCurrentDayCrossed) {\n                    currentIndex++;\n                    parts.push({\n                        daysAmount: 1,\n                        dashed: isCurrentDayCrossed\n                    });\n                }\n                else {\n                    parts[currentIndex].daysAmount++;\n                }\n                itemRange.startDate = itemRange.startDate.addDate(0, 0, 1);\n            }\n            return parts;\n        };\n        return {\n            init,\n            getRenderDateRange\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"init","parameters":[],"type":""},{"name":"getRenderDateRange","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:08:59.867989843Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:07:44.500823748Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
