{"__id":"018fe2b5-9505-7325-a62e-b1f931b622d9","namespace":"kedo","code":"forget_me_not_widget","__name":"Виджет-напоминалка","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":1,"hidden":false,"draft":false,"readonly":false,"descriptor":{"template":{"id":"c470a6b6-bca9-4b39-95d3-9f91bc42bdfb","descriptor":"component","values":{"systemFunctions":{}},"content":{"":[{"id":"0551c85a-ae5e-4635-93e6-764486ac1eba","descriptor":"label","values":{"__hidden":true,"__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentOnDemand":false,"text":"Виджет-напоминалка"}},{"id":"76aeec2e-d7f8-4fb3-bc74-763f7833fa35","descriptor":"code","values":{"html":"\u003cstyle\u003e  \n    .fluid-nav-scope,\n    elma-buttons,\n    .fluid-nav,\n    .fluid-nav-wrapper\n    {\n        overflow: visible !important;\n    }\n    .save-button-container {\n        width: 100%;\n        height: 100%;\n        background-color: transparent;\n        display: none;\n        position: absolute;\n        top: 0;\n        cursor: pointer;\n    }\n    \n    .save-button-container \u003e .save-button {\n        display: flex;\n    }\n\n    .save-button-container.visible {\n        width: 100%;\n        height: 100%;\n        z-index: 100;\n        background-color: transparent;\n        display: block;\n    }\n\n    .notification-container {\n        width: 28rem;\n        z-index: -1;\n        /* display: none; */\n        opacity: 0;\n        transition: all 1s;\n        position: absolute;\n        top: -14rem;\n        transform: translateX(2rem);\n        border: 1px solid #D9D9D9;\n        padding: 0.5rem;\n        border-radius: 5px;\n        box-shadow: 0px 0px 4px 0px rgba(34, 60, 80, 0.2);\n        background-color: white;\n    }\n\n    .notification-container.visible {\n        display: block;\n        z-index: 2;\n        opacity: 1;\n        transform: translateX(0);\n    }\n\n    /* .save-button:disabled,\n    .save-button[disabled] {\n        background-color: var(--el-component-button-color-primary);\n        color: white;\n    } */\n\u003c/style\u003e\n\n\u003ctemplate class=\"notification-template\"\u003e\n    \u003cdiv class=\"notification-container\"\u003e\n        \u003cdiv class=\"notification-text\"\u003e\n            После создания \u003cspan class=\"element-name\"\u003eзаявления\u003c/span\u003e не покидайте портал - через некоторое время вам придёт задача с подписанием.\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/template\u003e","hideContent":true,"contentPlaceholder":"html/css"}}]}},"fields":[{"code":"element_name","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Название элемента","tooltip":"Название элемента, с которым связано уведомление (с маленькой буквы, в родительном падеже)","data":{"additionalType":"string"},"input":true,"output":false}},{"code":"alert_text","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Текст оповещения","tooltip":"(Не обязательно) задайте свой текст оповещения.","data":{"additionalType":"string"},"input":true,"output":false}}],"fieldVisibilityConditions":{"alert_text":{"enabled":false,"conditions":[]},"element_name":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"declare const console: any;\ndeclare const window: any;\ndeclare const document: any;\n\nconst url = window.location.href;\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    if (!url.includes(\"portal\")) {\n        return;\n    };\n    let saveButton: any;\n    let waitForButton = window.setInterval(() =\u003e {\n        saveButton = document.querySelector('footer.modal-footer button.btn.btn-primary')\n        if (!saveButton) {\n            return;\n        };\n        window.clearInterval(waitForButton)\n\n        saveButton.classList.add('save-button');\n\n        // let buttonContainer = document.createElement(\"div\");\n        saveButton.addEventListener(\"mouseenter\", handleTouch);\n        saveButton.addEventListener(\"touchstart\", handleTouch);\n        // buttonContainer.className = \"save-button-container\";\n        // buttonContainer.classList.add(\"visible\");\n        // saveButton.parentNode.append(buttonContainer);\n        // saveButton.parentNode.style.position = 'relative';\n        // buttonContainer.before(saveButton);\n\n    }, 100)\n};\n\nfunction handleTouch(event: any) {\n    if (document.querySelector(\".notification-container\")) {\n        document.querySelector(\".notification-container\").classList.add(\"visible\");\n        window.setTimeout(() =\u003e {\n            try {\n                document.querySelector(\".notification-container\").classList.remove(\"visible\");\n            } catch {\n                console.log(\"window already hidden\")\n            }\n        }, 3000);\n        return;\n    };\n\n    let notification = document.querySelector(\".notification-template\").content.cloneNode(true);\n    let notificationContainer = notification.querySelector(\".notification-container\");\n    if (Context.data.element_name) {\n        let elementName = notificationContainer.querySelector(\".element-name\");\n        elementName.textContent = Context.data.element_name;\n    };\n    if (Context.data.alert_text) {\n        let notificationText = notificationContainer.querySelector(\".notification-text\");\n        notificationText.textContent = Context.data.alert_text;\n    };\n    event.target.parentNode.append(notification);\n    notificationContainer.classList.add(\"visible\");\n    // buttonContainer.parentNode.append(saveButton);\n    // buttonContainer.remove();\n    event.target.disabled = true;\n    window.setTimeout(() =\u003e {\n        event.target.disabled = false;\n    }, 500)\n    window.setTimeout(() =\u003e {\n        try {\n            notificationContainer.classList.remove(\"visible\");\n        } catch {\n            console.log(\"element already removed\")\n        }\n    }, 3000);\n};","clientScriptOptions":{"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{}},"dataNamespace":"","dataCode":"","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        const url = window.location.href;\n        async function onInit() {\n            if (!url.includes(\"portal\")) {\n                return;\n            }\n            ;\n            let saveButton;\n            let waitForButton = window.setInterval(() =\u003e {\n                saveButton = document.querySelector('footer.modal-footer button.btn.btn-primary');\n                if (!saveButton) {\n                    return;\n                }\n                ;\n                window.clearInterval(waitForButton);\n                saveButton.classList.add('save-button');\n                saveButton.addEventListener(\"mouseenter\", handleTouch);\n                saveButton.addEventListener(\"touchstart\", handleTouch);\n            }, 100);\n        }\n        ;\n        function handleTouch(event) {\n            if (document.querySelector(\".notification-container\")) {\n                document.querySelector(\".notification-container\").classList.add(\"visible\");\n                window.setTimeout(() =\u003e {\n                    try {\n                        document.querySelector(\".notification-container\").classList.remove(\"visible\");\n                    }\n                    catch (_a) {\n                        console.log(\"window already hidden\");\n                    }\n                }, 3000);\n                return;\n            }\n            ;\n            let notification = document.querySelector(\".notification-template\").content.cloneNode(true);\n            let notificationContainer = notification.querySelector(\".notification-container\");\n            if (Context.data.element_name) {\n                let elementName = notificationContainer.querySelector(\".element-name\");\n                elementName.textContent = Context.data.element_name;\n            }\n            ;\n            if (Context.data.alert_text) {\n                let notificationText = notificationContainer.querySelector(\".notification-text\");\n                notificationText.textContent = Context.data.alert_text;\n            }\n            ;\n            event.target.parentNode.append(notification);\n            notificationContainer.classList.add(\"visible\");\n            event.target.disabled = true;\n            window.setTimeout(() =\u003e {\n                event.target.disabled = false;\n            }, 500);\n            window.setTimeout(() =\u003e {\n                try {\n                    notificationContainer.classList.remove(\"visible\");\n                }\n                catch (_a) {\n                    console.log(\"element already removed\");\n                }\n            }, 3000);\n        }\n        ;\n        return {\n            onInit,\n            handleTouch\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"handleTouch","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""}]},"__createdAt":"2024-06-04T10:05:02.085278236Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-06-04T10:06:38.066591883Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
