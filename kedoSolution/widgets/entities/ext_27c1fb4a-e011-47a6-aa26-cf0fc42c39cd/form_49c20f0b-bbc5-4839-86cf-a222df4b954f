{"__id":"018c8758-60a4-7fdb-b341-027d49f82417","namespace":"ext_27c1fb4a-e011-47a6-aa26-cf0fc42c39cd","code":"form_49c20f0b-bbc5-4839-86cf-a222df4b954f","__name":"Ознакомиться с заявкой и подписать через смс","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":3,"hidden":true,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"ab73f1e5-7c33-44c5-a97b-e6f11365b5d7","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"__outlet":"","formType":"task-form","__baseURL":"","formGroup":{"path":["context"]},"__relativeURL":"","__isConstValues":[],"sidebarAvailable":false,"__renderContentAsync":false},"content":{"[content]":[{"id":"b10904ca-ee97-42e8-b479-a7b26493c391","descriptor":"code","values":{"html":"\u003cstyle\u003e\n    .btn-primary {\n        background-color: var(--el-component-button-color-disabled-base) !important;\n        pointer-events: none;\n    }\n\u003c/style\u003e","hideContent":true,"contentPlaceholder":"button css"}},{"id":"c18e9118-cda2-49f4-ae50-5414c9b970b2","descriptor":"modal-body","values":{"shadow":true},"content":{"":[{"id":"09ecee00-ec92-4ac4-9f08-b9b2cac2e6d1","descriptor":"groupbox","values":{"title":"Данные пользователя","expanded":true,"styleEnum":[{"code":"default","name":"Default"}],"__readOnly":true,"collapsible":false,"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"fdbc56dd-5136-416d-85ab-fddcd92a0cd0","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["full_name"]},"tooltip":null,"required":false}},{"id":"1e7cc98b-f382-45f9-9f56-2e2082ea436f","descriptor":"dynamic-form-row","values":{"control":{"path":["context","birth_date"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true}},{"id":"09d56e86-e5df-4ba2-9cfa-45621849baef","descriptor":"dynamic-form-row","values":{"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","email"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false}},{"id":"394acc9e-47e6-49ac-abdd-5708555c513d","descriptor":"dynamic-form-row","values":{"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","phone"]},"tooltip":null,"required":false,"hideEmpty":false}},{"id":"1dd76f47-a6fc-4bc6-ac23-9ddd67337b5b","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["address"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[]}},{"id":"53342dee-d54b-4ef8-bac6-354ddaccf819","descriptor":"dynamic-form-row","values":{"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["passport_info"]}}},{"id":"10e67bd8-92c8-4e62-8c8f-b63925a01f8f","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","issued_by"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"}}},{"id":"c2700244-bac5-4e7e-b67a-30a5e13c12dd","descriptor":"dynamic-form-row","values":{"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","passport_code"]},"tooltip":null,"required":false}},{"id":"e751ec14-d31c-4b64-afd3-f8dfa1eb32c4","descriptor":"dynamic-form-row","values":{"control":{"path":["context","passport_date"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true}},{"id":"223c6fcd-dbd4-47f7-be40-8b2d307b4dd4","descriptor":"dynamic-form-row","values":{"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","inn"]},"tooltip":null}},{"id":"9bcf6a8c-0083-4167-8f6f-27643c91b814","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["context","snils"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":{"label":"Наследовать от родителя"},"bindingMode":false,"__isConstValues":[]}}]}},{"id":"e0bb799f-cd32-406b-89ce-d218b93c8a27","descriptor":"dynamic-form-row","values":{"bindingMode":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["context","release_statement"]},"tooltip":null,"required":false,"hideEmpty":true,"__readOnly":true}},{"id":"d2ca437b-07cb-4391-b865-db4e5dc4821a","descriptor":"groupbox","values":{"styleEnum":[{"code":"default","name":"Default"}],"collapsible":false,"__isConstValues":[],"__renderContentAsync":false,"title":"Подтверждение","expanded":true},"content":{"":[{"id":"931e5740-851f-42d5-8cf3-21e21996e49f","descriptor":"button","values":{"__baseURL":"","__relativeURL":"","runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}],"processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"action":null,"onClick":{"kind":"Function","name":"sendCodeWrapper","type":"client"},"view":"default","__isConstValues":[],"__outlet":"","runInPopover":null,"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"label":"Получить код","__classes":"send-code"}},{"id":"b3462b81-8a50-4453-91f4-989ee662435c","descriptor":"dynamic-form-row","values":{"__baseURL":"","hideEmpty":false,"__readOnly":null,"bindingMode":false,"__relativeURL":"","tooltip":"Код действует 30 минут, новый можно запросить повторно через 1 минуту","required":false,"__isConstValues":[],"showDisplayName":true,"control":{"path":["sms_code"]},"__outlet":""}},{"id":"06eb51bb-1600-4648-9a22-bce8c8809f71","descriptor":"button","values":{"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"view":"default","label":"Подтвердить","runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}],"__isConstValues":[],"runInPopover":null,"processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"action":null,"onClick":{"kind":"Function","name":"confirmCodeWrapper","type":"client"},"__hidden":{"path":["code_sent"],"modifier":"not"},"__classes":"confirm-code"}},{"id":"f8bc98d5-3a0f-44cd-8e28-078e92b0b7c3","descriptor":"elma-info-block","values":{"text":"Заявка успешно подтверждена","__hidden":{"path":["request_confirmed"],"modifier":"not"},"typeEnum":[{"code":"success","name":"Положительный результат (зеленый)"}],"__isConstValues":[],"__renderContentAsync":false},"content":{"":[]}},{"id":"4e6cdbef-60ae-4ae4-9941-0366984d312c","descriptor":"elma-info-block","values":{"text":{"path":["error"]},"__hidden":{"path":["error_exists"],"modifier":"not"},"typeEnum":[{"code":"danger","name":"Ошибка (красный)"}],"__isConstValues":[],"__renderContentAsync":false},"content":{"":[]}}]}}]}},{"id":"ebea3188-c968-46f1-8735-f04a8563b43e","descriptor":"code","values":{"html":"\n\u003ctemplate class=\"my-spinner\"\u003e\n  \u003csvg\n  width=\"25\"\n  height=\"25\"\n  viewBox=\"0 0 200 200\"\n  color=\"black\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  class=\"spinner-svg\"\n\u003e\n  \u003cg stroke=\"currentColor\" stroke-width=\"8\"\u003e\n    \u003cpath opacity=\"1\" d=\"M 191 70 A 96 96 0 0 1 196 100\" /\u003e\n    \u003cpath opacity=\"0.95\" d=\"M 178 44 A 96 96 0 0 1 191 70\" /\u003e\n    \u003cpath opacity=\"0.90\" d=\"M 156 22 A 96 96 0 0 1 178 44\" /\u003e\n    \u003cpath opacity=\"0.85\" d=\"M 130 9 A 96 96 0 0 1 156 22\" /\u003e\n    \u003cpath opacity=\"0.80\" d=\"M 100 4 A 96 96 0 0 1 130 9\" /\u003e\n    \u003cpath opacity=\"0.75\" d=\"M 70 9 A 96 96 0 0 1 100 4\" /\u003e\n    \u003cpath opacity=\"0.70\" d=\"M 44 22 A 96 96 0 0 1 70 9\" /\u003e\n    \u003cpath opacity=\"0.65\" d=\"M 22 44 A 96 96 0 0 1 44 22\" /\u003e\n    \u003cpath opacity=\"0.60\" d=\"M 9 70 A 96 96 0 0 1 22 44\" /\u003e\n    \u003cpath opacity=\"0.55\" d=\"M 4 100 A 96 96 0 0 1 9 70\" /\u003e\n    \u003cpath opacity=\"0.50\" d=\"M 9 130 A 96 96 0 0 1 4 100\" /\u003e\n    \u003cpath opacity=\"0.45\" d=\"M 22 156 A 96 96 0 0 1 9 130\" /\u003e\n    \u003cpath opacity=\"0.40\" d=\"M 44 178 A 96 96 0 0 1 22 156\" /\u003e\n    \u003cpath opacity=\"0.35\" d=\"M 70 191 A 96 96 0 0 1 44 178\" /\u003e\n    \u003cpath opacity=\"0.30\" d=\"M 100 196 A 96 96 0 0 1 70 191\" /\u003e\n    \u003cpath opacity=\"0.25\" d=\"M 130 191 A 96 96 0 0 1 100 196\" /\u003e\n    \u003cpath opacity=\"0.20\" d=\"M 156 178 A 96 96 0 0 1 130 191\" /\u003e\n    \u003cpath opacity=\"0.15\" d=\"M 178 156 A 96 96 0 0 1 156 178\" /\u003e\n    \u003cpath opacity=\"0.10\" d=\"M 191 130 A 96 96 0 0 1 178 156\" /\u003e\n    \u003cpath opacity=\"0.05\" d=\"M 196 100 A 96 96 0 0 1 191 130\" /\u003e\n  \u003c/g\u003e\n\u003c/svg\u003e\n\u003c/template\u003e\n\n\u003cstyle\u003e\n  .spinner-svg {\n    animation: spin 1s linear infinite;\n  }\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\u003c/style\u003e","hideContent":false,"contentPlaceholder":""}}],"[sidebar]":[],"[formInfoPanel]":[{"id":"e3086135-f510-4fe9-8432-32f8f0b750d8","descriptor":"validation-info-block","values":{"__validateResult":{"path":["context","__validateResult"]}}}],"[headerControls]":[{"id":"475aa008-aaff-402f-8de2-408bae1f1928","descriptor":"task-percent-widget","values":{"task":{"path":["task"]}}},{"id":"702d9c59-77ae-4dd5-b71a-a5fe7b58858f","descriptor":"extension-zone-toolbar-widget","values":{"item":{"path":["__itemRef"]}}},{"id":"ff2500ee-6573-49cd-a9e8-2d5c93350f26","descriptor":"button","values":{"icon":"menu_vertical","view":"icon","label":"bpm.tasks.item@menu","action":{"path":["menuAction"]},"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}}],"[headerCustomization]":[],"[footer]":[{"id":"31979bac-00bd-4123-a901-9d14190c8dde","descriptor":"buttons-panel","values":{"buttons":{"path":["actionButtons"]}}}]}},"fields":[{"code":"request_confirmed","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Заявка успешно подписана","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"error","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Ошибка при подтверждении заявки","data":{"additionalType":"string"}}},{"code":"error_exists","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Есть ошибка?","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"sms_code","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Код из смс","data":{"additionalType":"string"}}},{"code":"wrong_code","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Неверный код","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"code_sent","type":"BOOLEAN","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":false,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Код отправлен","data":{"additionalType":"radio","noValue":"Нет","yesValue":"Да"}}},{"code":"debug","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"debug","data":{"additionalType":"string"}}},{"code":"full_name","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"ФИО","data":{"additionalType":"string"}}},{"code":"address","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Адрес","data":{"additionalType":"string"}}},{"code":"passport_info","type":"STRING","searchable":false,"indexed":false,"deleted":false,"array":false,"required":false,"single":true,"defaultValue":null,"calcByFormula":false,"formula":"","data":{},"view":{"name":"Серия и номер паспорта","data":{"additionalType":"string"}}}],"fieldVisibilityConditions":{"debug":{"enabled":false,"conditions":[]},"error":{"enabled":false,"conditions":[]},"address":{"enabled":false,"conditions":[]},"sms_code":{"enabled":false,"conditions":[]},"code_sent":{"enabled":false,"conditions":[]},"full_name":{"enabled":false,"conditions":[]},"wrong_code":{"enabled":false,"conditions":[]},"error_exists":{"enabled":false,"conditions":[]},"passport_info":{"enabled":false,"conditions":[]},"request_confirmed":{"enabled":false,"conditions":[]}},"scriptOptions":{},"clientScripts":"declare const document: any;\ndeclare const window: any;\ndeclare const console: any;\n\nlet saveButton: any;\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    const fullName = `${Context.data.surname} ${Context.data.name} ${Context.data.lastname || \"\"}`;\n    const region = Context.data.region || \"\";\n    let fullAddress = Context.data.country;\n    if (region) {\n        fullAddress += `, ${region}`;\n    };\n    const user = await Context.data.user!.fetch();\n    \n    const staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(\n        f.__deletedAt.eq(null),\n        f.ext_user.eq(user)\n    )).first();\n    fullAddress += `, ${Context.data.city!}`;\n    if (staff) {\n        fullAddress += `, ${staff.data.street}, ${staff.data.home}`;\n        if (staff.data.housing) {\n            fullAddress += `, к ${staff.data.housing}`;\n        };\n        if (staff.data.apartment) {\n            fullAddress += `, кв ${staff.data.apartment}`;\n        };\n    };\n    ViewContext.data.passport_info = `${Context.data.passport_series} ${Context.data.passport_number}`;\n    ViewContext.data.address = fullAddress;\n    ViewContext.data.full_name = fullName;\n};\n\nfunction handleSpinner(buttonClass: string) {\n    let spinnerTemplate = document.querySelector(\".my-spinner\").content.cloneNode(true);\n    let button = document.querySelector(buttonClass);\n    let innerSvg = button.querySelector(\"svg\")\n    if (!!innerSvg) {\n        innerSvg.remove();\n    } else {\n        button.append(spinnerTemplate);\n    };\n};\n\nasync function sendCodeWrapper(): Promise\u003cvoid\u003e {\n    handleSpinner(\".send-code\");\n    await Server.rpc.getSecretCode();\n    handleSpinner(\".send-code\");\n};\n\nasync function confirmCodeWrapper(): Promise\u003cvoid\u003e {\n    handleSpinner(\".confirm-code\");\n    await Server.rpc.confirmSecret();\n    console.log(Context.data.debug)\n    handleSpinner(\".confirm-code\");\n    if (ViewContext.data.request_confirmed) {\n        console.log(\"requestConfirmed: \", ViewContext.data.request_confirmed)\n        const buttons = document.querySelectorAll(\"footer elma-buttons button\");\n        if (buttons \u0026\u0026 buttons.length \u003e 0) {\n            saveButton = document.querySelector(\"footer elma-buttons .btn-primary\");\n            saveButton.style.backgroundColor = \"#1e6599\";\n            saveButton.style.pointerEvents = \"default\";\n            const confirmButton = buttons[0];\n            confirmButton.click();\n        };\n    };\n    console.log(ViewContext.data.error)\n};","clientScriptOptions":{"allowServer":true},"serverScripts":"const apiKey = Context.data.api_key!;\nconst headers: Record\u003cstring, string\u003e = {\n    \"X-KONTUR-APIKEY\": apiKey,\n    \"Content-Type\": \"application/json\"\n};\nconst baseUrl = `${Namespace.params.data.kontur_server_address}/v1/issues`;\nconst requestId = Context.data.request_id;\n\n\n\nasync function getSecretCode(): Promise\u003cvoid\u003e {\n    let response = await fetch(`${baseUrl}/${requestId}/confirmation-requests`, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({\n            \"operationToConfirm\": \"signingReleaseStatement\"\n        })\n    });\n    \n    if (!response.ok) {\n        let responseJson = await response.json();\n        ViewContext.data.error_exists = true;\n        let errorMessage = responseJson.error.message;\n        ViewContext.data.error = `${response.status}: ${errorMessage}`;\n        return;\n    };\n    ViewContext.data.code_sent = true;\n};\n\nasync function confirmSecret(): Promise\u003cvoid\u003e {\n    ViewContext.data.wrong_code = false;\n    let response = await fetch(`${baseUrl}/${requestId}/documents/releaseStatement/sign`, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({\n            confirmationInfo: {\n                smsCode: ViewContext.data.sms_code!\n            }\n        })\n    });\n    if (!response.ok) {\n        let responseJson = await response.json();\n        let errorCode = responseJson.error.code;\n        Context.data.debug = JSON.stringify(responseJson)\n        ViewContext.data.error_exists = true;\n        switch (errorCode) {\n            case \"WrongConfirmationCode\":\n                ViewContext.data.error = \"Неверный код, попробуйте еще раз.\";\n                break;\n            case \"ConfirmationCodeExpired\":\n                ViewContext.data.error = \"Срок действия кода истёк, запросите новый.\";\n                break;\n            case \"BadRequest\":\n                if (responseJson.error.details \u0026\u0026 responseJson.error.details.length \u003e 0) {\n                    const details = responseJson.error.details[0];\n                    if (details.message.toLowerCase().includes(\"length\")) {\n                        ViewContext.data.error = \"Код должен быть 6-ти значным.\";\n                    } else if (details.message.toLowerCase().includes(\"required\")) {\n                        ViewContext.data.error = \"Вы не ввели код подтверждения.\"\n                    };\n                };\n                break;\n            default:\n                ViewContext.data.error = responseJson.error.message;\n                break;\n        };\n        return;\n    } else {\n        ViewContext.data.request_confirmed = true;\n    };\n};","serverScriptOptions":{},"dataFieldCode":"context"},"dataNamespace":"ext_27c1fb4a-e011-47a6-aa26-cf0fc42c39cd","dataCode":"_process_kontur_certificate_request","runtime":{"version":1,"clientScripts":"System.register([], function (exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server) {\n        let saveButton;\n        async function onInit() {\n            const fullName = `${Context.data.surname} ${Context.data.name} ${Context.data.lastname || \"\"}`;\n            const region = Context.data.region || \"\";\n            let fullAddress = Context.data.country;\n            if (region) {\n                fullAddress += `, ${region}`;\n            }\n            ;\n            const user = await Context.data.user.fetch();\n            const staff = await Context.fields.staff.app.search().where((f, g) =\u003e g.and(f.__deletedAt.eq(null), f.ext_user.eq(user))).first();\n            fullAddress += `, ${Context.data.city}`;\n            if (staff) {\n                fullAddress += `, ${staff.data.street}, ${staff.data.home}`;\n                if (staff.data.housing) {\n                    fullAddress += `, к ${staff.data.housing}`;\n                }\n                ;\n                if (staff.data.apartment) {\n                    fullAddress += `, кв ${staff.data.apartment}`;\n                }\n                ;\n            }\n            ;\n            ViewContext.data.passport_info = `${Context.data.passport_series} ${Context.data.passport_number}`;\n            ViewContext.data.address = fullAddress;\n            ViewContext.data.full_name = fullName;\n        }\n        ;\n        function handleSpinner(buttonClass) {\n            let spinnerTemplate = document.querySelector(\".my-spinner\").content.cloneNode(true);\n            let button = document.querySelector(buttonClass);\n            let innerSvg = button.querySelector(\"svg\");\n            if (!!innerSvg) {\n                innerSvg.remove();\n            }\n            else {\n                button.append(spinnerTemplate);\n            }\n            ;\n        }\n        ;\n        async function sendCodeWrapper() {\n            handleSpinner(\".send-code\");\n            await Server.rpc.getSecretCode();\n            handleSpinner(\".send-code\");\n        }\n        ;\n        async function confirmCodeWrapper() {\n            handleSpinner(\".confirm-code\");\n            await Server.rpc.confirmSecret();\n            console.log(Context.data.debug);\n            handleSpinner(\".confirm-code\");\n            if (ViewContext.data.request_confirmed) {\n                console.log(\"requestConfirmed: \", ViewContext.data.request_confirmed);\n                const buttons = document.querySelectorAll(\"footer elma-buttons button\");\n                if (buttons \u0026\u0026 buttons.length \u003e 0) {\n                    saveButton = document.querySelector(\"footer elma-buttons .btn-primary\");\n                    saveButton.style.backgroundColor = \"#1e6599\";\n                    saveButton.style.pointerEvents = \"default\";\n                    const confirmButton = buttons[0];\n                    confirmButton.click();\n                }\n                ;\n            }\n            ;\n            console.log(ViewContext.data.error);\n        }\n        ;\n        return {\n            onInit,\n            handleSpinner,\n            sendCodeWrapper,\n            confirmCodeWrapper\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"handleSpinner","parameters":[{"name":"[object Object]","type":"[object Object]"}],"type":""},{"name":"sendCodeWrapper","parameters":[],"type":"[object Object]"},{"name":"confirmCodeWrapper","parameters":[],"type":"[object Object]"}],"serverScripts":"const apiKey = Context.data.api_key;\nconst headers = {\n    \"X-KONTUR-APIKEY\": apiKey,\n    \"Content-Type\": \"application/json\"\n};\nconst baseUrl = `${Namespace.params.data.kontur_server_address}/v1/issues`;\nconst requestId = Context.data.request_id;\nasync function getSecretCode() {\n    let response = await fetch(`${baseUrl}/${requestId}/confirmation-requests`, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({\n            \"operationToConfirm\": \"signingReleaseStatement\"\n        })\n    });\n    if (!response.ok) {\n        let responseJson = await response.json();\n        ViewContext.data.error_exists = true;\n        let errorMessage = responseJson.error.message;\n        ViewContext.data.error = `${response.status}: ${errorMessage}`;\n        return;\n    }\n    ;\n    ViewContext.data.code_sent = true;\n}\n;\nasync function confirmSecret() {\n    ViewContext.data.wrong_code = false;\n    let response = await fetch(`${baseUrl}/${requestId}/documents/releaseStatement/sign`, {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({\n            confirmationInfo: {\n                smsCode: ViewContext.data.sms_code\n            }\n        })\n    });\n    if (!response.ok) {\n        let responseJson = await response.json();\n        let errorCode = responseJson.error.code;\n        Context.data.debug = JSON.stringify(responseJson);\n        ViewContext.data.error_exists = true;\n        switch (errorCode) {\n            case \"WrongConfirmationCode\":\n                ViewContext.data.error = \"Неверный код, попробуйте еще раз.\";\n                break;\n            case \"ConfirmationCodeExpired\":\n                ViewContext.data.error = \"Срок действия кода истёк, запросите новый.\";\n                break;\n            case \"BadRequest\":\n                if (responseJson.error.details \u0026\u0026 responseJson.error.details.length \u003e 0) {\n                    const details = responseJson.error.details[0];\n                    if (details.message.toLowerCase().includes(\"length\")) {\n                        ViewContext.data.error = \"Код должен быть 6-ти значным.\";\n                    }\n                    else if (details.message.toLowerCase().includes(\"required\")) {\n                        ViewContext.data.error = \"Вы не ввели код подтверждения.\";\n                    }\n                    ;\n                }\n                ;\n                break;\n            default:\n                ViewContext.data.error = responseJson.error.message;\n                break;\n        }\n        ;\n        return;\n    }\n    else {\n        ViewContext.data.request_confirmed = true;\n    }\n    ;\n}\n;\n","serverFnDeclarations":[{"name":"getSecretCode","parameters":[],"type":"[object Object]"},{"name":"confirmSecret","parameters":[],"type":"[object Object]"}]},"__createdAt":"2023-12-20T13:09:25.279320027Z","__createdBy":"7303b866-4220-4086-a09e-348a76b12c73","__updatedAt":"2024-02-14T11:09:43.466398411Z","__updatedBy":"7303b866-4220-4086-a09e-348a76b12c73","__deletedAt":null}
