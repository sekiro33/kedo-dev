{"__id":"018fb8c3-99e6-7713-a292-e1ae56b36150","namespace":"kedo.docs_lna","code":"forma_prosmotra","__name":"Форма просмотра","description":"","extensionZoneCode":"","sort":0,"category":"00000000-0000-0000-0000-000000000000","version":5,"hidden":false,"draft":false,"readonly":false,"descriptor":{"types":["form"],"template":{"id":"afa4dfac-5ac8-4e2b-819d-09e4b482ef8e","descriptor":"item-form-complex-popup","descriptorVersion":2,"values":{"systemFunctions":{},"formGroup":{"path":["item"]}},"content":{"[sidebar]":[{"id":"dfe9a36f-2025-4060-bcec-16d4f64b286f","descriptor":"sidebar-widget","values":{"__renderContentAsync":false,"__renderContentOnDemand":false,"title":"Статус КЭДО","__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[]},"content":{"":[{"id":"b21c9819-bd83-498e-8f53-942916c42b04","descriptor":"kedo.statuses@kedo_status_widget","values":{"__relativeURL":"","__isConstValues":[],"__renderContentOnDemand":false,"app":{"path":["__itemRef"]},"__outlet":"","__baseURL":"","kedo_status":{"path":["item","kedo_status"]}}}]}},{"id":"2f4caa85-bf2f-4379-b888-119b342093c8","descriptor":"sidebar-widget","values":{"title":"Статус в Диадок"},"content":{"":[{"id":"6dbf42cc-a55b-4720-827a-93d271b847b0","descriptor":"diadoc-status","values":{"tooltip":"app-integration@diadoc-status","itemModel":{"path":["itemModel"]},"applicationItem":{"path":["item"]}}}]}},{"id":"cbd8cadb-d5e7-4b19-91da-5881637efc78","descriptor":"sidebar-widget","values":{"title":"Статус подписи"},"content":{"":[{"id":"5476c0e0-829c-4d53-b03b-88b0d6534fb0","descriptor":"app-sign-status","values":{"itemModel":{"path":["itemModel"]}}}]}},{"id":"1c6ef61f-6d0e-41d1-8a1f-211bc70f3d92","descriptor":"sidebar-widget","content":{"":[{"id":"3a3d29c6-7fca-42eb-95f8-74789b8b7f22","descriptor":"docflow-approval-lists","values":{"item":{"path":["itemModel"]}}}]}},{"id":"8326be58-15ff-4903-8ab0-e20b08b8306b","descriptor":"sidebar-widget","content":{"":[{"id":"3a3d29c6-7fca-42eb-95f8-74789b8b7f22","descriptor":"docflow-inform-lists","values":{"item":{"path":["itemModel"]}}}]}},{"id":"07aeb5c8-b251-4f6d-a5f7-217c8deb182e","descriptor":"sidebar-widget","content":{"":[{"id":"1a0ebdad-66c2-4ad8-b050-74bda9847f2a","descriptor":"item-registration","values":{"item":{"path":["itemModel"]},"application":{"path":["application"]}}}]}},{"id":"00103f82-2f58-4cbd-bc81-07e341784f59","descriptor":"sidebar-widget","content":{"":[{"id":"4cc755bb-f919-4ff7-8e47-5c59047dad62","descriptor":"item-status","values":{"item":{"path":["itemModel"]},"application":{"path":["application"]}}}]}},{"id":"184d2de7-2df8-493f-841a-4e0ddbb8060e","descriptor":"sidebar-widget","content":{"":[{"id":"d23366cd-07b0-4ae4-bb2c-73a203ec7786","descriptor":"item-tasks","descriptorVersion":4,"values":{"formGroup":{"path":["item"]},"itemModel":{"path":["itemModel"]}}}]}},{"id":"1e70306c-b439-46a0-af74-f63ae5a8b063","descriptor":"sidebar-widget","content":{"":[{"id":"4dad6c56-a886-42c6-989b-63e2ec75c677","descriptor":"disk-file-versions-widget","values":{"file":{"path":["fileModel"]},"item":{"path":["itemModel"]},"afterChangeCurrentVersionAction":{"path":["versionListAction"]}}}]}},{"id":"7f68300d-5ce0-4eb3-9e75-dea882c541a1","descriptor":"sidebar-widget","content":{"":[{"id":"05c90d54-b3dc-4d28-8b84-f32878377a61","descriptor":"messages-target","values":{"target":{"path":["target"]}}}]}},{"id":"35e4299b-f7ee-4270-b604-44d96e5f334d","descriptor":"sidebar-widget","values":{"__renderContentOnDemand":false,"title":"Задачи связанных элементов","__outlet":"","__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"a066ec92-250f-4b4d-9f5c-6666bfa7ed79","descriptor":"kedo@linked_tasks","descriptorVersion":4,"values":{"__outlet":"","item_ref":{"path":["__itemRef"]},"__baseURL":"","__relativeURL":"","__isConstValues":[],"__renderContentOnDemand":false}}]}}],"[headerControls]":[{"id":"0418a119-d87d-43fb-9a61-455aa5160568","descriptor":"button","values":{"icon":"system_add_round","view":"icon","action":{"path":["addVersionAction"]},"tooltip":"Добавить версию","runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}},{"id":"5a72dd17-31f2-4412-a056-a474e01ac17c","descriptor":"button","values":{"icon":"send_approve","view":"icon","action":{"path":["docflowSendAction"]},"tooltip":"Отправить","runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}},{"id":"b0237e26-4b99-4ce8-9d6f-a78b44c9263b","descriptor":"button","values":{"icon":"lock","view":"icon","label":"Права доступа","action":{"path":["accessSettings"]},"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}},{"id":"17a52e8f-7486-4031-bd01-5838fcfc8f70","descriptor":"extension-zone-toolbar-widget","values":{"item":{"path":["__itemRef"]}}},{"id":"13599e1c-12ed-11eb-adc1-0242ac120002","descriptor":"edo-diadoc-full-widget","values":{"item":{"path":["item"]},"view":"icon","label":"Права доступа","itemModel":{"path":["itemModel"]},"icon":"lock"}},{"id":"1d3e0cf2-9996-43a6-945d-4b949ff7939e","descriptor":"app-signing","descriptorVersion":3,"values":{"label":"Права доступа","signFile":[{"code":"required","name":"Обязательно"}],"itemModel":{"path":["itemModel"]},"showComment":[{"code":"disabled","name":"Не использовать"}],"signAttributes":[{"code":"disabled","name":"Не использовать"}],"preselectedProvider":{"code":"system.__digital_sign_provider/CryptoPro","name":"app.modules.admin.integration@digital-sign-cryptopro-name","translate":true}}}],"[headerUpperTitle]":[{"id":"7fe87b6f-803f-40af-ae04-2c46f1919291","descriptor":"app-navigation-crumbs-tree-widget","values":{"item":{"path":["itemModel"]},"application":{"path":["application"]}}}],"[headerCustomization]":[],"[footer]":[{"id":"8e381e23-aaaf-4cc8-a7f2-a214c6a09b2c","descriptor":"zone-content","values":{"zoneCode":"[footer]"}}],"[content]":[{"id":"25cc10fe-0419-4be1-8bda-266c5657800c","descriptor":"modal-body","content":{"":[{"id":"92e89e9d-b816-40d8-91df-b7fa7047d9fc","descriptor":"tabset","values":{"__isConstValues":[],"__renderContentAsync":false},"content":{"":[{"id":"56b3df8d-7c56-424c-957c-7e00a5eabe6e","descriptor":"tab","values":{"title":"Файл документа","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false},"content":{"":[{"id":"c89e5cb9-a6b6-4122-aaa4-a85c841bd5dc","descriptor":"dynamic-form-row","values":{"showDisplayName":true,"control":{"path":["item","__file"]},"tooltip":null,"required":false,"hideEmpty":false,"__readOnly":true,"bindingMode":false,"__isConstValues":[]}},{"id":"0dbf4799-8d64-4520-b845-e2bbfbdb0fe9","descriptor":"file-preview-download-panel","values":{"file":{"path":["fileModel"]}}},{"id":"b961beb6-e05d-47f1-8745-bfe8958faa9f","descriptor":"file-preview","values":{"file":{"path":["fileModel"]},"fieldFormControl":{"path":["item","__file"]}}}]}},{"id":"0f389b47-9032-4876-9625-25b12227ae9b","descriptor":"tab","values":{"title":"Информация о документе","__isConstValues":[],"__renderContentAsync":false,"__renderContentOnDemand":false},"content":{"":[{"id":"78b1e21a-0f4c-486c-9eb2-752cfee116e9","descriptor":"modal-body","content":{"":[{"id":"d4dc7a42-2f79-4e1a-96d3-154969945ba1","descriptor":"button","values":{"processPopoverSize":[{"code":"default","name":"shared.common.button@widget-process-popover-size-default","translate":true}],"createAppItemSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}},"icon":"system_checklist","view":"default","label":"Скачать информацию об ознакомлении","action":null,"onClick":{"kind":"Function","name":"generateExcelFileFromLna","type":"client"},"runInPopover":null,"runActionEnum":[{"code":"undefined","name":"shared.common.button@widget-runAction-none","translate":true}],"__isConstValues":[],"runProcessSettings":{"kind":"","settings":{"code":"","field":"","binding":null,"namespace":""}}}},{"id":"a2afd973-1a79-40f2-8334-4a8fdf7b813b","descriptor":"dynamic-form","values":{"form":{"path":["item"]},"fields":{"path":["fields"]},"__isConstValues":[]}}]}}]}}]}}]}}]}},"fieldVisibilityConditions":{},"scriptOptions":{"allowNamespace":true},"clientScripts":"import XLSX from \"xlsx.full.min.js\";\n\ndeclare const console: any;\n\nlet allStaff: ApplicationItem\u003cApplication$kedo$staff$Data, any\u003e[];\nlet allUsers: UserItem[];\nlet subdivisions: ApplicationItem\u003cApplication$kedo$structural_subdivision$Data, any\u003e[];\nlet positions: ApplicationItem\u003cApplication$kedo$position$Data, any\u003e[];\n\nasync function onInit(): Promise\u003cvoid\u003e {\n    allStaff = await Namespace.app.staff.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    allUsers = await System.users.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    subdivisions = await Namespace.app.structural_subdivision.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n    positions = await Namespace.app.position.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n};\n\nasync function generateExcelFileFromLna(): Promise\u003cvoid\u003e {\n    const currentLna = await Application.search().where(f =\u003e f.__id.eq(Context.data.__id)).first();\n    const informList = await currentLna!.docflow().getInformLists().then(list =\u003e list[0])\n    const rawData = informList.respondents.map(user =\u003e {\n        const staff = allStaff.find(s =\u003e s.data.ext_user?.id === user.id);\n        if (!staff) {\n            return;\n        };\n        const subdivision = subdivisions.find(s =\u003e staff.data.structural_subdivision?.id === s.id);\n        if (!subdivision) {\n            return;\n        };\n        const position = positions.find(p =\u003e staff.data.position?.id === p.id);\n        if (!position) {\n            return;\n        };\n        const docName = Context.data.__name;\n        const subdivisionName = subdivision.data.__name;\n        const positionName = position.data.__name;\n        const userName = staff.data.__name;\n        let statusText = user.status === \"done\" ? \"Ознакомлен\" : user.status === \"in_progress\" ? \"На ознакомлении\" : \"Отказ от ознакомления\";\n        statusText += ` ${user.ts.format(\"DD.MM.YYYY\")} г.`;\n        const comment = user.comment || \"\";\n        return {\n            \"ЛНА\": docName,\n            \"Подразделение\": subdivisionName,\n            \"Должность\": positionName,\n            \"ФИО\": userName,\n            \"Статус ознакомления\": statusText,\n            \"Комментарий\": comment\n        };\n    }).filter(item =\u003e item != undefined);\n    const docNameLength = Context.data.__name.length;\n    const maxSubdivisionLength = Math.max(...rawData.map(item =\u003e item![\"Подразделение\"].length)) + 1;\n    const maxPositionLength = Math.max(...rawData.map(item =\u003e item![\"Должность\"].length)) + 1;\n    const maxUsernameLength = Math.max(...rawData.map(item =\u003e item![\"ФИО\"].length)) + 1;\n    const maxStatusLength = Math.max(...rawData.map(item =\u003e item![\"Статус ознакомления\"].length)) || 15;\n    const maxCommentLength = Math.max(...rawData.map(item =\u003e item![\"Комментарий\"].length)) + 1;\n    const workbook = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.json_to_sheet(rawData);\n    worksheet[\"!cols\"] = [\n        {wch: docNameLength},\n        {wch: maxSubdivisionLength},\n        {wch: maxPositionLength},\n        {wch: maxUsernameLength},\n        {wch: maxStatusLength},\n        {wch: maxCommentLength},\n    ];\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Ознакомление с ЛНА\");\n    const fileName = `Отчёт по ознакомлению с ${Context.data.__name}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n};\n","clientScriptOptions":{"allowNamespace":true,"allowServer":true},"serverScripts":"/* Server scripts module */\n","serverScriptOptions":{"allowNamespace":true},"widgetZones":[{"code":"[footer]"}],"dataFieldCode":"item"},"dataNamespace":"kedo","dataCode":"docs_lna","runtime":{"version":1,"clientScripts":"System.register([\"xlsx.full.min.js\"], function (exports_1, context_1) {\n    \"use strict\";\n    var xlsx_full_min_js_1;\n    var __moduleName = context_1 \u0026\u0026 context_1.id;\n    function default_1(Context, ViewContext, Server, System) {\n        let allStaff;\n        let allUsers;\n        let subdivisions;\n        let positions;\n        async function onInit() {\n            allStaff = await Namespace.app.staff.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n            allUsers = await System.users.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n            subdivisions = await Namespace.app.structural_subdivision.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n            positions = await Namespace.app.position.search().where(f =\u003e f.__deletedAt.eq(null)).size(10000).all();\n        }\n        ;\n        async function generateExcelFileFromLna() {\n            const currentLna = await Application.search().where(f =\u003e f.__id.eq(Context.data.__id)).first();\n            const informList = await currentLna.docflow().getInformLists().then(list =\u003e list[0]);\n            const rawData = informList.respondents.map(user =\u003e {\n                const staff = allStaff.find(s =\u003e { var _a; return ((_a = s.data.ext_user) === null || _a === void 0 ? void 0 : _a.id) === user.id; });\n                if (!staff) {\n                    return;\n                }\n                ;\n                const subdivision = subdivisions.find(s =\u003e { var _a; return ((_a = staff.data.structural_subdivision) === null || _a === void 0 ? void 0 : _a.id) === s.id; });\n                if (!subdivision) {\n                    return;\n                }\n                ;\n                const position = positions.find(p =\u003e { var _a; return ((_a = staff.data.position) === null || _a === void 0 ? void 0 : _a.id) === p.id; });\n                if (!position) {\n                    return;\n                }\n                ;\n                const docName = Context.data.__name;\n                const subdivisionName = subdivision.data.__name;\n                const positionName = position.data.__name;\n                const userName = staff.data.__name;\n                let statusText = user.status === \"done\" ? \"Ознакомлен\" : user.status === \"in_progress\" ? \"На ознакомлении\" : \"Отказ от ознакомления\";\n                statusText += ` ${user.ts.format(\"DD.MM.YYYY\")} г.`;\n                const comment = user.comment || \"\";\n                return {\n                    \"ЛНА\": docName,\n                    \"Подразделение\": subdivisionName,\n                    \"Должность\": positionName,\n                    \"ФИО\": userName,\n                    \"Статус ознакомления\": statusText,\n                    \"Комментарий\": comment\n                };\n            }).filter(item =\u003e item != undefined);\n            const docNameLength = Context.data.__name.length;\n            const maxSubdivisionLength = Math.max(...rawData.map(item =\u003e item[\"Подразделение\"].length)) + 1;\n            const maxPositionLength = Math.max(...rawData.map(item =\u003e item[\"Должность\"].length)) + 1;\n            const maxUsernameLength = Math.max(...rawData.map(item =\u003e item[\"ФИО\"].length)) + 1;\n            const maxStatusLength = Math.max(...rawData.map(item =\u003e item[\"Статус ознакомления\"].length)) || 15;\n            const maxCommentLength = Math.max(...rawData.map(item =\u003e item[\"Комментарий\"].length)) + 1;\n            const workbook = xlsx_full_min_js_1.default.utils.book_new();\n            const worksheet = xlsx_full_min_js_1.default.utils.json_to_sheet(rawData);\n            worksheet[\"!cols\"] = [\n                { wch: docNameLength },\n                { wch: maxSubdivisionLength },\n                { wch: maxPositionLength },\n                { wch: maxUsernameLength },\n                { wch: maxStatusLength },\n                { wch: maxCommentLength },\n            ];\n            xlsx_full_min_js_1.default.utils.book_append_sheet(workbook, worksheet, \"Ознакомление с ЛНА\");\n            const fileName = `Отчёт по ознакомлению с ${Context.data.__name}.xlsx`;\n            xlsx_full_min_js_1.default.writeFile(workbook, fileName);\n        }\n        ;\n        return {\n            onInit,\n            generateExcelFileFromLna\n        };\n    }\n    exports_1(\"default\", default_1);\n    return {\n        setters: [\n            function (xlsx_full_min_js_1_1) {\n                xlsx_full_min_js_1 = xlsx_full_min_js_1_1;\n            }\n        ],\n        execute: function () {\n        }\n    };\n});\n","clientFnDeclarations":[{"name":"onInit","parameters":[],"type":"[object Object]"},{"name":"generateExcelFileFromLna","parameters":[],"type":"[object Object]"}]},"__createdAt":"2024-05-27T06:36:17.764093902Z","__createdBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__updatedAt":"2024-06-05T06:33:38.563516007Z","__updatedBy":"59e0911f-230a-4b6d-becf-6b302a91977a","__deletedAt":null}
